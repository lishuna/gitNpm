{"version":3,"file":"jdb-plg-ui.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/packages/http/esm5/src/backends/browser_xhr.js","../../node_modules/packages/http/esm5/src/enums.js","../../node_modules/packages/http/esm5/src/headers.js","../../node_modules/packages/http/esm5/src/base_response_options.js","../../node_modules/packages/http/esm5/src/interfaces.js","../../node_modules/packages/http/esm5/src/http_utils.js","../../node_modules/packages/http/esm5/src/url_search_params.js","../../node_modules/packages/http/esm5/src/body.js","../../node_modules/packages/http/esm5/src/static_response.js","../../node_modules/packages/http/esm5/src/backends/browser_jsonp.js","../../node_modules/packages/http/esm5/src/backends/jsonp_backend.js","../../node_modules/packages/http/esm5/src/backends/xhr_backend.js","../../node_modules/packages/http/esm5/src/base_request_options.js","../../node_modules/packages/http/esm5/src/static_request.js","../../node_modules/packages/http/esm5/src/http.js","../../node_modules/packages/http/esm5/src/http_module.js","../../node_modules/packages/http/esm5/src/version.js","../../__jdbui_components/components/jdb-plg-toast/jdb-plg-toast.component.ts","../../__jdbui_components/components/jdb-plg-tab/jdb-tab.component.ts","../../__jdbui_components/components/show-picture/show-picture.component.ts","../../__jdbui_components/components/picture-viewer/picture-viewer.component.ts","../../__jdbui_components/directive/drag.directive.ts","../../__jdbui_components/components/jdb-plg-pagination/jdb-plg-pagination.component.ts","../../__jdbui_components/services/jdb-plg-base/query-string.ts","../../__jdbui_components/services/jdb-plg-base/object-assign.ts","../../__jdbui_components/services/jdb-plg-base/jdb-plg-base.service.ts","../../__jdbui_components/components/jdb-plg-button/jdb-plg-button.component.ts","../../__jdbui_components/components/jdb-plg-dialog/jdb-plg-dialog.component.ts","../../__jdbui_components/directive/only-number.directive.ts","../../__jdbui_components/components/jdb-plg-select/jdb-plg-select.component.ts","../../__jdbui_components/components/jdb-plg-input/jdb-plg-input.component.ts","../../__jdbui_components/services/jdb-plg-base/fill-table.service.ts","../../__jdbui_components/services/jdb-plg-base/common-method.service.ts","../../__jdbui_components/components/jdb-plg-table-error/jdb-plg-table-error.component.ts","../../__jdbui_components/pipe/province-reform.pipe.ts","../../__jdbui_components/pipe/amount-reform.pipe.ts","../../__jdbui_components/jdb-plg-ui.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\n/**\n * A backend for http that uses the `XMLHttpRequest` browser API.\n *\n * Take care not to evaluate this in non-browser contexts.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((new XMLHttpRequest())); };\n    BrowserXhr.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = function () { return []; };\n    return BrowserXhr;\n}());\nexport { BrowserXhr };\nfunction BrowserXhr_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BrowserXhr.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BrowserXhr.ctorParameters;\n}\n//# sourceMappingURL=browser_xhr.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar RequestMethod = {\n    Get: 0,\n    Post: 1,\n    Put: 2,\n    Delete: 3,\n    Options: 4,\n    Head: 5,\n    Patch: 6,\n};\nexport { RequestMethod };\nRequestMethod[RequestMethod.Get] = \"Get\";\nRequestMethod[RequestMethod.Post] = \"Post\";\nRequestMethod[RequestMethod.Put] = \"Put\";\nRequestMethod[RequestMethod.Delete] = \"Delete\";\nRequestMethod[RequestMethod.Options] = \"Options\";\nRequestMethod[RequestMethod.Head] = \"Head\";\nRequestMethod[RequestMethod.Patch] = \"Patch\";\n/** @enum {number} */\nvar ReadyState = {\n    Unsent: 0,\n    Open: 1,\n    HeadersReceived: 2,\n    Loading: 3,\n    Done: 4,\n    Cancelled: 5,\n};\nexport { ReadyState };\nReadyState[ReadyState.Unsent] = \"Unsent\";\nReadyState[ReadyState.Open] = \"Open\";\nReadyState[ReadyState.HeadersReceived] = \"HeadersReceived\";\nReadyState[ReadyState.Loading] = \"Loading\";\nReadyState[ReadyState.Done] = \"Done\";\nReadyState[ReadyState.Cancelled] = \"Cancelled\";\n/** @enum {number} */\nvar ResponseType = {\n    Basic: 0,\n    Cors: 1,\n    Default: 2,\n    Error: 3,\n    Opaque: 4,\n};\nexport { ResponseType };\nResponseType[ResponseType.Basic] = \"Basic\";\nResponseType[ResponseType.Cors] = \"Cors\";\nResponseType[ResponseType.Default] = \"Default\";\nResponseType[ResponseType.Error] = \"Error\";\nResponseType[ResponseType.Opaque] = \"Opaque\";\n/** @enum {number} */\nvar ContentType = {\n    NONE: 0,\n    JSON: 1,\n    FORM: 2,\n    FORM_DATA: 3,\n    TEXT: 4,\n    BLOB: 5,\n    ARRAY_BUFFER: 6,\n};\nexport { ContentType };\nContentType[ContentType.NONE] = \"NONE\";\nContentType[ContentType.JSON] = \"JSON\";\nContentType[ContentType.FORM] = \"FORM\";\nContentType[ContentType.FORM_DATA] = \"FORM_DATA\";\nContentType[ContentType.TEXT] = \"TEXT\";\nContentType[ContentType.BLOB] = \"BLOB\";\nContentType[ContentType.ARRAY_BUFFER] = \"ARRAY_BUFFER\";\n/** @enum {number} */\nvar ResponseContentType = {\n    Text: 0,\n    Json: 1,\n    ArrayBuffer: 2,\n    Blob: 3,\n};\nexport { ResponseContentType };\nResponseContentType[ResponseContentType.Text] = \"Text\";\nResponseContentType[ResponseContentType.Json] = \"Json\";\nResponseContentType[ResponseContentType.ArrayBuffer] = \"ArrayBuffer\";\nResponseContentType[ResponseContentType.Blob] = \"Blob\";\n//# sourceMappingURL=enums.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nHeaders = /** @class */ (function () {\n    // TODO(vicb): any -> string|string[]\n    function Headers(headers) {\n        var _this = this;\n        /**\n         * \\@internal header names are lower case\n         */\n        this._headers = new Map();\n        /**\n         * \\@internal map lower case names to actual names\n         */\n        this._normalizedNames = new Map();\n        if (!headers) {\n            return;\n        }\n        if (headers instanceof Headers) {\n            headers.forEach(function (values, name) {\n                values.forEach(function (value) { return _this.append(name, value); });\n            });\n            return;\n        }\n        Object.keys(headers).forEach(function (name) {\n            var /** @type {?} */ values = Array.isArray(headers[name]) ? headers[name] : [headers[name]];\n            _this.delete(name);\n            values.forEach(function (value) { return _this.append(name, value); });\n        });\n    }\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     */\n    /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    Headers.fromResponseHeaderString = /**\n     * Returns a new Headers instance from the given DOMString of Response Headers\n     * @param {?} headersString\n     * @return {?}\n     */\n    function (headersString) {\n        var /** @type {?} */ headers = new Headers();\n        headersString.split('\\n').forEach(function (line) {\n            var /** @type {?} */ index = line.indexOf(':');\n            if (index > 0) {\n                var /** @type {?} */ name_1 = line.slice(0, index);\n                var /** @type {?} */ value = line.slice(index + 1).trim();\n                headers.set(name_1, value);\n            }\n        });\n        return headers;\n    };\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     */\n    /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.append = /**\n     * Appends a header to existing list of header values for a given header name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            this.set(name, value);\n        }\n        else {\n            values.push(value);\n        }\n    };\n    /**\n     * Deletes all header values for the given name.\n     */\n    /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.delete = /**\n     * Deletes all header values for the given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        this._normalizedNames.delete(lcName);\n        this._headers.delete(lcName);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    Headers.prototype.forEach = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this._headers.forEach(function (values, lcName) { return fn(values, _this._normalizedNames.get(lcName), _this._headers); });\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.get = /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ values = this.getAll(name);\n        if (values === null) {\n            return null;\n        }\n        return values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Checks for existence of header by given name.\n     */\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.has = /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._headers.has(name.toLowerCase()); };\n    /**\n     * Returns the names of the headers\n     */\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    Headers.prototype.keys = /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    function () { return Array.from(this._normalizedNames.values()); };\n    /**\n     * Sets or overrides header value for given name.\n     */\n    /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    Headers.prototype.set = /**\n     * Sets or overrides header value for given name.\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (Array.isArray(value)) {\n            if (value.length) {\n                this._headers.set(name.toLowerCase(), [value.join(',')]);\n            }\n        }\n        else {\n            this._headers.set(name.toLowerCase(), [value]);\n        }\n        this.mayBeSetNormalizedName(name);\n    };\n    /**\n     * Returns values of all headers.\n     */\n    /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    Headers.prototype.values = /**\n     * Returns values of all headers.\n     * @return {?}\n     */\n    function () { return Array.from(this._headers.values()); };\n    /**\n     * Returns string of all headers.\n     */\n    // TODO(vicb): returns {[name: string]: string[]}\n    /**\n     * Returns string of all headers.\n     * @return {?}\n     */\n    Headers.prototype.toJSON = /**\n     * Returns string of all headers.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ serialized = {};\n        this._headers.forEach(function (values, name) {\n            var /** @type {?} */ split = [];\n            values.forEach(function (v) { return split.push.apply(split, v.split(',')); });\n            serialized[/** @type {?} */ ((_this._normalizedNames.get(name)))] = split;\n        });\n        return serialized;\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.getAll = /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.has(name) ? this._headers.get(name.toLowerCase()) || null : null;\n    };\n    /**\n     * This method is not implemented.\n     */\n    /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    Headers.prototype.entries = /**\n     * This method is not implemented.\n     * @return {?}\n     */\n    function () { throw new Error('\"entries\" method is not implemented on Headers class'); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Headers.prototype.mayBeSetNormalizedName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ lcName = name.toLowerCase();\n        if (!this._normalizedNames.has(lcName)) {\n            this._normalizedNames.set(lcName, name);\n        }\n    };\n    return Headers;\n}());\n/**\n * Polyfill for [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers), as\n * specified in the [Fetch Spec](https://fetch.spec.whatwg.org/#headers-class).\n *\n * The only known difference between this `Headers` implementation and the spec is the\n * lack of an `entries` method.\n *\n * ### Example\n *\n * ```\n * import {Headers} from '\\@angular/http';\n *\n * var firstHeaders = new Headers();\n * firstHeaders.append('Content-Type', 'image/jpeg');\n * console.log(firstHeaders.get('Content-Type')) //'image/jpeg'\n *\n * // Create headers from Plain Old JavaScript Object\n * var secondHeaders = new Headers({\n *   'X-My-Custom-Header': 'Angular'\n * });\n * console.log(secondHeaders.get('X-My-Custom-Header')); //'Angular'\n *\n * var thirdHeaders = new Headers(secondHeaders);\n * console.log(thirdHeaders.get('X-My-Custom-Header')); //'Angular'\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { Headers };\nfunction Headers_tsickle_Closure_declarations() {\n    /**\n     * \\@internal header names are lower case\n     * @type {?}\n     */\n    Headers.prototype._headers;\n    /**\n     * \\@internal map lower case names to actual names\n     * @type {?}\n     */\n    Headers.prototype._normalizedNames;\n}\n//# sourceMappingURL=headers.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { ResponseType } from './enums';\nimport { Headers } from './headers';\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nResponseOptions = /** @class */ (function () {\n    function ResponseOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var body = opts.body, status = opts.status, headers = opts.headers, statusText = opts.statusText, type = opts.type, url = opts.url;\n        this.body = body != null ? body : null;\n        this.status = status != null ? status : null;\n        this.headers = headers != null ? headers : null;\n        this.statusText = statusText != null ? statusText : null;\n        this.type = type != null ? type : null;\n        this.url = url != null ? url : null;\n    }\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     */\n    /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    ResponseOptions.prototype.merge = /**\n     * Creates a copy of the `ResponseOptions` instance, using the optional input as values to\n     * override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * This may be useful when sharing a base `ResponseOptions` object inside tests,\n     * where certain properties may change from test to test.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/1lXquqFfgduTFBWjNoRE?p=preview))\n     *\n     * ```typescript\n     * import {ResponseOptions, Response} from '\\@angular/http';\n     *\n     * var options = new ResponseOptions({\n     *   body: {name: 'Jeff'}\n     * });\n     * var res = new Response(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('options.url:', options.url); // null\n     * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n     * console.log('res.url:', res.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        return new ResponseOptions({\n            body: options && options.body != null ? options.body : this.body,\n            status: options && options.status != null ? options.status : this.status,\n            headers: options && options.headers != null ? options.headers : this.headers,\n            statusText: options && options.statusText != null ? options.statusText : this.statusText,\n            type: options && options.type != null ? options.type : this.type,\n            url: options && options.url != null ? options.url : this.url,\n        });\n    };\n    return ResponseOptions;\n}());\n/**\n * Creates a response options object to be optionally provided when instantiating a\n * {\\@link Response}.\n *\n * This class is based on the `ResponseInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#responseinit).\n *\n * All values are null by default. Typical defaults can be found in the\n * {\\@link BaseResponseOptions} class, which sub-classes `ResponseOptions`.\n *\n * This class may be used in tests to build {\\@link Response Responses} for\n * mock responses (see {\\@link MockBackend}).\n *\n * ### Example ([live demo](http://plnkr.co/edit/P9Jkk8e8cz6NVzbcxEsD?p=preview))\n *\n * ```typescript\n * import {ResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new ResponseOptions({\n *   body: '{\"name\":\"Jeff\"}'\n * });\n * var res = new Response(options);\n *\n * console.log('res.json():', res.json()); // Object {name: \"Jeff\"}\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { ResponseOptions };\nfunction ResponseOptions_tsickle_Closure_declarations() {\n    /**\n     * String, Object, ArrayBuffer or Blob representing the body of the {\\@link Response}.\n     * @type {?}\n     */\n    ResponseOptions.prototype.body;\n    /**\n     * Http {\\@link http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html status code}\n     * associated with the response.\n     * @type {?}\n     */\n    ResponseOptions.prototype.status;\n    /**\n     * Response {\\@link Headers headers}\n     * @type {?}\n     */\n    ResponseOptions.prototype.headers;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ResponseOptions.prototype.statusText;\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    ResponseOptions.prototype.type;\n    /** @type {?} */\n    ResponseOptions.prototype.url;\n}\n/**\n * Subclass of {\\@link ResponseOptions}, with default values.\n *\n * Default values:\n *  * status: 200\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link ResponseOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create {\\@link Response Responses}.\n *\n * ### Example ([live demo](http://plnkr.co/edit/qv8DLT?p=preview))\n *\n * ```typescript\n * import {provide} from '\\@angular/core';\n * import {bootstrap} from '\\@angular/platform-browser/browser';\n * import {HTTP_PROVIDERS, Headers, Http, BaseResponseOptions, ResponseOptions} from\n * '\\@angular/http';\n * import {App} from './myapp';\n *\n * class MyOptions extends BaseResponseOptions {\n *   headers:Headers = new Headers({network: 'github'});\n * }\n *\n * bootstrap(App, [HTTP_PROVIDERS, {provide: ResponseOptions, useClass: MyOptions}]);\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Response}\n * object.\n *\n * ### Example ([live demo](http://plnkr.co/edit/VngosOWiaExEtbstDoix?p=preview))\n *\n * ```\n * import {BaseResponseOptions, Response} from '\\@angular/http';\n *\n * var options = new BaseResponseOptions();\n * var res = new Response(options.merge({\n *   body: 'Angular',\n *   headers: new Headers({framework: 'angular'})\n * }));\n * console.log('res.headers.get(\"framework\"):', res.headers.get('framework')); // angular\n * console.log('res.text():', res.text()); // Angular;\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar BaseResponseOptions = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseResponseOptions, _super);\n    function BaseResponseOptions() {\n        return _super.call(this, { status: 200, statusText: 'Ok', type: ResponseType.Default, headers: new Headers() }) || this;\n    }\n    BaseResponseOptions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BaseResponseOptions.ctorParameters = function () { return []; };\n    return BaseResponseOptions;\n}(ResponseOptions));\nexport { BaseResponseOptions };\nfunction BaseResponseOptions_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BaseResponseOptions.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BaseResponseOptions.ctorParameters;\n}\n//# sourceMappingURL=base_response_options.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nvar /**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nConnectionBackend = /** @class */ (function () {\n    function ConnectionBackend() {\n    }\n    return ConnectionBackend;\n}());\n/**\n * Abstract class from which real backends are derived.\n *\n * The primary purpose of a `ConnectionBackend` is to create new connections to fulfill a given\n * {\\@link Request}.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nexport { ConnectionBackend };\nfunction ConnectionBackend_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} request\n     * @return {?}\n     */\n    ConnectionBackend.prototype.createConnection = function (request) { };\n}\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nvar /**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nConnection = /** @class */ (function () {\n    function Connection() {\n    }\n    return Connection;\n}());\n/**\n * Abstract class from which real connections are derived.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nexport { Connection };\nfunction Connection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Connection.prototype.readyState;\n    /** @type {?} */\n    Connection.prototype.request;\n    /** @type {?} */\n    Connection.prototype.response;\n}\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nvar /**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nXSRFStrategy = /** @class */ (function () {\n    function XSRFStrategy() {\n    }\n    return XSRFStrategy;\n}());\n/**\n * An XSRFStrategy configures XSRF protection (e.g. via headers) on an HTTP request.\n *\n * @deprecated use \\@angular/common/http instead\n * @abstract\n */\nexport { XSRFStrategy };\nfunction XSRFStrategy_tsickle_Closure_declarations() {\n    /**\n     * @abstract\n     * @param {?} req\n     * @return {?}\n     */\n    XSRFStrategy.prototype.configureRequest = function (req) { };\n}\n/**\n * Interface for options to construct a RequestOptions, based on\n * [RequestInit](https://fetch.spec.whatwg.org/#requestinit) from the Fetch spec.\n *\n * @deprecated use \\@angular/common/http instead\n * @record\n */\nexport function RequestOptionsArgs() { }\nfunction RequestOptionsArgs_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.url;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.method;\n    /**\n     * @deprecated from 4.0.0. Use params instead.\n     * @type {?|undefined}\n     */\n    RequestOptionsArgs.prototype.search;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.params;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.headers;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.body;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.withCredentials;\n    /** @type {?|undefined} */\n    RequestOptionsArgs.prototype.responseType;\n}\n/**\n * Required structure when constructing new Request();\n * @record\n */\nexport function RequestArgs() { }\nfunction RequestArgs_tsickle_Closure_declarations() {\n    /** @type {?} */\n    RequestArgs.prototype.url;\n}\n/**\n * Interface for options to construct a Response, based on\n * [ResponseInit](https://fetch.spec.whatwg.org/#responseinit) from the Fetch spec.\n *\n * @deprecated use \\@angular/common/http instead\n * @record\n */\nexport function ResponseOptionsArgs() { }\nfunction ResponseOptionsArgs_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.body;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.status;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.statusText;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.headers;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.type;\n    /** @type {?|undefined} */\n    ResponseOptionsArgs.prototype.url;\n}\n//# sourceMappingURL=interfaces.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { RequestMethod } from './enums';\n/**\n * @param {?} method\n * @return {?}\n */\nexport function normalizeMethodName(method) {\n    if (typeof method !== 'string')\n        return method;\n    switch (method.toUpperCase()) {\n        case 'GET':\n            return RequestMethod.Get;\n        case 'POST':\n            return RequestMethod.Post;\n        case 'PUT':\n            return RequestMethod.Put;\n        case 'DELETE':\n            return RequestMethod.Delete;\n        case 'OPTIONS':\n            return RequestMethod.Options;\n        case 'HEAD':\n            return RequestMethod.Head;\n        case 'PATCH':\n            return RequestMethod.Patch;\n    }\n    throw new Error(\"Invalid request method. The method \\\"\" + method + \"\\\" is not supported.\");\n}\nexport var /** @type {?} */ isSuccess = function (status) { return (status >= 200 && status < 300); };\n/**\n * @param {?} xhr\n * @return {?}\n */\nexport function getResponseURL(xhr) {\n    if ('responseURL' in xhr) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer8(input) {\n    var /** @type {?} */ view = new Uint8Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nexport function stringToArrayBuffer(input) {\n    var /** @type {?} */ view = new Uint16Array(input.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ strLen = input.length; i < strLen; i++) {\n        view[i] = input.charCodeAt(i);\n    }\n    return view.buffer;\n}\n//# sourceMappingURL=http_utils.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?=} rawParams\n * @return {?}\n */\nfunction paramParser(rawParams) {\n    if (rawParams === void 0) { rawParams = ''; }\n    var /** @type {?} */ map = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ? [param, ''] : [param.slice(0, eqIdx), param.slice(eqIdx + 1)], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\n/**\n * @deprecated use \\@angular/common/http instead\n *\n */\nvar /**\n * @deprecated use \\@angular/common/http instead\n *\n */\nQueryEncoder = /** @class */ (function () {\n    function QueryEncoder() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    QueryEncoder.prototype.encodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return standardEncoding(v); };\n    return QueryEncoder;\n}());\n/**\n * @deprecated use \\@angular/common/http instead\n *\n */\nexport { QueryEncoder };\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nURLSearchParams = /** @class */ (function () {\n    function URLSearchParams(rawParams, queryEncoder) {\n        if (rawParams === void 0) { rawParams = ''; }\n        if (queryEncoder === void 0) { queryEncoder = new QueryEncoder(); }\n        this.rawParams = rawParams;\n        this.queryEncoder = queryEncoder;\n        this.paramsMap = paramParser(rawParams);\n    }\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.clone = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ clone = new URLSearchParams('', this.queryEncoder);\n        clone.appendAll(this);\n        return clone;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.has = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.paramsMap.has(param); };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.get = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        var /** @type {?} */ storedParam = this.paramsMap.get(param);\n        return Array.isArray(storedParam) ? storedParam[0] : null;\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.getAll = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.paramsMap.get(param) || []; };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.set = /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    function (param, val) {\n        if (val === void 0 || val === null) {\n            this.delete(param);\n            return;\n        }\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.length = 0;\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `set(name, values[0])`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.setAll = /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            list.push(value[0]);\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    URLSearchParams.prototype.append = /**\n     * @param {?} param\n     * @param {?} val\n     * @return {?}\n     */\n    function (param, val) {\n        if (val === void 0 || val === null)\n            return;\n        var /** @type {?} */ list = this.paramsMap.get(param) || [];\n        list.push(val);\n        this.paramsMap.set(param, list);\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `append(name, value)`\n    // for each value in `values`.\n    //\n    // E.g: \"a=[1,2], c=[8]\" + \"a=[3,4], b=[7]\" = \"a=[1,2,3,4], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.appendAll = /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    // A merge operation\n    // For each name-values pair in `searchParams`, perform `delete(name)`,\n    // followed by `set(name, values)`\n    //\n    // E.g: \"a=[1,2,3], c=[8]\" + \"a=[4,5,6], b=[7]\" = \"a=[4,5,6], c=[8], b=[7]\"\n    //\n    // TODO(@caitp): document this better\n    /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    URLSearchParams.prototype.replaceAll = /**\n     * @param {?} searchParams\n     * @return {?}\n     */\n    function (searchParams) {\n        var _this = this;\n        searchParams.paramsMap.forEach(function (value, param) {\n            var /** @type {?} */ list = _this.paramsMap.get(param) || [];\n            list.length = 0;\n            for (var /** @type {?} */ i = 0; i < value.length; ++i) {\n                list.push(value[i]);\n            }\n            _this.paramsMap.set(param, list);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    URLSearchParams.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ paramsList = [];\n        this.paramsMap.forEach(function (values, k) {\n            values.forEach(function (v) {\n                return paramsList.push(_this.queryEncoder.encodeKey(k) + '=' + _this.queryEncoder.encodeValue(v));\n            });\n        });\n        return paramsList.join('&');\n    };\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    URLSearchParams.prototype.delete = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { this.paramsMap.delete(param); };\n    return URLSearchParams;\n}());\n/**\n * Map-like representation of url search parameters, based on\n * [URLSearchParams](https://url.spec.whatwg.org/#urlsearchparams) in the url living standard,\n * with several extensions for merging URLSearchParams objects:\n *   - setAll()\n *   - appendAll()\n *   - replaceAll()\n *\n * This class accepts an optional second parameter of ${\\@link QueryEncoder},\n * which is used to serialize parameters before making a request. By default,\n * `QueryEncoder` encodes keys and values of parameters using `encodeURIComponent`,\n * and then un-encodes certain characters that are allowed to be part of the query\n * according to IETF RFC 3986: https://tools.ietf.org/html/rfc3986.\n *\n * These are the characters that are not encoded: `! $ \\' ( ) * + , ; A 9 - . _ ~ ? /`\n *\n * If the set of allowed query characters is not acceptable for a particular backend,\n * `QueryEncoder` can be subclassed and provided as the 2nd argument to URLSearchParams.\n *\n * ```\n * import {URLSearchParams, QueryEncoder} from '\\@angular/http';\n * class MyQueryEncoder extends QueryEncoder {\n *   encodeKey(k: string): string {\n *     return myEncodingFunction(k);\n *   }\n *\n *   encodeValue(v: string): string {\n *     return myEncodingFunction(v);\n *   }\n * }\n *\n * let params = new URLSearchParams('', new MyQueryEncoder());\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nexport { URLSearchParams };\nfunction URLSearchParams_tsickle_Closure_declarations() {\n    /** @type {?} */\n    URLSearchParams.prototype.paramsMap;\n    /** @type {?} */\n    URLSearchParams.prototype.rawParams;\n    /** @type {?} */\n    URLSearchParams.prototype.queryEncoder;\n}\n//# sourceMappingURL=url_search_params.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { stringToArrayBuffer } from './http_utils';\nimport { URLSearchParams } from './url_search_params';\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nvar /**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nBody = /** @class */ (function () {\n    function Body() {\n    }\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     */\n    /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    Body.prototype.json = /**\n     * Attempts to return body as parsed `JSON` object, or raises an exception.\n     * @return {?}\n     */\n    function () {\n        if (typeof this._body === 'string') {\n            return JSON.parse(/** @type {?} */ (this._body));\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return JSON.parse(this.text());\n        }\n        return this._body;\n    };\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     */\n    /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    Body.prototype.text = /**\n     * Returns the body as a string, presuming `toString()` can be called on the response body.\n     *\n     * When decoding an `ArrayBuffer`, the optional `encodingHint` parameter determines how the\n     * bytes in the buffer will be interpreted. Valid values are:\n     *\n     * - `legacy` - incorrectly interpret the bytes as UTF-16 (technically, UCS-2). Only characters\n     *   in the Basic Multilingual Plane are supported, surrogate pairs are not handled correctly.\n     *   In addition, the endianness of the 16-bit octet pairs in the `ArrayBuffer` is not taken\n     *   into consideration. This is the default behavior to avoid breaking apps, but should be\n     *   considered deprecated.\n     *\n     * - `iso-8859` - interpret the bytes as ISO-8859 (which can be used for ASCII encoded text).\n     * @param {?=} encodingHint\n     * @return {?}\n     */\n    function (encodingHint) {\n        if (encodingHint === void 0) { encodingHint = 'legacy'; }\n        if (this._body instanceof URLSearchParams) {\n            return this._body.toString();\n        }\n        if (this._body instanceof ArrayBuffer) {\n            switch (encodingHint) {\n                case 'legacy':\n                    return String.fromCharCode.apply(null, new Uint16Array(/** @type {?} */ (this._body)));\n                case 'iso-8859':\n                    return String.fromCharCode.apply(null, new Uint8Array(/** @type {?} */ (this._body)));\n                default:\n                    throw new Error(\"Invalid value for encodingHint: \" + encodingHint);\n            }\n        }\n        if (this._body == null) {\n            return '';\n        }\n        if (typeof this._body === 'object') {\n            return JSON.stringify(this._body, null, 2);\n        }\n        return this._body.toString();\n    };\n    /**\n     * Return the body as an ArrayBuffer\n     */\n    /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    Body.prototype.arrayBuffer = /**\n     * Return the body as an ArrayBuffer\n     * @return {?}\n     */\n    function () {\n        if (this._body instanceof ArrayBuffer) {\n            return /** @type {?} */ (this._body);\n        }\n        return stringToArrayBuffer(this.text());\n    };\n    /**\n      * Returns the request's body as a Blob, assuming that body exists.\n      */\n    /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    Body.prototype.blob = /**\n     * Returns the request's body as a Blob, assuming that body exists.\n     * @return {?}\n     */\n    function () {\n        if (this._body instanceof Blob) {\n            return /** @type {?} */ (this._body);\n        }\n        if (this._body instanceof ArrayBuffer) {\n            return new Blob([this._body]);\n        }\n        throw new Error('The request body isn\\'t either a blob or an array buffer');\n    };\n    return Body;\n}());\n/**\n * HTTP request body used by both {\\@link Request} and {\\@link Response}\n * https://fetch.spec.whatwg.org/#body\n * @abstract\n */\nexport { Body };\nfunction Body_tsickle_Closure_declarations() {\n    /**\n     * \\@internal\n     * @type {?}\n     */\n    Body.prototype._body;\n}\n//# sourceMappingURL=body.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Body } from './body';\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use \\@angular/common/http instead\n */\nResponse = /** @class */ (function (_super) {\n    tslib_1.__extends(Response, _super);\n    function Response(responseOptions) {\n        var _this = _super.call(this) || this;\n        _this._body = responseOptions.body;\n        _this.status = /** @type {?} */ ((responseOptions.status));\n        _this.ok = (_this.status >= 200 && _this.status <= 299);\n        _this.statusText = responseOptions.statusText;\n        _this.headers = responseOptions.headers;\n        _this.type = /** @type {?} */ ((responseOptions.type));\n        _this.url = /** @type {?} */ ((responseOptions.url));\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    Response.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"Response with status: \" + this.status + \" \" + this.statusText + \" for URL: \" + this.url;\n    };\n    return Response;\n}(Body));\n/**\n * Creates `Response` instances from provided values.\n *\n * Though this object isn't\n * usually instantiated by end-users, it is the primary object interacted with when it comes time to\n * add data to a view.\n *\n * ### Example\n *\n * ```\n * http.request('my-friends.txt').subscribe(response => this.friends = response.text());\n * ```\n *\n * The Response's interface is inspired by the Response constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#response-class), but is considered a static value whose body\n * can be accessed many times. There are other differences in the implementation, but this is the\n * most significant.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { Response };\nfunction Response_tsickle_Closure_declarations() {\n    /**\n     * One of \"basic\", \"cors\", \"default\", \"error\", or \"opaque\".\n     *\n     * Defaults to \"default\".\n     * @type {?}\n     */\n    Response.prototype.type;\n    /**\n     * True if the response's status is within 200-299\n     * @type {?}\n     */\n    Response.prototype.ok;\n    /**\n     * URL of response.\n     *\n     * Defaults to empty string.\n     * @type {?}\n     */\n    Response.prototype.url;\n    /**\n     * Status code returned by server.\n     *\n     * Defaults to 200.\n     * @type {?}\n     */\n    Response.prototype.status;\n    /**\n     * Text representing the corresponding reason phrase to the `status`, as defined in [ietf rfc 2616\n     * section 6.1.1](https://tools.ietf.org/html/rfc2616#section-6.1.1)\n     *\n     * Defaults to \"OK\"\n     * @type {?}\n     */\n    Response.prototype.statusText;\n    /**\n     * Non-standard property\n     *\n     * Denotes how many of the response body's bytes have been loaded, for example if the response is\n     * the result of a progress event.\n     * @type {?}\n     */\n    Response.prototype.bytesLoaded;\n    /**\n     * Non-standard property\n     *\n     * Denotes how many bytes are expected in the final response body.\n     * @type {?}\n     */\n    Response.prototype.totalBytes;\n    /**\n     * Headers object based on the `Headers` class in the [Fetch\n     * Spec](https://fetch.spec.whatwg.org/#headers-class).\n     * @type {?}\n     */\n    Response.prototype.headers;\n}\n//# sourceMappingURL=static_response.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nvar /** @type {?} */ _nextRequestId = 0;\nexport var /** @type {?} */ JSONP_HOME = '__ng_jsonp__';\nvar /** @type {?} */ _jsonpConnections = null;\n/**\n * @return {?}\n */\nfunction _getJsonpConnections() {\n    var /** @type {?} */ w = typeof window == 'object' ? window : {};\n    if (_jsonpConnections === null) {\n        _jsonpConnections = w[JSONP_HOME] = {};\n    }\n    return _jsonpConnections;\n}\nvar BrowserJsonp = /** @class */ (function () {\n    function BrowserJsonp() {\n    }\n    // Construct a <script> element with the specified URL\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserJsonp.prototype.build = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ node = document.createElement('script');\n        node.src = url;\n        return node;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserJsonp.prototype.nextRequestID = /**\n     * @return {?}\n     */\n    function () { return \"__req\" + _nextRequestId++; };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.requestCallback = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) { return JSONP_HOME + \".\" + id + \".finished\"; };\n    /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    BrowserJsonp.prototype.exposeConnection = /**\n     * @param {?} id\n     * @param {?} connection\n     * @return {?}\n     */\n    function (id, connection) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = connection;\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    BrowserJsonp.prototype.removeConnection = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        var /** @type {?} */ connections = _getJsonpConnections();\n        connections[id] = null;\n    };\n    // Attach the <script> element to the DOM\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.send = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { document.body.appendChild(/** @type {?} */ ((node))); };\n    // Remove <script> element from the DOM\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserJsonp.prototype.cleanup = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(/** @type {?} */ ((node)));\n        }\n    };\n    BrowserJsonp.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BrowserJsonp.ctorParameters = function () { return []; };\n    return BrowserJsonp;\n}());\nexport { BrowserJsonp };\nfunction BrowserJsonp_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BrowserJsonp.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BrowserJsonp.ctorParameters;\n}\n//# sourceMappingURL=browser_jsonp.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ResponseOptions } from '../base_response_options';\nimport { ReadyState, RequestMethod, ResponseType } from '../enums';\nimport { ConnectionBackend } from '../interfaces';\nimport { Response } from '../static_response';\nimport { BrowserJsonp } from './browser_jsonp';\nvar /** @type {?} */ JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\nvar /** @type {?} */ JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use \\@angular/common/http instead\n */\nJSONPConnection = /** @class */ (function () {\n    /** @internal */\n    function JSONPConnection(req, _dom, baseResponseOptions) {\n        var _this = this;\n        this._dom = _dom;\n        this.baseResponseOptions = baseResponseOptions;\n        this._finished = false;\n        if (req.method !== RequestMethod.Get) {\n            throw new TypeError(JSONP_ERR_WRONG_METHOD);\n        }\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            _this.readyState = ReadyState.Loading;\n            var /** @type {?} */ id = _this._id = _dom.nextRequestID();\n            _dom.exposeConnection(id, _this);\n            // Workaround Dart\n            // url = url.replace(/=JSONP_CALLBACK(&|$)/, `generated method`);\n            var /** @type {?} */ callback = _dom.requestCallback(_this._id);\n            var /** @type {?} */ url = req.url;\n            if (url.indexOf('=JSONP_CALLBACK&') > -1) {\n                url = url.replace('=JSONP_CALLBACK&', \"=\" + callback + \"&\");\n            }\n            else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {\n                url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + (\"=\" + callback);\n            }\n            var /** @type {?} */ script = _this._script = _dom.build(url);\n            var /** @type {?} */ onLoad = function (event) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                if (!_this._finished) {\n                    var /** @type {?} */ responseOptions_1 = new ResponseOptions({ body: JSONP_ERR_NO_CALLBACK, type: ResponseType.Error, url: url });\n                    if (baseResponseOptions) {\n                        responseOptions_1 = baseResponseOptions.merge(responseOptions_1);\n                    }\n                    responseObserver.error(new Response(responseOptions_1));\n                    return;\n                }\n                var /** @type {?} */ responseOptions = new ResponseOptions({ body: _this._responseData, url: url });\n                if (_this.baseResponseOptions) {\n                    responseOptions = _this.baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.next(new Response(responseOptions));\n                responseObserver.complete();\n            };\n            var /** @type {?} */ onError = function (error) {\n                if (_this.readyState === ReadyState.Cancelled)\n                    return;\n                _this.readyState = ReadyState.Done;\n                _dom.cleanup(script);\n                var /** @type {?} */ responseOptions = new ResponseOptions({ body: error.message, type: ResponseType.Error });\n                if (baseResponseOptions) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            script.addEventListener('load', onLoad);\n            script.addEventListener('error', onError);\n            _dom.send(script);\n            return function () {\n                _this.readyState = ReadyState.Cancelled;\n                script.removeEventListener('load', onLoad);\n                script.removeEventListener('error', onError);\n                _this._dom.cleanup(script);\n            };\n        });\n    }\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     */\n    /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @param {?=} data\n     * @return {?}\n     */\n    JSONPConnection.prototype.finished = /**\n     * Callback called when the JSONP request completes, to notify the application\n     * of the new data.\n     * @param {?=} data\n     * @return {?}\n     */\n    function (data) {\n        // Don't leak connections\n        this._finished = true;\n        this._dom.removeConnection(this._id);\n        if (this.readyState === ReadyState.Cancelled)\n            return;\n        this._responseData = data;\n    };\n    return JSONPConnection;\n}());\n/**\n * Base class for an in-flight JSONP request.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { JSONPConnection };\nfunction JSONPConnection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    JSONPConnection.prototype._id;\n    /** @type {?} */\n    JSONPConnection.prototype._script;\n    /** @type {?} */\n    JSONPConnection.prototype._responseData;\n    /** @type {?} */\n    JSONPConnection.prototype._finished;\n    /**\n     * The {\\@link ReadyState} of this request.\n     * @type {?}\n     */\n    JSONPConnection.prototype.readyState;\n    /**\n     * The outgoing HTTP request.\n     * @type {?}\n     */\n    JSONPConnection.prototype.request;\n    /**\n     * An observable that completes with the response, when the request is finished.\n     * @type {?}\n     */\n    JSONPConnection.prototype.response;\n    /** @type {?} */\n    JSONPConnection.prototype._dom;\n    /** @type {?} */\n    JSONPConnection.prototype.baseResponseOptions;\n}\n/**\n * A {\\@link ConnectionBackend} that uses the JSONP strategy of making requests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar JSONPBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(JSONPBackend, _super);\n    /** @internal */\n    function JSONPBackend(_browserJSONP, _baseResponseOptions) {\n        var _this = _super.call(this) || this;\n        _this._browserJSONP = _browserJSONP;\n        _this._baseResponseOptions = _baseResponseOptions;\n        return _this;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    JSONPBackend.prototype.createConnection = /**\n     * @param {?} request\n     * @return {?}\n     */\n    function (request) {\n        return new JSONPConnection(request, this._browserJSONP, this._baseResponseOptions);\n    };\n    JSONPBackend.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    JSONPBackend.ctorParameters = function () { return [\n        { type: BrowserJsonp, },\n        { type: ResponseOptions, },\n    ]; };\n    return JSONPBackend;\n}(ConnectionBackend));\nexport { JSONPBackend };\nfunction JSONPBackend_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    JSONPBackend.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    JSONPBackend.ctorParameters;\n    /** @type {?} */\n    JSONPBackend.prototype._browserJSONP;\n    /** @type {?} */\n    JSONPBackend.prototype._baseResponseOptions;\n}\n//# sourceMappingURL=jsonp_backend.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injectable } from '@angular/core';\nimport { ɵgetDOM as getDOM } from '@angular/platform-browser';\nimport { Observable } from 'rxjs/Observable';\nimport { ResponseOptions } from '../base_response_options';\nimport { ContentType, RequestMethod, ResponseContentType, ResponseType } from '../enums';\nimport { Headers } from '../headers';\nimport { getResponseURL, isSuccess } from '../http_utils';\nimport { XSRFStrategy } from '../interfaces';\nimport { Response } from '../static_response';\nimport { BrowserXhr } from './browser_xhr';\nvar /** @type {?} */ XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nXHRConnection = /** @class */ (function () {\n    function XHRConnection(req, browserXHR, baseResponseOptions) {\n        var _this = this;\n        this.request = req;\n        this.response = new Observable(function (responseObserver) {\n            var /** @type {?} */ _xhr = browserXHR.build();\n            _xhr.open(RequestMethod[req.method].toUpperCase(), req.url);\n            if (req.withCredentials != null) {\n                _xhr.withCredentials = req.withCredentials;\n            }\n            // load event handler\n            var /** @type {?} */ onLoad = function () {\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\n                var /** @type {?} */ status = _xhr.status === 1223 ? 204 : _xhr.status;\n                var /** @type {?} */ body = null;\n                // HTTP 204 means no content\n                if (status !== 204) {\n                    // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n                    // response/responseType properties were introduced in ResourceLoader Level2 spec\n                    // (supported by IE10)\n                    body = (typeof _xhr.response === 'undefined') ? _xhr.responseText : _xhr.response;\n                    // Implicitly strip a potential XSSI prefix.\n                    if (typeof body === 'string') {\n                        body = body.replace(XSSI_PREFIX, '');\n                    }\n                }\n                // fix status code when it is 0 (0 status is undocumented).\n                // Occurs when accessing file resources or on Android 4.1 stock browser\n                // while retrieving files from application cache.\n                if (status === 0) {\n                    status = body ? 200 : 0;\n                }\n                var /** @type {?} */ headers = Headers.fromResponseHeaderString(_xhr.getAllResponseHeaders());\n                // IE 9 does not provide the way to get URL of response\n                var /** @type {?} */ url = getResponseURL(_xhr) || req.url;\n                var /** @type {?} */ statusText = _xhr.statusText || 'OK';\n                var /** @type {?} */ responseOptions = new ResponseOptions({ body: body, status: status, headers: headers, statusText: statusText, url: url });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                var /** @type {?} */ response = new Response(responseOptions);\n                response.ok = isSuccess(status);\n                if (response.ok) {\n                    responseObserver.next(response);\n                    // TODO(gdi2290): defer complete if array buffer until done\n                    responseObserver.complete();\n                    return;\n                }\n                responseObserver.error(response);\n            };\n            // error event handler\n            var /** @type {?} */ onError = function (err) {\n                var /** @type {?} */ responseOptions = new ResponseOptions({\n                    body: err,\n                    type: ResponseType.Error,\n                    status: _xhr.status,\n                    statusText: _xhr.statusText,\n                });\n                if (baseResponseOptions != null) {\n                    responseOptions = baseResponseOptions.merge(responseOptions);\n                }\n                responseObserver.error(new Response(responseOptions));\n            };\n            _this.setDetectedContentType(req, _xhr);\n            if (req.headers == null) {\n                req.headers = new Headers();\n            }\n            if (!req.headers.has('Accept')) {\n                req.headers.append('Accept', 'application/json, text/plain, */*');\n            }\n            req.headers.forEach(function (values, name) { return _xhr.setRequestHeader(/** @type {?} */ ((name)), values.join(',')); });\n            // Select the correct buffer type to store the response\n            if (req.responseType != null && _xhr.responseType != null) {\n                switch (req.responseType) {\n                    case ResponseContentType.ArrayBuffer:\n                        _xhr.responseType = 'arraybuffer';\n                        break;\n                    case ResponseContentType.Json:\n                        _xhr.responseType = 'json';\n                        break;\n                    case ResponseContentType.Text:\n                        _xhr.responseType = 'text';\n                        break;\n                    case ResponseContentType.Blob:\n                        _xhr.responseType = 'blob';\n                        break;\n                    default:\n                        throw new Error('The selected responseType is not supported');\n                }\n            }\n            _xhr.addEventListener('load', onLoad);\n            _xhr.addEventListener('error', onError);\n            _xhr.send(_this.request.getBody());\n            return function () {\n                _xhr.removeEventListener('load', onLoad);\n                _xhr.removeEventListener('error', onError);\n                _xhr.abort();\n            };\n        });\n    }\n    /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    XHRConnection.prototype.setDetectedContentType = /**\n     * @param {?} req\n     * @param {?} _xhr\n     * @return {?}\n     */\n    function (req /** TODO Request */, _xhr /** XMLHttpRequest */) {\n        // Skip if a custom Content-Type header is provided\n        if (req.headers != null && req.headers.get('Content-Type') != null) {\n            return;\n        }\n        // Set the detected content type\n        switch (req.contentType) {\n            case ContentType.NONE:\n                break;\n            case ContentType.JSON:\n                _xhr.setRequestHeader('content-type', 'application/json');\n                break;\n            case ContentType.FORM:\n                _xhr.setRequestHeader('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n                break;\n            case ContentType.TEXT:\n                _xhr.setRequestHeader('content-type', 'text/plain');\n                break;\n            case ContentType.BLOB:\n                var /** @type {?} */ blob = req.blob();\n                if (blob.type) {\n                    _xhr.setRequestHeader('content-type', blob.type);\n                }\n                break;\n        }\n    };\n    return XHRConnection;\n}());\n/**\n * Creates connections using `XMLHttpRequest`. Given a fully-qualified\n * request, an `XHRConnection` will immediately create an `XMLHttpRequest` object and send the\n * request.\n *\n * This class would typically not be created or interacted with directly inside applications, though\n * the {\\@link MockConnection} may be interacted with in tests.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { XHRConnection };\nfunction XHRConnection_tsickle_Closure_declarations() {\n    /** @type {?} */\n    XHRConnection.prototype.request;\n    /**\n     * Response {\\@link EventEmitter} which emits a single {\\@link Response} value on load event of\n     * `XMLHttpRequest`.\n     * @type {?}\n     */\n    XHRConnection.prototype.response;\n    /** @type {?} */\n    XHRConnection.prototype.readyState;\n}\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use \\@angular/common/http instead\n */\nCookieXSRFStrategy = /** @class */ (function () {\n    function CookieXSRFStrategy(_cookieName, _headerName) {\n        if (_cookieName === void 0) { _cookieName = 'XSRF-TOKEN'; }\n        if (_headerName === void 0) { _headerName = 'X-XSRF-TOKEN'; }\n        this._cookieName = _cookieName;\n        this._headerName = _headerName;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    CookieXSRFStrategy.prototype.configureRequest = /**\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var /** @type {?} */ xsrfToken = getDOM().getCookie(this._cookieName);\n        if (xsrfToken) {\n            req.headers.set(this._headerName, xsrfToken);\n        }\n    };\n    return CookieXSRFStrategy;\n}());\n/**\n * `XSRFConfiguration` sets up Cross Site Request Forgery (XSRF) protection for the application\n * using a cookie. See https://www.owasp.org/index.php/Cross-Site_Request_Forgery_(CSRF)\n * for more information on XSRF.\n *\n * Applications can configure custom cookie and header names by binding an instance of this class\n * with different `cookieName` and `headerName` values. See the main HTTP documentation for more\n * details.\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { CookieXSRFStrategy };\nfunction CookieXSRFStrategy_tsickle_Closure_declarations() {\n    /** @type {?} */\n    CookieXSRFStrategy.prototype._cookieName;\n    /** @type {?} */\n    CookieXSRFStrategy.prototype._headerName;\n}\n/**\n * Creates {\\@link XHRConnection} instances.\n *\n * This class would typically not be used by end users, but could be\n * overridden if a different backend implementation should be used,\n * such as in a node backend.\n *\n * ### Example\n *\n * ```\n * import {Http, MyNodeBackend, HTTP_PROVIDERS, BaseRequestOptions} from '\\@angular/http';\n * \\@Component({\n *   viewProviders: [\n *     HTTP_PROVIDERS,\n *     {provide: Http, useFactory: (backend, options) => {\n *       return new Http(backend, options);\n *     }, deps: [MyNodeBackend, BaseRequestOptions]}]\n * })\n * class MyComponent {\n *   constructor(http:Http) {\n *     http.request('people.json').subscribe(res => this.people = res.json());\n *   }\n * }\n * ```\n * @deprecated use \\@angular/common/http instead\n */\nvar XHRBackend = /** @class */ (function () {\n    function XHRBackend(_browserXHR, _baseResponseOptions, _xsrfStrategy) {\n        this._browserXHR = _browserXHR;\n        this._baseResponseOptions = _baseResponseOptions;\n        this._xsrfStrategy = _xsrfStrategy;\n    }\n    /**\n     * @param {?} request\n     * @return {?}\n     */\n    XHRBackend.prototype.createConnection = /**\n     * @param {?} request\n     * @return {?}\n     */\n    function (request) {\n        this._xsrfStrategy.configureRequest(request);\n        return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);\n    };\n    XHRBackend.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    XHRBackend.ctorParameters = function () { return [\n        { type: BrowserXhr, },\n        { type: ResponseOptions, },\n        { type: XSRFStrategy, },\n    ]; };\n    return XHRBackend;\n}());\nexport { XHRBackend };\nfunction XHRBackend_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    XHRBackend.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    XHRBackend.ctorParameters;\n    /** @type {?} */\n    XHRBackend.prototype._browserXHR;\n    /** @type {?} */\n    XHRBackend.prototype._baseResponseOptions;\n    /** @type {?} */\n    XHRBackend.prototype._xsrfStrategy;\n}\n//# sourceMappingURL=xhr_backend.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { RequestMethod } from './enums';\nimport { Headers } from './headers';\nimport { normalizeMethodName } from './http_utils';\nimport { URLSearchParams } from './url_search_params';\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nRequestOptions = /** @class */ (function () {\n    // TODO(Dzmitry): remove search when this.search is removed\n    function RequestOptions(opts) {\n        if (opts === void 0) { opts = {}; }\n        var method = opts.method, headers = opts.headers, body = opts.body, url = opts.url, search = opts.search, params = opts.params, withCredentials = opts.withCredentials, responseType = opts.responseType;\n        this.method = method != null ? normalizeMethodName(method) : null;\n        this.headers = headers != null ? headers : null;\n        this.body = body != null ? body : null;\n        this.url = url != null ? url : null;\n        this.params = this._mergeSearchParams(params || search);\n        this.withCredentials = withCredentials != null ? withCredentials : null;\n        this.responseType = responseType != null ? responseType : null;\n    }\n    Object.defineProperty(RequestOptions.prototype, \"search\", {\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        get: /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @return {?}\n         */\n        function () { return this.params; },\n        /**\n         * @deprecated from 4.0.0. Use params instead.\n         */\n        set: /**\n         * @deprecated from 4.0.0. Use params instead.\n         * @param {?} params\n         * @return {?}\n         */\n        function (params) { this.params = params; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     */\n    /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    RequestOptions.prototype.merge = /**\n     * Creates a copy of the `RequestOptions` instance, using the optional input as values to override\n     * existing values. This method will not change the values of the instance on which it is being\n     * called.\n     *\n     * Note that `headers` and `search` will override existing values completely if present in\n     * the `options` object. If these values should be merged, it should be done prior to calling\n     * `merge` on the `RequestOptions` instance.\n     *\n     * ```typescript\n     * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n     *\n     * const options = new RequestOptions({\n     *   method: RequestMethod.Post\n     * });\n     * const req = new Request(options.merge({\n     *   url: 'https://google.com'\n     * }));\n     * console.log('req.method:', RequestMethod[req.method]); // Post\n     * console.log('options.url:', options.url); // null\n     * console.log('req.url:', req.url); // https://google.com\n     * ```\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        return new RequestOptions({\n            method: options && options.method != null ? options.method : this.method,\n            headers: options && options.headers != null ? options.headers : new Headers(this.headers),\n            body: options && options.body != null ? options.body : this.body,\n            url: options && options.url != null ? options.url : this.url,\n            params: options && this._mergeSearchParams(options.params || options.search),\n            withCredentials: options && options.withCredentials != null ? options.withCredentials :\n                this.withCredentials,\n            responseType: options && options.responseType != null ? options.responseType :\n                this.responseType\n        });\n    };\n    /**\n     * @param {?=} params\n     * @return {?}\n     */\n    RequestOptions.prototype._mergeSearchParams = /**\n     * @param {?=} params\n     * @return {?}\n     */\n    function (params) {\n        if (!params)\n            return this.params;\n        if (params instanceof URLSearchParams) {\n            return params.clone();\n        }\n        if (typeof params === 'string') {\n            return new URLSearchParams(params);\n        }\n        return this._parseParams(params);\n    };\n    /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    RequestOptions.prototype._parseParams = /**\n     * @param {?=} objParams\n     * @return {?}\n     */\n    function (objParams) {\n        var _this = this;\n        if (objParams === void 0) { objParams = {}; }\n        var /** @type {?} */ params = new URLSearchParams();\n        Object.keys(objParams).forEach(function (key) {\n            var /** @type {?} */ value = objParams[key];\n            if (Array.isArray(value)) {\n                value.forEach(function (item) { return _this._appendParam(key, item, params); });\n            }\n            else {\n                _this._appendParam(key, value, params);\n            }\n        });\n        return params;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    RequestOptions.prototype._appendParam = /**\n     * @param {?} key\n     * @param {?} value\n     * @param {?} params\n     * @return {?}\n     */\n    function (key, value, params) {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        params.append(key, value);\n    };\n    return RequestOptions;\n}());\n/**\n * Creates a request options object to be optionally provided when instantiating a\n * {\\@link Request}.\n *\n * This class is based on the `RequestInit` description in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#requestinit).\n *\n * All values are null by default. Typical defaults can be found in the {\\@link BaseRequestOptions}\n * class, which sub-classes `RequestOptions`.\n *\n * ```typescript\n * import {RequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new RequestOptions({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * });\n * const req = new Request(options);\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { RequestOptions };\nfunction RequestOptions_tsickle_Closure_declarations() {\n    /**\n     * Http method with which to execute a {\\@link Request}.\n     * Acceptable methods are defined in the {\\@link RequestMethod} enum.\n     * @type {?}\n     */\n    RequestOptions.prototype.method;\n    /**\n     * {\\@link Headers} to be attached to a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.headers;\n    /**\n     * Body to be used when creating a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.body;\n    /**\n     * Url with which to perform a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.url;\n    /**\n     * Search parameters to be included in a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.params;\n    /**\n     * Enable use credentials for a {\\@link Request}.\n     * @type {?}\n     */\n    RequestOptions.prototype.withCredentials;\n    /** @type {?} */\n    RequestOptions.prototype.responseType;\n}\n/**\n * Subclass of {\\@link RequestOptions}, with default values.\n *\n * Default values:\n *  * method: {\\@link RequestMethod RequestMethod.Get}\n *  * headers: empty {\\@link Headers} object\n *\n * This class could be extended and bound to the {\\@link RequestOptions} class\n * when configuring an {\\@link Injector}, in order to override the default options\n * used by {\\@link Http} to create and send {\\@link Request Requests}.\n *\n * ```typescript\n * import {BaseRequestOptions, RequestOptions} from '\\@angular/http';\n *\n * class MyOptions extends BaseRequestOptions {\n *   search: string = 'coreTeam=true';\n * }\n *\n * {provide: RequestOptions, useClass: MyOptions};\n * ```\n *\n * The options could also be extended when manually creating a {\\@link Request}\n * object.\n *\n * ```\n * import {BaseRequestOptions, Request, RequestMethod} from '\\@angular/http';\n *\n * const options = new BaseRequestOptions();\n * const req = new Request(options.merge({\n *   method: RequestMethod.Post,\n *   url: 'https://google.com'\n * }));\n * console.log('req.method:', RequestMethod[req.method]); // Post\n * console.log('options.url:', options.url); // null\n * console.log('req.url:', req.url); // https://google.com\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar BaseRequestOptions = /** @class */ (function (_super) {\n    tslib_1.__extends(BaseRequestOptions, _super);\n    function BaseRequestOptions() {\n        return _super.call(this, { method: RequestMethod.Get, headers: new Headers() }) || this;\n    }\n    BaseRequestOptions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BaseRequestOptions.ctorParameters = function () { return []; };\n    return BaseRequestOptions;\n}(RequestOptions));\nexport { BaseRequestOptions };\nfunction BaseRequestOptions_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    BaseRequestOptions.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    BaseRequestOptions.ctorParameters;\n}\n//# sourceMappingURL=base_request_options.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Body } from './body';\nimport { ContentType } from './enums';\nimport { Headers } from './headers';\nimport { normalizeMethodName } from './http_utils';\nimport { URLSearchParams } from './url_search_params';\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar /**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nRequest = /** @class */ (function (_super) {\n    tslib_1.__extends(Request, _super);\n    function Request(requestOptions) {\n        var _this = _super.call(this) || this;\n        // TODO: assert that url is present\n        var /** @type {?} */ url = requestOptions.url;\n        _this.url = /** @type {?} */ ((requestOptions.url));\n        var /** @type {?} */ paramsArg = requestOptions.params || requestOptions.search;\n        if (paramsArg) {\n            var /** @type {?} */ params = void 0;\n            if (typeof paramsArg === 'object' && !(paramsArg instanceof URLSearchParams)) {\n                params = urlEncodeParams(paramsArg).toString();\n            }\n            else {\n                params = paramsArg.toString();\n            }\n            if (params.length > 0) {\n                var /** @type {?} */ prefix = '?';\n                if (_this.url.indexOf('?') != -1) {\n                    prefix = (_this.url[_this.url.length - 1] == '&') ? '' : '&';\n                }\n                // TODO: just delete search-query-looking string in url?\n                // TODO: just delete search-query-looking string in url?\n                _this.url = url + prefix + params;\n            }\n        }\n        _this._body = requestOptions.body;\n        _this.method = normalizeMethodName(/** @type {?} */ ((requestOptions.method)));\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        // TODO(jeffbcross): implement behavior\n        // Defaults to 'omit', consistent with browser\n        _this.headers = new Headers(requestOptions.headers);\n        _this.contentType = _this.detectContentType();\n        _this.withCredentials = /** @type {?} */ ((requestOptions.withCredentials));\n        _this.responseType = /** @type {?} */ ((requestOptions.responseType));\n        return _this;\n    }\n    /**\n     * Returns the content type enum based on header options.\n     */\n    /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    Request.prototype.detectContentType = /**\n     * Returns the content type enum based on header options.\n     * @return {?}\n     */\n    function () {\n        switch (this.headers.get('content-type')) {\n            case 'application/json':\n                return ContentType.JSON;\n            case 'application/x-www-form-urlencoded':\n                return ContentType.FORM;\n            case 'multipart/form-data':\n                return ContentType.FORM_DATA;\n            case 'text/plain':\n            case 'text/html':\n                return ContentType.TEXT;\n            case 'application/octet-stream':\n                return this._body instanceof ArrayBuffer ? ContentType.ARRAY_BUFFER : ContentType.BLOB;\n            default:\n                return this.detectContentTypeFromBody();\n        }\n    };\n    /**\n     * Returns the content type of request's body based on its type.\n     */\n    /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    Request.prototype.detectContentTypeFromBody = /**\n     * Returns the content type of request's body based on its type.\n     * @return {?}\n     */\n    function () {\n        if (this._body == null) {\n            return ContentType.NONE;\n        }\n        else if (this._body instanceof URLSearchParams) {\n            return ContentType.FORM;\n        }\n        else if (this._body instanceof FormData) {\n            return ContentType.FORM_DATA;\n        }\n        else if (this._body instanceof Blob) {\n            return ContentType.BLOB;\n        }\n        else if (this._body instanceof ArrayBuffer) {\n            return ContentType.ARRAY_BUFFER;\n        }\n        else if (this._body && typeof this._body === 'object') {\n            return ContentType.JSON;\n        }\n        else {\n            return ContentType.TEXT;\n        }\n    };\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     */\n    /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    Request.prototype.getBody = /**\n     * Returns the request's body according to its type. If body is undefined, return\n     * null.\n     * @return {?}\n     */\n    function () {\n        switch (this.contentType) {\n            case ContentType.JSON:\n                return this.text();\n            case ContentType.FORM:\n                return this.text();\n            case ContentType.FORM_DATA:\n                return this._body;\n            case ContentType.TEXT:\n                return this.text();\n            case ContentType.BLOB:\n                return this.blob();\n            case ContentType.ARRAY_BUFFER:\n                return this.arrayBuffer();\n            default:\n                return null;\n        }\n    };\n    return Request;\n}(Body));\n/**\n * Creates `Request` instances from provided values.\n *\n * The Request's interface is inspired by the Request constructor defined in the [Fetch\n * Spec](https://fetch.spec.whatwg.org/#request-class),\n * but is considered a static value whose body can be accessed many times. There are other\n * differences in the implementation, but this is the most significant.\n *\n * `Request` instances are typically created by higher-level classes, like {\\@link Http} and\n * {\\@link Jsonp}, but it may occasionally be useful to explicitly create `Request` instances.\n * One such example is when creating services that wrap higher-level services, like {\\@link Http},\n * where it may be useful to generate a `Request` with arbitrary headers and search params.\n *\n * ```typescript\n * import {Injectable, Injector} from '\\@angular/core';\n * import {HTTP_PROVIDERS, Http, Request, RequestMethod} from '\\@angular/http';\n *\n * \\@Injectable()\n * class AutoAuthenticator {\n *   constructor(public http:Http) {}\n *   request(url:string) {\n *     return this.http.request(new Request({\n *       method: RequestMethod.Get,\n *       url: url,\n *       search: 'password=123'\n *     }));\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([HTTP_PROVIDERS, AutoAuthenticator]);\n * var authenticator = injector.get(AutoAuthenticator);\n * authenticator.request('people.json').subscribe(res => {\n *   //URL should have included '?password=123'\n *   console.log('people', res.json());\n * });\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nexport { Request };\nfunction Request_tsickle_Closure_declarations() {\n    /**\n     * Http method with which to perform the request.\n     * @type {?}\n     */\n    Request.prototype.method;\n    /**\n     * {\\@link Headers} instance\n     * @type {?}\n     */\n    Request.prototype.headers;\n    /**\n     * Url of the remote resource\n     * @type {?}\n     */\n    Request.prototype.url;\n    /**\n     * Type of the request body *\n     * @type {?}\n     */\n    Request.prototype.contentType;\n    /**\n     * Enable use credentials\n     * @type {?}\n     */\n    Request.prototype.withCredentials;\n    /**\n     * Buffer to store the response\n     * @type {?}\n     */\n    Request.prototype.responseType;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction urlEncodeParams(params) {\n    var /** @type {?} */ searchParams = new URLSearchParams();\n    Object.keys(params).forEach(function (key) {\n        var /** @type {?} */ value = params[key];\n        if (value && Array.isArray(value)) {\n            value.forEach(function (element) { return searchParams.append(key, element.toString()); });\n        }\n        else {\n            searchParams.append(key, value.toString());\n        }\n    });\n    return searchParams;\n}\nvar /** @type {?} */ noop = function () { };\nvar ɵ0 = noop;\nvar /** @type {?} */ w = typeof window == 'object' ? window : noop;\nvar /** @type {?} */ FormData = (/** @type {?} */ (w /** TODO #9100 */) /** TODO #9100 */)['FormData'] || noop;\nvar /** @type {?} */ Blob = (/** @type {?} */ (w /** TODO #9100 */) /** TODO #9100 */)['Blob'] || noop;\nexport var /** @type {?} */ ArrayBuffer = (/** @type {?} */ (w /** TODO #9100 */) /** TODO #9100 */)['ArrayBuffer'] || noop;\nexport { ɵ0 };\n//# sourceMappingURL=static_request.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { RequestOptions } from './base_request_options';\nimport { RequestMethod } from './enums';\nimport { ConnectionBackend } from './interfaces';\nimport { Request } from './static_request';\n/**\n * @param {?} backend\n * @param {?} request\n * @return {?}\n */\nfunction httpRequest(backend, request) {\n    return backend.createConnection(request).response;\n}\n/**\n * @param {?} defaultOpts\n * @param {?} providedOpts\n * @param {?} method\n * @param {?} url\n * @return {?}\n */\nfunction mergeOptions(defaultOpts, providedOpts, method, url) {\n    var /** @type {?} */ newOptions = defaultOpts;\n    if (providedOpts) {\n        // Hack so Dart can used named parameters\n        return /** @type {?} */ (newOptions.merge(new RequestOptions({\n            method: providedOpts.method || method,\n            url: providedOpts.url || url,\n            search: providedOpts.search,\n            params: providedOpts.params,\n            headers: providedOpts.headers,\n            body: providedOpts.body,\n            withCredentials: providedOpts.withCredentials,\n            responseType: providedOpts.responseType\n        })));\n    }\n    return /** @type {?} */ (newOptions.merge(new RequestOptions({ method: method, url: url })));\n}\n/**\n * Performs http requests using `XMLHttpRequest` as the default backend.\n *\n * `Http` is available as an injectable class, with methods to perform http requests. Calling\n * `request` returns an `Observable` which will emit a single {\\@link Response} when a\n * response is received.\n *\n * ### Example\n *\n * ```typescript\n * import {Http, HTTP_PROVIDERS} from '\\@angular/http';\n * import 'rxjs/add/operator/map'\n * \\@Component({\n *   selector: 'http-app',\n *   viewProviders: [HTTP_PROVIDERS],\n *   templateUrl: 'people.html'\n * })\n * class PeopleComponent {\n *   constructor(http: Http) {\n *     http.get('people.json')\n *       // Call map on the response observable to get the parsed people object\n *       .map(res => res.json())\n *       // Subscribe to the observable to get the parsed people object and attach it to the\n *       // component\n *       .subscribe(people => this.people = people);\n *   }\n * }\n * ```\n *\n *\n * ### Example\n *\n * ```\n * http.get('people.json').subscribe((res:Response) => this.people = res.json());\n * ```\n *\n * The default construct used to perform requests, `XMLHttpRequest`, is abstracted as a \"Backend\" (\n * {\\@link XHRBackend} in this case), which could be mocked with dependency injection by replacing\n * the {\\@link XHRBackend} provider, as in the following example:\n *\n * ### Example\n *\n * ```typescript\n * import {BaseRequestOptions, Http} from '\\@angular/http';\n * import {MockBackend} from '\\@angular/http/testing';\n * var injector = Injector.resolveAndCreate([\n *   BaseRequestOptions,\n *   MockBackend,\n *   {provide: Http, useFactory:\n *       function(backend, defaultOptions) {\n *         return new Http(backend, defaultOptions);\n *       },\n *       deps: [MockBackend, BaseRequestOptions]}\n * ]);\n * var http = injector.get(Http);\n * http.get('request-from-mock-backend.json').subscribe((res:Response) => doSomething(res));\n * ```\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar Http = /** @class */ (function () {\n    function Http(_backend, _defaultOptions) {\n        this._backend = _backend;\n        this._defaultOptions = _defaultOptions;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     */\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.request = /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            responseObservable = httpRequest(this._backend, new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url))));\n        }\n        else if (url instanceof Request) {\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    /**\n     * Performs a request with `get` http method.\n     */\n    /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.get = /**\n     * Performs a request with `get` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, url)));\n    };\n    /**\n     * Performs a request with `post` http method.\n     */\n    /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.post = /**\n     * Performs a request with `post` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Post, url)));\n    };\n    /**\n     * Performs a request with `put` http method.\n     */\n    /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.put = /**\n     * Performs a request with `put` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Put, url)));\n    };\n    /**\n     * Performs a request with `delete` http method.\n     */\n    /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.delete = /**\n     * Performs a request with `delete` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Delete, url)));\n    };\n    /**\n     * Performs a request with `patch` http method.\n     */\n    /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.patch = /**\n     * Performs a request with `patch` http method.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions.merge(new RequestOptions({ body: body })), options, RequestMethod.Patch, url)));\n    };\n    /**\n     * Performs a request with `head` http method.\n     */\n    /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.head = /**\n     * Performs a request with `head` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Head, url)));\n    };\n    /**\n     * Performs a request with `options` http method.\n     */\n    /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Http.prototype.options = /**\n     * Performs a request with `options` http method.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        return this.request(new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Options, url)));\n    };\n    Http.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Http.ctorParameters = function () { return [\n        { type: ConnectionBackend, },\n        { type: RequestOptions, },\n    ]; };\n    return Http;\n}());\nexport { Http };\nfunction Http_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Http.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Http.ctorParameters;\n    /** @type {?} */\n    Http.prototype._backend;\n    /** @type {?} */\n    Http.prototype._defaultOptions;\n}\n/**\n * @deprecated use \\@angular/common/http instead\n */\nvar Jsonp = /** @class */ (function (_super) {\n    tslib_1.__extends(Jsonp, _super);\n    function Jsonp(backend, defaultOptions) {\n        return _super.call(this, backend, defaultOptions) || this;\n    }\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {@link Request} instance. If the first argument is a url, an optional {@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {@link BaseRequestOptions} before performing the request.\n     *\n     * @security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     */\n    /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    Jsonp.prototype.request = /**\n     * Performs any type of http request. First argument is required, and can either be a url or\n     * a {\\@link Request} instance. If the first argument is a url, an optional {\\@link RequestOptions}\n     * object can be provided as the 2nd argument. The options object will be merged with the values\n     * of {\\@link BaseRequestOptions} before performing the request.\n     *\n     * \\@security Regular XHR is the safest alternative to JSONP for most applications, and is\n     * supported by all current browsers. Because JSONP creates a `<script>` element with\n     * contents retrieved from a remote source, attacker-controlled data introduced by an untrusted\n     * source could expose your application to XSS risks. Data exposed by JSONP may also be\n     * readable by malicious third-party websites. In addition, JSONP introduces potential risk for\n     * future security issues (e.g. content sniffing).  For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        var /** @type {?} */ responseObservable;\n        if (typeof url === 'string') {\n            url =\n                new Request(mergeOptions(this._defaultOptions, options, RequestMethod.Get, /** @type {?} */ (url)));\n        }\n        if (url instanceof Request) {\n            if (url.method !== RequestMethod.Get) {\n                throw new Error('JSONP requests must use GET request method.');\n            }\n            responseObservable = httpRequest(this._backend, url);\n        }\n        else {\n            throw new Error('First argument must be a url string or Request instance.');\n        }\n        return responseObservable;\n    };\n    Jsonp.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Jsonp.ctorParameters = function () { return [\n        { type: ConnectionBackend, },\n        { type: RequestOptions, },\n    ]; };\n    return Jsonp;\n}(Http));\nexport { Jsonp };\nfunction Jsonp_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    Jsonp.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    Jsonp.ctorParameters;\n}\n//# sourceMappingURL=http.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { NgModule } from '@angular/core';\nimport { BrowserJsonp } from './backends/browser_jsonp';\nimport { BrowserXhr } from './backends/browser_xhr';\nimport { JSONPBackend } from './backends/jsonp_backend';\nimport { CookieXSRFStrategy, XHRBackend } from './backends/xhr_backend';\nimport { BaseRequestOptions, RequestOptions } from './base_request_options';\nimport { BaseResponseOptions, ResponseOptions } from './base_response_options';\nimport { Http, Jsonp } from './http';\nimport { XSRFStrategy } from './interfaces';\n/**\n * @return {?}\n */\nexport function _createDefaultCookieXSRFStrategy() {\n    return new CookieXSRFStrategy();\n}\n/**\n * @param {?} xhrBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function httpFactory(xhrBackend, requestOptions) {\n    return new Http(xhrBackend, requestOptions);\n}\n/**\n * @param {?} jsonpBackend\n * @param {?} requestOptions\n * @return {?}\n */\nexport function jsonpFactory(jsonpBackend, requestOptions) {\n    return new Jsonp(jsonpBackend, requestOptions);\n}\n/**\n * The module that includes http's providers\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar HttpModule = /** @class */ (function () {\n    function HttpModule() {\n    }\n    HttpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        // TODO(pascal): use factory type annotations once supported in DI\n                        // issue: https://github.com/angular/angular/issues/3183\n                        { provide: Http, useFactory: httpFactory, deps: [XHRBackend, RequestOptions] },\n                        BrowserXhr,\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\n                        XHRBackend,\n                        { provide: XSRFStrategy, useFactory: _createDefaultCookieXSRFStrategy },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpModule.ctorParameters = function () { return []; };\n    return HttpModule;\n}());\nexport { HttpModule };\nfunction HttpModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    HttpModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    HttpModule.ctorParameters;\n}\n/**\n * The module that includes jsonp's providers\n *\n * @deprecated use \\@angular/common/http instead\n */\nvar JsonpModule = /** @class */ (function () {\n    function JsonpModule() {\n    }\n    JsonpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        // TODO(pascal): use factory type annotations once supported in DI\n                        // issue: https://github.com/angular/angular/issues/3183\n                        { provide: Jsonp, useFactory: jsonpFactory, deps: [JSONPBackend, RequestOptions] },\n                        BrowserJsonp,\n                        { provide: RequestOptions, useClass: BaseRequestOptions },\n                        { provide: ResponseOptions, useClass: BaseResponseOptions },\n                        JSONPBackend,\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    JsonpModule.ctorParameters = function () { return []; };\n    return JsonpModule;\n}());\nexport { JsonpModule };\nfunction JsonpModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    JsonpModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    JsonpModule.ctorParameters;\n}\n//# sourceMappingURL=http_module.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Version } from '@angular/core';\n/**\n * @deprecated use \\@angular/common/http instead\n */\nexport var /** @type {?} */ VERSION = new Version('5.2.11');\n//# sourceMappingURL=version.js.map","import { Component, OnInit, AfterViewInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-toast',\n  template: `<div class=\"toast-wraper\"> {{msg}} </div> `,\n  // styleUrls:  ['./jdb-plg-toast.component.scss']\n})\nexport class JdbPlgToastComponent implements OnInit {\n\n  @Input() msg:string = \"\";\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n}\n\n\n\n","import {\n    Component,\n    OnInit, Input,\n    ViewContainerRef,\n    ViewChild, ElementRef,\n    ComponentRef,\n    ComponentFactoryResolver,\n    Injector,\n    OnDestroy,\n    Output,\n    EventEmitter,\n\n} from '@angular/core';\n\n\n\n@Component({\n    selector: 'jdb-tab',\n    template: `<div class=\"tab-wraper\"> <div class=\"tab-nav-wraper\"> <div class=\"tab-item\" *ngFor=\"let item of items;let i = index;\" [ngClass]=\"{'tab-selected':i == curTabIndex}\" title='{{item.title}}'> <div (click)=\"tabChange(i)\" class=\"tab-text\"> {{item.title}}</div> <span class=\"close-btn\" (click)=\"removeTab(i)\" *ngIf=\"i !== 0 && item.isCloseFlag != true\">&times;</span> </div> </div> <div class=\"tab-content-wraper\"> <div #tabContent class=\"place-holder\"></div> </div> </div> `,\n    // styleUrls:  ['./jdb-tab.component.scss']\n})\n\nexport class JdbTabComponent implements OnInit, OnDestroy {\n    // @ViewChild('tabContent') tabContent: ElementRef;\n    @ViewChild('tabContent', { read: ViewContainerRef }) target;\n    @Output() onTabChange = new EventEmitter();\n    @Output() onTabRemove = new EventEmitter();\n    @Output() onTopComMsg = new EventEmitter();\n    items = [];\n    tabComs = [];\n    tabSubs: any;\n    curTabIndex = 0;\n    tabIdComMap = {};\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver,\n        public _injector: Injector,\n    ) { }\n\n\n    ngOnInit() {\n    }\n\n\n    /**\n     *\n     * @param ChildComponent\n     * @param attrs:{\n     *     propery:value\n     * ]\n     * title:string\n     * isCloseFlag\n     */\n    addItem(ChildComponent: any, attrs: any, title: string, comId: any = \"\", isCloseFlag: boolean = false) {\n\n        if (comId && this.tabIdComMap[comId]) {\n            let com: any = this.tabIdComMap[comId];\n            this.tabChange(com.index);\n            return;\n        }\n        const childComponent = this.componentFactoryResolver.resolveComponentFactory(ChildComponent);\n        var comInstance = this.target.createComponent(childComponent);\n        var keys = Object.keys(attrs);\n        this.items.push({\n            title: title,\n            isCloseFlag: isCloseFlag\n        });\n        keys.forEach((value) => {\n            comInstance.instance[value] = attrs[value];\n        });\n        this.tabComs.push(comInstance);\n        if (this.items.length > 1) {\n            this.setOneComHide(this.curTabIndex);\n        }\n\n        this.tabSubs = comInstance.instance['onTopComMsg'] = new EventEmitter();\n        this.tabSubs.subscribe((value) => {\n            this.onTopComMsg.emit(value)\n        });\n        this.curTabIndex = this.items.length - 1;\n        if (comId) {\n            this.tabIdComMap[comId] = {\n                index: this.curTabIndex,\n                comInstance: comInstance.instance\n            }\n        }\n        return comInstance;\n    }\n\n    private setOneComHide(tabIndex) {\n        this.tabComs[tabIndex].location.nativeElement.style.display = \"none\";\n    }\n\n    private setOneComShow(tabIndex) {\n        this.tabComs[tabIndex].location.nativeElement.style.display = \"block\";\n    }\n\n    tabChange(index) {\n        if (this.curTabIndex === index) {\n            return;\n        }\n        this.setOneComHide(this.curTabIndex);\n        this.setOneComShow(index);\n        this.curTabIndex = index;\n        this.onTabChange.emit(index);\n        this.tabComs[index].instance.tabRefresh && this.tabComs[index].instance.tabRefresh({});\n        // this.tabComs[index].destroy();\n    }\n\n    setOneTabShow(index) {\n        this.tabChange(index);\n    }\n\n    removeTab(index) {\n        this.tabComs[index].destroy();\n        this.tabComs.splice(index, 1);\n        this.items.splice(index, 1);\n        if (index <= this.curTabIndex) {\n            this.curTabIndex--;\n        }\n        if (this.curTabIndex < 0) {\n            this.curTabIndex = 0;\n        }\n        this.setOneComShow(this.curTabIndex);\n        this.onTabRemove.emit(index);\n        let tabIdComMap = this.tabIdComMap;\n        for (let key in tabIdComMap) {\n            if (tabIdComMap[key].index == index) {\n                delete tabIdComMap[key];\n                break;\n            }\n        }\n\n    }\n\n    removeTabById(id:string) {\n        let tabIdComMap = this.tabIdComMap;\n        for(let key in tabIdComMap) {\n            if(key == id)  {\n                this.removeTab(tabIdComMap[key]['index']);\n                break;\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.target) {\n            // this.target.destroy();\n            this.target.clear();\n        }\n    }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-show-picture',\n  template: `<div> <div class=\"img-mask\" (click)=\"closeModel()\"> <!-- 遮罩层 --> </div> <div class=\"img-content\"> <span class=\"close\" (click)=\"closeModel()\"> <img src=\"/assets/images/close-x.png\" alt=\"\"> </span> <img [src]=\"pictureUrl\" alt=\"\" style=\"max-height: 600px;max-width: 800px;\"> </div> </div> `,\n  // styleUrls:  ['./show-picture.component.scss']\n})\nexport class ShowPictureComponent implements OnInit {\n  @Input() pictureUrl: string;\n  @Output() update = new EventEmitter<{status: boolean}>();\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  closeModel(){\n    this.update.emit({status: false})\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ElementRef,\n  Renderer,\n  animate,\n  style,\n  transition,\n  trigger,\n  state,\n  HostListener,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterViewInit\n} from '@angular/core';\n\n@Component({\n  selector: 'app-picture-viewer',\n  template: `<div class=\"picture-viewer\"> <div class=\"img-mask\" *ngIf=\"_jdbMaster\" (click)=\"closeModel()\"> <!-- 遮罩层 --> </div> <div #imgContent [ngClass]=\"{'img-content-componet':jdbShowType==2}\" class=\"img-content\"> <!-- 右上角关闭按钮 --> <div class=\"close\" *ngIf=\"_jdbClear\" (click)=\"closeModel()\"> <span class=\"icon-close\"></span> </div> <!-- 图片box --> <ul class=\"img-box\" #img> <!-- <li *ngFor=\"let item of pictureList;let i=index\" [@imgMove]=\"ImgState(i)\"> <img appDragDirective  [src]=\"item.imgUrl\" alt=\"\" style=\"max-height: 600px;max-width: 800px;\"> </li> --> </ul> <!-- 上一页下一页 --> <div [hidden]=\"current==0\" class=\"prev-page\" (click)=\"Prev()\"> <span class=\"icon-pagination-prev\"></span> </div> <div [hidden]=\"current==pictureList.length-1\" class=\"next-page\" (click)=\"Next()\"> <span class=\"icon-pagination-next\"></span> </div> <!-- 右下角页码 --> <div class=\"img-index\">{{current+1}}/{{pictureList.length}}</div> <!-- 缩放旋转按钮组 --> <div class=\"btn-box\"> <span [ngClass]=\"{'hover-disabled':imgOperate.num===4}\" class=\"icon-picture-zoom-in scale-big\" (click)=\"scaleBig()\"></span> <span [ngClass]=\"{'hover-disabled':imgOperate.num==0.5}\" class=\"icon-picture-zoom-out  scale-small\" (click)=\"scaleSmall()\"></span> <span class=\"icon-picture-counterclockwise routate-ni\" (click)=\"routateNi()\"></span> <span class=\"icon-picture-clockwise routate-shun\" (click)=\"routateShun()\"></span> </div> </div> </div>`,\n  // styleUrls:  ['./picture-viewer.component.scss'],\n  animations: [\n    trigger('imgMove', [\n      /** 不显示 */\n      state('off', style({ 'display': 'none', 'z-index': '0', 'transform': 'translateX(0)' })),\n      /** 上一张图片 */\n      state('prev', style({\n        'z-index': '1',\n        'transform': 'translateX(-100%)'\n      })),\n      /** 下一张图片 */\n      state('next', style({ 'z-index': '2', 'transform': 'translateX(100%)' })),\n      /** 当前图片 */\n      state('on', style({ 'z-index': '3', 'transform': 'translateX(0)' })),\n      transition('prev=>on', [\n        animate('0.3s ease-in')\n      ]),\n      transition('next=>on', [\n        animate('0.3s ease-in')\n      ]),\n      transition('on=>prev', [\n        animate('0.3s ease-in')\n      ]),\n      transition('on=>next', [\n        animate('0.3s ease-in')\n      ])\n    ])\n  ]\n})\nexport class PictureViewerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() pictureList: any = [];\n  @Output() update = new EventEmitter<{ status: boolean }>();\n  // @Input() current: number = 0;\n  @ViewChild('img') imgBox: ElementRef;  // 图片父节点\n  @ViewChild('imgContent') imgContent: ElementRef; // 容器元素\n  // 设置容器的默认宽高，可适配 可配置属性\n  @Input() maxWidth: number = 800;\n  @Input() maxHeight: number = 600;\n  @Input() jdbShowType: number = 1; // 是浮层还是嵌入组件，默认为1，作为浮层，若为2，则表示是嵌入组件\n\n  _jdbMaster = true; // 是否需要master遮罩，默认需要遮罩层\n  _jdbClear = true;// 是否需要按钮叉，默认需要\n  dragStatus = false;\n  current = 0; // 展示图片下标，默认为0\n\n  elem: any;\n\n  imgOperate = {\n    num: 1,\n    degnum: 0\n  };\n\n\n  @Input()\n  set jdbMaster(value: boolean) {\n    this._jdbMaster = this.toBoolean(value);\n  }\n\n  get jdbMaster(): boolean {\n    return this._jdbMaster;\n  }\n\n  @Input()\n  set jdbClear(value: boolean) {\n    this._jdbClear = this.toBoolean(value);\n  }\n\n  get jdbClear(): boolean {\n    return this._jdbClear;\n  }\n\n  @Input()\n  set jdbCurrent(value: number) {\n    if (value > this.pictureList.length || value < 0) {\n      this.current = 0;\n      return;\n    }\n    this.current = value;\n  }\n\n  get jdbCurrent(): number {\n    return this.current;\n  }\n\n  constructor(private renderer: Renderer) {\n\n  }\n\n  ngOnInit() {\n    this.elem = this.imgBox.nativeElement.children;  // 所有的li\n  }\n\n  ngOnChanges() {\n    if (this.pictureList) {\n      this.pictureList.forEach((element, index) => {\n        this.resetPosition(index);\n      });\n    }\n  }\n\n  // 设置元素样式\n  ngAfterViewInit() {\n    const imgContent = this.imgContent.nativeElement;\n    this.renderer.setElementStyle(imgContent, 'height', this.maxHeight + 'px');\n    this.renderer.setElementStyle(imgContent, 'width', this.maxWidth + 'px');\n\n    if (this.jdbShowType == 1) {\n      this.renderer.setElementStyle(imgContent, 'margin-left', - this.maxWidth / 2 + 'px');\n      this.renderer.setElementStyle(imgContent, 'margin-top', - this.maxHeight / 2 + 'px');\n    }\n  }\n\n  // 重置图片位置\n  resetPosition(index) {\n    const image = new Image();\n    image.onload = () => {\n      // 获取当前加载图片宽高\n      let w = image.width;\n      let h = image.height;\n      let hRatio;\n      let wRatio;\n      // 设置默认比例以及容器宽高\n      const imgRate = w / h; // 图片宽高比\n      // const maxWidth = 800;\n      // const maxHeight = 600;\n      wRatio = this.maxWidth / w;\n      hRatio = this.maxHeight / h;\n\n      if (wRatio > 1 && hRatio > 1) {\n        // 两者比例均大于1表示图为小图，宽高未达到800*600,则取原图大小\n        w = w;\n        h = h;\n      } else if (wRatio < 1 && hRatio < 1) {\n        // 两者比例均小于1表示图为大图，宽高达到800*600,则取容器大小\n        if (imgRate > 1) {\n          // 宽图\n          w = this.maxWidth;\n          h = w / imgRate;\n        } else if (imgRate < 1) {\n          // 长图\n          h = this.maxHeight;\n          w = h * imgRate;\n        }\n\n      } else if (wRatio > 1 && hRatio < 1) {\n        // 表示为长图片，则高为600，宽等比例缩放取值\n        h = this.maxHeight;\n        w = w * hRatio;\n      } else if (wRatio < 1 && hRatio > 1) {\n        // 表示为宽图片，则宽为800，高等比例缩放取值\n        h = h * wRatio;\n        w = this.maxWidth;\n      }\n\n      // 设置图片展示宽高\n      this.renderer.setElementStyle(this.elem[index].children[0], 'height', h + 'px');\n      this.renderer.setElementStyle(this.elem[index].children[0], 'width', w + 'px');\n\n      if (w === this.maxWidth && h === this.maxHeight) {\n        // 设置图片位置使其垂直水平居中\n        this.renderer.setElementStyle(this.elem[index].children[0], 'top', '0px');\n        this.renderer.setElementStyle(this.elem[index].children[0], 'left', '0px');\n      } else {\n        // 设置图片位置使其垂直水平居中\n        this.renderer.setElementStyle(this.elem[index].children[0], 'top', (this.maxHeight - h) / 2 + 'px');\n        this.renderer.setElementStyle(this.elem[index].children[0], 'left', (this.maxWidth - w) / 2 + 'px');\n      }\n\n    };\n    image.src = this.pictureList[index].imgUrl;\n  }\n\n  // 切换动画\n  ImgState(index) {\n    if (this.pictureList && this.pictureList.length) {\n      if (this.current === 0) {\n        return index === 0 ? 'on' :\n          index === 1 ? 'next' :\n            index === this.pictureList.length - 1 ? 'prev' :\n              'off';\n      } else if (this.current === this.pictureList.length - 1) {\n        return index === this.pictureList.length - 1 ? 'on' :\n          index === this.pictureList.length - 2 ? 'prev' :\n            index === 0 ? 'next' :\n              'off';\n      }\n      switch (index - this.current) {\n        case 0:\n          return 'on';\n        case 1:\n          return 'next';\n        case -1:\n          return 'prev';\n        default:\n          return 'off';\n      }\n    } else {\n      return 'off';\n    }\n  }\n\n  // 下一张图\n  Next() {\n    this.resetImgData();\n    this.current = (this.current + 1) % this.pictureList.length;\n    this.resetPosition(this.current - 1);\n    // 修改状态，使拖动图片回到原来位置\n    // this.dragStatus = true;\n  }\n\n  // 上一张图\n  Prev() {\n    this.resetImgData();\n    this.current = this.current - 1 < 0 ? this.pictureList.length - 1 : this.current - 1;\n    this.resetPosition(this.current + 1);\n    // 修改状态，使拖动图片回到原来位置\n    // this.dragStatus = true;\n  }\n\n  // 关闭图片查看器 __关闭弹框后再次打开所有拖拽后的位置都会自动归为，因为触发了onChanges方法\n  closeModel() {\n    this.resetImgData();\n    this.update.emit({ status: false });\n  }\n\n  // 放大 50% 100% 200% 400%\n  scaleBig() {\n    this.imgOperate.num = this.imgOperate.num * 2;\n    if (this.imgOperate.num > 4) {\n      this.imgOperate.num = 4;\n    }\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 缩小\n  scaleSmall() {\n    this.imgOperate.num = this.imgOperate.num / 2;\n    if (this.imgOperate.num < 1) {\n      this.imgOperate.num = 0.5;\n    }\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 逆时针旋转\n  routateNi() {\n    this.imgOperate.degnum++;\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 顺时针旋转\n  routateShun() {\n    this.imgOperate.degnum--;\n\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 重置图片数据\n  resetImgData() {\n    this.imgOperate = {\n      num: 1,\n      degnum: 0\n    };\n    const rate = 'scale(1,1) rotate(0deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transition', 'transform 0.2s linear 0.4s');\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  ngOnDestroy() {\n    this.pictureList = null;\n    this.imgBox = null;\n    this.imgContent = null;\n    this.current = null;\n  }\n}\n","import {\n    HostListener,\n    ElementRef,\n    Directive,\n    Component,\n    Renderer,\n    OnInit,\n    Input,\n    AfterContentInit,\n    OnChanges,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n@Directive({\n    selector: 'img[appDragDirective]'\n})\nexport class DragDirective {\n    oldLeft: string;\n    oldTop: string;\n\n    private isDown = false;\n    private disX;\n    private disY;\n    private disLeft;\n    private disTop;\n\n    constructor(\n        private elem: ElementRef,\n        private render: Renderer\n    ) {\n        //\n    }\n\n    // 点击事件\n    @HostListener('mousedown', ['$event']) onMousedown(event) {\n        const wRate = localStorage.getItem('dragWidth');\n        const hRate = localStorage.getItem('dragHeight');\n        this.isDown = true;\n\n        this.disLeft = this.elem.nativeElement.offsetLeft;\n        this.disTop = this.elem.nativeElement.offsetTop;\n\n        this.disX = event.clientX;\n        this.disY = event.clientY;\n        event.target.style.cursor = 'move';\n        // event.preventDefault();\n    }\n\n    // 监听移动事件事件\n    @HostListener('mousemove', ['$event']) onMousemove(event) {\n        event.preventDefault();\n        // 判断该元素是否被点击了。\n\n        if (this.isDown) {\n            const newdisX = event.clientX - this.disX;\n            const newdisY = event.clientY - this.disY;\n            this.elem.nativeElement.style.left = newdisX + this.disLeft + 'px';\n            this.elem.nativeElement.style.top = newdisY + this.disTop + 'px';\n\n        }\n        return false;\n\n\n    }\n\n    // 监听document离开事件\n\n    @HostListener('mouseup', ['$event']) onMouseup() {\n        // 只用当元素移动过了，离开函数体才会触发。\n        if (this.isDown) {\n            this.isDown = false;\n            this.disLeft = this.elem.nativeElement.offsetLeft;\n            this.disTop = this.elem.nativeElement.offsetTop;\n        }\n    }\n\n    // 监听元素离开事件\n    @HostListener('mouseleave', ['$event']) onMouseleave() {\n        this.isDown = false;\n    }\n    ngOnDestroy() {\n        //Called once, before the instance is destroyed.\n        //Add 'implements OnDestroy' to the class.\n        \n    }\n}\n","\nimport {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  Renderer2\n} from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-pagination',\n  template: `<div class=\"jdb-plg-pagination\"> <!-- 总条数 --> <span *ngIf=\"_showTotal\" class=\"total-box\"> 共{{_total}}条 </span> <div class=\"operate-box\"> <!-- 条数切换 --> <div class=\"jdb-plg-pagination-options\" *ngIf=\"_showPageSize\"> <app-jdb-plg-select (ngModelChange)=\"dataChange(false,$event)\" [jdbSize]=\"'small'\" [jdbWidth]=\"'90px'\" [(ngModel)]=\"_pageSize\" [jdbSelectList]=\"_options\"></app-jdb-plg-select> </div> <!-- 基本分页样式 --> <ul *ngIf=\"!_jdbSimple\" class=\"base-pagination\"> <!-- 上一页按钮 --> <li class=\"jdb-plg-pagination-prev\" title=\"上一页\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_current-1)\"> <span class=\"jdbIcon icon-pagination-prev\"></span> </li> <!-- 首页按钮 --> <li class=\"jdb-plg-pagination-first\" title=\"首页\" [ngClass]=\"{'active':_current===_firstIndex}\" (click)=\"dataChange(true,_firstIndex)\"> {{_firstIndex}} </li> <!-- 省略号 --> <li class=\"jdb-plg-pagination-forward\" *ngIf=\"(_lastIndex >9)&&(_current-4>_firstIndex)\" (click)=\"jumpBefore(_pageSize)\"> <span class=\"icon-pagination-more\"></span> <span class=\"icon-pagination-jump-prev\"></span> </li> <!-- 按钮 --> <li class=\"jdb-plg-pagination-pager\" *ngFor=\"let page of pages\" [ngClass]=\"{'active':_current===page.index}\" (click)=\"dataChange(true,page.index)\"> {{page.index}} </li> <!-- 省略号 --> <li class=\"jdb-plg-pagination-backward\" *ngIf=\"(_lastIndex >9)&&(_current+4<_lastIndex)\" (click)=\"jumpAfter(_pageSize)\"> <span class=\"icon-pagination-more\"></span> <span class=\"icon-pagination-jump-next\"></span> </li> <!-- 尾页按钮 --> <li class=\"jdb-plg-pagination-last\" *ngIf=\"(_lastIndex>0)&&(_lastIndex!==_firstIndex)\" title=\"尾页\" [ngClass]=\"{'active':_current===_lastIndex}\" (click)=\"dataChange(true,_lastIndex)\"> {{_lastIndex}} </li> <!-- 下一页按钮 --> <li class=\"jdb-plg-pagination-next\" title=\"下一页\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_current+1)\"> <span class=\"jdbIcon icon-pagination-next\"></span> </li> </ul> <!-- 简单分页样式 --> <div class=\"simple-pagination\" *ngIf=\"_jdbSimple\"> <div class=\"left-box\"> <span class=\"icon-pagination-first\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_firstIndex)\"></span> <span class=\"icon-pagination-prev\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_current-1)\"></span> </div> <div class=\"center-box\"> {{_current}} / {{_lastIndex}} </div> <div class=\"right-box\"> <span class=\"icon-pagination-next\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_current+1)\"></span> <span class=\"icon-pagination-last\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_lastIndex)\"></span> </div> </div> <!-- 快速跳转 --> <div *ngIf=\"_showQuickJump\" class=\"quick-jumper\"> 第 <input #inputJump type=\"text\" [(ngModel)]=\"quickJumpPage\" (keyup.enter)=\"quickJump()\" appOnlyNumber=\"true\"> 页 <button (click)=\"quickJump()\">跳转</button> </div> </div> </div>`,\n  // styleUrls:  ['./jdb-plg-pagination.component.scss']\n})\nexport class JdbPlgPaginationComponent {\n  _total: number; // 总条数\n  _current = 1; // 当前页码默认为1\n  _pageSize = 10; // 默认条数\n  _firstIndex = 1;  // 首页默认为1\n  _lastIndex = Infinity;  // 尾页默认为无穷\n  _showTotal = false;  // 是否展示总数，默认不展示\n  _showPageSize = false; // 是否展示页码切换，默认不展示\n  _showQuickJump = false; // 是否展示快速跳转，默认不展示\n  pages = [];  // 页码数组\n  // _options = [10, 20, 30, 40, 50]; // select默认数组\n  // select默认数组\n  _options = [\n    { value: 10, text: '10条/页' },\n    { value: 20, text: '20条/页' },\n    { value: 30, text: '30条/页' },\n    { value: 40, text: '40条/页' },\n    { value: 50, text: '50条/页' }\n  ];\n\n  quickJumpPage: any; // 快速跳转页码\n  hisQicukPage: any;  // 历史快速跳转页码\n  _jdbSimple = false; // 是否为简单分页，默认为基本分页\n\n  @Output() jdbPageSizeChange: EventEmitter<number> = new EventEmitter();  // 条数切换  命名与属性相关\n  @Output() jdbPageIndexChange: EventEmitter<number> = new EventEmitter();  // 页码切换\n\n  @ViewChild('inputJump') private inputJump: ElementRef;\n  constructor(\n    private el: ElementRef,\n    private renderer2: Renderer2\n  ) { }\n\n  // 是否展示总数标签\n  @Input()\n  set jdbShowTotal(value: boolean) {\n    this._showTotal = this.toBoolean(value);\n  }\n\n  get jdbShowTotal(): boolean {\n    return this._showTotal;\n  }\n\n  // 数据总数\n  @Input()\n  set jdbTotal(value: number) {\n    // 若传入值和当前total一致，则不触发操作\n    if (value === this._total) {\n      return;\n    }\n    this._total = value;\n    this.setPageNo();\n  }\n\n  get jdbTotal(): number {\n    return this._total;\n  }\n\n  // jdbPageIndex与_current关联，表示页码\n  @Input()\n  set jdbPageIndex(value: number) {\n    if (this._current === value) {\n      return;\n    }\n    if (value > this._lastIndex || value < this._firstIndex) {\n      return;\n    }\n    this._current = Number(value);\n    this.setPageNo();\n  }\n\n  get jdbPageIndex(): number {\n    return this._current;\n  }\n\n  // 是否展示切换条数select\n  @Input()\n  set jdbShowPageSize(value: boolean) {\n    this._showPageSize = this.toBoolean(value);\n  }\n\n  get jdbShowPageSize(): boolean {\n    return this._showPageSize;\n  }\n\n  // 默认条数\n  @Input()\n  set jdbPageSize(value: number) {\n    if (value === this._pageSize) {\n      return;\n    }\n    this._pageSize = value;\n    this.setPageNo();\n  }\n\n  get jdbPageSize(): number {\n    return this._pageSize;\n  }\n\n  // 默认下拉选择条数数组\n  @Input()\n  set jdbSizeOptions(value) {\n    // 若传入值和当前total一致，则不触发操作\n    if (value === this._options) {\n      return;\n    }\n\n    // 判断是否为数组\n    if (Object.prototype.toString.call(value) === '[object Array]') {\n      const optionsArr = [];\n      value.forEach(elem => {\n        const obj = {\n          value: elem,\n          text: elem + '条/页'\n        };\n        optionsArr.push(obj);\n      });\n      this._options = optionsArr;\n    }\n  }\n\n  get jdbSizeOptions() {\n    return this._options;\n  }\n\n  // 是否展示快速跳转页面\n  @Input()\n  set jdbShowQuickJump(value: boolean) {\n    this._showQuickJump = this.toBoolean(value);\n  }\n\n  get jdbShowQuickJump(): boolean {\n    return this._showQuickJump;\n  }\n\n  // 分页样式\n  @Input()\n  set jdbSimple(value: boolean) {\n    this._jdbSimple = this.toBoolean(value);\n  }\n\n  get jdbSimple(): boolean {\n    return this.jdbSimple;\n  }\n\n  // 创建页码\n  setPageNo() {\n    // 向上取整\n    this._lastIndex = Math.ceil(this._total / this._pageSize);\n    // 如果当前页码大于尾页，则等于尾页\n    // if (this._current > this._lastIndex) {\n    //   this.jdbPageIndex = this._lastIndex;\n    //   this.jdbPageIndexChange.emit(this.jdbPageIndex);\n    // }\n\n    const tmpPages = [];\n\n    if (this._lastIndex <= 9) {\n      // 若总页数不超过9，则全部展示在页面上\n      for (let i = 2; i <= this._lastIndex - 1; i++) {\n        tmpPages.push({\n          index: i\n        });\n      }\n    } else {\n      const current = +this._current;\n      let left = Math.max(2, current - 2);\n      let right = Math.min(current + 2, this._lastIndex - 1);\n\n      // 特殊处理正数第五个数和倒数第五个数\n      if (current === 5) {\n        left = 2;\n      } else if (current === this._lastIndex - 4) {\n        right = this._lastIndex - 1;\n      }\n\n      if (current - 1 <= 3) {\n        right = 7;\n      }\n\n      if (this._lastIndex - current <= 3) {\n        left = this._lastIndex - 6;\n      }\n\n      for (let i = left; i <= right; i++) {\n        tmpPages.push({ index: i });\n      }\n    }\n\n    this.pages = tmpPages;\n  }\n\n  // status为true表示页码切换，num表示页码，false表示条数切换，num表示条数\n  dataChange(status: boolean, num: number): void {\n    if (status) {\n      if (num === this._firstIndex - 1 || num === this._lastIndex + 1) {\n        return;\n      }\n      // 清空输入框内容\n      this.quickJumpPage = '';\n      this.jdbPageIndex = num;\n      this.jdbPageIndexChange.emit(this.jdbPageIndex);\n    } else {\n      // 清空输入框内容\n      this.quickJumpPage = '';\n      this.jdbPageSize = num;\n      this.jdbPageSizeChange.emit(num);\n\n      // 切换页数之后需要将页码重置为1\n      this.jdbPageIndex = 1;\n      this.jdbPageIndexChange.emit(this.jdbPageIndex);\n      this.setPageNo();\n    }\n    // this.setPageNo();\n  }\n\n  // 点击跳转按钮快速跳转\n  quickJump() {\n    // 若是输入的页码大于最后一页页码，即超出范围不存在，则清空页码，并使输入框获取焦点\n    if (this.quickJumpPage > this._lastIndex) {\n      this.inputJump.nativeElement.focus();\n      this.quickJumpPage = '';\n      return;\n    }\n\n    // 若输入为空，则不能跳转\n    if (!this.quickJumpPage) {\n      return;\n    }\n\n    this.jdbPageIndex = this.quickJumpPage;\n    this.jdbPageIndexChange.emit(this.jdbPageIndex);\n  }\n\n  // 点击左箭头(为什么使用条数除以2呢)\n  jumpBefore(pageSize) {\n    this.dataChange(true, this._current - Math.round(pageSize / 2));\n  }\n\n  // 点击右箭头\n  jumpAfter(pageSize) {\n    this.dataChange(true, this._current + Math.round(pageSize / 2));\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  // 校验是否为纯数字\n  isNumber(obj) {\n    const reg = /^[0-9]*$/;\n    return reg.test(obj);\n  }\n\n}\n\n","'use strict';\nfunction isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n}\nfunction isObject(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Object]\";\n}\n\nfunction isDate(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Date]\";\n}\n\nfunction toJson(value) {\n    var jsonObj = {};\n    try {\n        jsonObj = JSON.parse(value);\n    } catch (e) {\n        console.log('to json parse error');\n    }\n    return jsonObj;\n}\nfunction serializeValue(v) {\n    if (isObject(v)) {\n        return isDate(v) ? v.toISOString() : toJson(v);\n    }\n    return v;\n}\nfunction encodeUriQuery(val, pctEncodeSpaces?) {\n    return encodeURIComponent(val).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\nexport function jQueryLikeParamSerializer(params) {\n    if (!params) return '';\n    var parts = [];\n    serialize(params, '', true);\n    return parts.join('&');\n\n    function serialize(toSerialize: any, prefix: any, topLevel?: any) {\n        if (isArray(toSerialize)) {\n            toSerialize.forEach((value, index) => {\n                serialize(value, prefix + '[' + (isObject(value) ? index : '') + ']');\n            });\n        } else if (isObject(toSerialize) && !isDate(toSerialize)) {\n            for (let key in toSerialize) {\n                serialize(toSerialize[key], prefix +\n                    (topLevel ? '' : '.') +\n                    key +\n                    (topLevel ? '' : ''));\n\n                // serialize(toSerialize[key], prefix +\n                //     (topLevel ? '' : '[') +\n                //     key +\n                //     (topLevel ? '' : ']'));\n            }\n        } else {\n            parts.push(encodeUriQuery(prefix) + '=' +\n                (toSerialize == null ? '' : encodeUriQuery(serializeValue(toSerialize))));\n        }\n    }\n}\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst propIsEnumerable = Object.prototype.propertyIsEnumerable;\nexport function toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n  return Object(val);\n}\nexport function objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  const to = toObject(target);\n  let symbols: any;\n  for (let s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (const key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n    if ((<any>Object).getOwnPropertySymbols) {\n      symbols = (<any>Object).getOwnPropertySymbols(from);\n      for (let i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n}\n","import {Cookie} from 'ng2-cookies/ng2-cookies';\nimport {Injectable, ComponentFactoryResolver} from '@angular/core';\nimport {Http, Headers, Response, RequestOptions} from '@angular/http';\nimport {Observable} from 'rxjs/Rx';\n// import {environment} from '../../../../../environments/environment';\nimport {JdbPlgToastComponent} from '../../components/jdb-plg-toast/jdb-plg-toast.component';\nimport {jQueryLikeParamSerializer} from './query-string';\nimport {objectAssign} from './object-assign';\nimport {Router} from '@angular/router';\n\n// const DEFAULTHOST = environment.apiConfig.defaultHost;\n// const APIS = environment.apiConfig.apis;\n// const ENV = environment.env;\n\n@Injectable()\nexport class JdbPlgBaseService {\n  vRef;\n\n  constructor(private http: Http, private componentFactoryResolver: ComponentFactoryResolver, private route: Router) {\n  }\n\n  // 处理不同环境的Url，在原来的基础上做了优化\n  // getUrl(apiName: string) {\n  //   let api = APIS[apiName];\n  //   if (ENV == 'serve' && api.serve) {\n  //     return api.serve;\n  //   }\n  //   if (api.host && api.host[ENV]) {\n  //     return api.host[ENV] + api.path;\n  //   }\n  //   return DEFAULTHOST[ENV] + api.path;\n  // }\n\n  setRootViewContainerRef(vRef) {\n    this.vRef = vRef;\n\n  }\n\n  toast(msg, delayTime = 3000) {\n    //通过ComponentFactoryResolver 创建出动态组件的实例\n    const childComponent = this.componentFactoryResolver.resolveComponentFactory(JdbPlgToastComponent);\n    let comInstance = this.vRef.createComponent(childComponent);\n    comInstance.instance.msg = msg;\n    comInstance.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      comInstance.destroy();\n    }, delayTime);\n  }\n\n  test() {\n    alert('jdb services....');\n  }\n\n  /**\n   *\n   * @param apiName\n   * @param dataObj\n   * @param isIntercept 是否拦截处理returnCode != 0 的情况\n   */\n  post(apiName, dataObj, options) {\n    let time = new Date().getTime();\n    let loginToken;\n    let loginWay;\n    let orgUid;\n    if (options && options.tokenObj) {\n      loginToken = localStorage.getItem(options.tokenObj.loginToken);\n      loginWay = localStorage.getItem(options.tokenObj.loginWay);\n      orgUid = localStorage.getItem(options.tokenObj.orgUid);\n    }\n    let loginObj: any = {};\n    let data: any = {};\n    let currentRoute = location.hash.split('/')[1];\n    if (loginToken) {\n      if (orgUid) {\n        loginObj = {\n          'loginToken': loginToken,\n          'loginWay': loginWay,\n          'orgUid': orgUid,\n          'jdbDhTraceId': time + '-' + parseInt(Math.random() * (100000 + 1) + 1 + '')\n        };\n      } else {\n        loginObj = {\n          'loginToken': loginToken,\n          'loginWay': loginWay,\n          'jdbDhTraceId': time + '-' + parseInt(Math.random() * (100000 + 1) + 1 + '')\n        };\n      }\n\n      data = objectAssign({}, loginObj, dataObj);\n    } else {\n      data = objectAssign({}, dataObj);\n    }\n    data = jQueryLikeParamSerializer(data);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');\n    let reqUrl = apiName;\n    let that = this;\n    let requestoptions = new RequestOptions({\n      headers: headers,\n      method: 'post',\n      body: data || {}\n    });\n    console.log(this.http);\n    return this.http.request(reqUrl, requestoptions)\n      .map((res: Response) => res.json())\n      .filter((res: any) => {\n\n        //校验接口返回的数据结构格式\n        if(!(res.hasOwnProperty('data') && res.hasOwnProperty('error'))){\n           this.toast('系统接口格式错误！');\n           options && options.reset && options.reset();\n           return false;\n        }\n        if (options.fns && options.fns.length != 0) {\n          let len = options.fns.length;\n          for (let i = 0; i < len; i++) {\n            let fn = options.fns[i];\n            if (res.error && res.error.returnCode * 1 === fn.returnCode && currentRoute != 'login') {\n              fn.callback();\n            }\n          }\n        }\n        if (res.error && res.error.returnCode * 1 == 0) {\n          return true;\n        }\n        //兼容登录组件中qrcodeApi和loginApi两个接口老的写法\n        if(typeof(options) === 'boolean'){\n          if(options){\n            this.toast(res && res.error && res.error.returnUserMessage);\n            return false;\n          }else{\n            return true;\n          }\n        }\n        //是否拦截处理\n        if(options.isIntercept){\n          this.toast(res && res.error && res.error.returnUserMessage);\n          return false;\n        }else {\n          return true;\n        }\n\n      })\n      .catch((error: any) => {\n        return Observable.throw(error || 'Server error');\n      });\n  }\n\n  postJSON(apiName, dataObj) {\n    // let headers = new Headers({\n    //     'Content-Type': 'application/json',\n    //     'withCredentials': true\n    // });\n\n    let headers = new Headers();\n    // headers.append('Content-Type', 'application/x-www-form-urlencoded;charset=utf-8');\n    headers.append('Content-Type', 'application/json;charset=utf-8');\n\n    // headers.append('withCredentials','true');\n    // let urlData = new URLSearchParams();\n    // if (Object.keys(dataObj).length > 0) {\n    //     for (let key in dataObj) {\n    //         urlData.append(key, dataObj[key]);\n    //     }\n    // }\n    // let loanMarketToken = Cookie.get('loanMarketToken');\n    // urlData.append('loanMarketToken', loanMarketToken);\n\n    let reqUrl = apiName;\n    let that = this;\n    // let requestoptions = new RequestOptions({\n    //     method: RequestMethod.Post,\n    //     url: reqUrl,\n    //     headers: headers,\n    //     body: testData\n    // })\n    let options = new RequestOptions({\n      headers: headers,\n      method: 'post',\n      url: reqUrl,\n      body: dataObj || {}\n    });\n    return this.http.request(reqUrl, options)\n      .map((res: Response) => res.json())\n      .filter((res: any) => {\n        if (res.error && res.error.returnCode * 1 == 0) {\n          return true;\n        }\n        else {\n          return false;\n        }\n\n      })\n      .catch((error: any) => {\n        return Observable.throw(error || 'Server error');\n      });\n  }\n\n  stamp2string(stamp) {\n    if (stamp) {\n      let date = new Date(stamp).toJSON();\n      return date.split('T')[0];\n    }\n    return null;\n  }\n\n  export(apiName, params) {\n    let cookieStr = Cookie.get('loginInfo');\n    let cookieObj: any = {};\n    let cookieData: any = {};\n    if (cookieStr) {\n      try {\n        cookieObj = JSON.parse(cookieStr);\n        cookieData = {\n          loginToken: cookieObj.loginToken,\n          employeeId: cookieObj.empId\n        };\n      }\n      catch (e) {\n        console.log('parse cookie error...');\n      }\n    }\n\n    let paramsObj = objectAssign({}, cookieData, params);\n    let url = apiName + '?';\n    for (let key in paramsObj) {\n      if (paramsObj[key]) {\n        url += key + '=' + encodeURIComponent(paramsObj[key]) + '&';\n      }\n    }\n    window.location.href = url;\n  }\n\n  getPicSize(file) {\n    let arr = {};\n    let reader = new FileReader();\n    reader.onload = function (e: any) {\n      let data = e.target.result;\n      //加载图片获取图片真实宽度和高度\n      let image = new Image();\n      image.onload = function () {\n        let width = image.width;\n        let height = image.height;\n        arr = {\n          height: height,\n          width: width\n        };\n        return arr;\n      };\n      image.src = data;\n    };\n    reader.readAsDataURL(file);\n  }\n}\n","import { Component, OnInit, Input, Renderer2, HostListener, ElementRef } from '@angular/core';\nimport { JdbPlgBaseService } from '../../services/jdb-plg-base/jdb-plg-base.service';\nexport type buttonSize = 'small' | 'large' | 'default';\nexport type buttonType = 'primary' | 'gray' | 'danger' | 'buleline' | 'white';\n\n@Component({\n  selector: '[app-jdb-plg-button]',\n  template: `<i class=\"jdb-icon-loading action\" *ngIf=\"loading\"></i> <ng-content></ng-content>`,\n // styleUrls:  ['./jdb-plg-button.component.scss']\n})\n\nexport class JdbPlgButtonComponent implements OnInit {\n\n  _el: HTMLElement;\n  nativeElement: HTMLElement;\n  _prefixCls = 'jdb-plg-btn';\n  size: buttonSize;            // size的值 'small' 、 'large' 、 'default'\n  type: buttonType;            // type的值 'primary' 、 'gray' 、 'danger'、'buleline' 、'white'\n  loading: boolean;\n\n  @Input()\n  get jdbSize() {\n    return this.size;\n  }\n  set jdbSize(value: buttonSize) {\n    if (!value) {\n      value = 'default';\n    }\n    this.size = value;\n    // this._renderer.addClass(this._el, this.size);\n    this._setClassMap(this.loading);\n  }\n\n  @Input()\n  get jdbType() {\n    return this.type;\n  }\n  set jdbType(value: buttonType) {\n    if (!value) {\n      value = 'primary';\n    }\n    this.type = value;\n    // this._renderer.addClass(this._el, this.type);\n    this._setClassMap(this.loading);\n  }\n\n  @Input()\n  get jdbLoading() {\n    return this.loading;\n  }\n\n  set jdbLoading(value: boolean | string) {\n    value = value === '' || (value && value !== 'false');\n    this.loading = value;\n    this._setClassMap(this.loading);\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2,public jdbPlgBaseService: JdbPlgBaseService) {\n\n    this._el = this._elementRef.nativeElement;\n\n    this.nativeElement = this._elementRef.nativeElement;\n    this._renderer.addClass(this._el, this._prefixCls);\n  }\n  _setClassMap(loading) {\n    this._renderer.removeClass(this._el, 'undefined');\n    this._renderer.addClass(this._el, this.size);\n    this._renderer.addClass(this._el, this.type);\n    if (loading) {\n      this._renderer.addClass(this._el, 'loading_disable');\n    } else {\n      this._renderer.removeClass(this._el, 'loading_disable');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnChanges,\n  ViewChild,\n  Output,\n  Input,\n  SimpleChanges,\n  OnDestroy,\n  Inject,\n  ElementRef,\n  HostListener,\n  ViewEncapsulation,\n  TemplateRef,\n  EventEmitter,\n  ViewContainerRef,\n  Type,\n  ComponentFactory,\n  ComponentFactoryResolver\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n@Component({\n  selector: 'app-jdb-plg-dialog',\n  template: `<div [ngClass]=\"_customClass\"> <div class=\"_maskClass\" [ngClass]=\"{'hid':!_visible}\" [style.zIndex]=\"1000\"></div> <div class=\"jdb-modal\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'hid':!_visible}\" [ngStyle]=\"{'dispaly':!_visible}\" (click)=\"closeModal($event)\" class=\"_wrapClass\" [ngClass]=\"_wrapClass\" [style.zIndex]=\"1000\" [attr.aria-modalId]=\"modalId\"> <div #modal_content class=\"modal\" [@optionsState]=\"_state\" [ngStyle]=\"_bodyStyleMap\"> <div class=\"modal-content\"> <ng-template [ngIf]=\"_closeable\"> <button class=\"modal-close\" (click)=\"clickCancel($event)\"> <!-- <span class=\"modal-close-x\"></span> --> <span class=\"icon-close\"></span> </button> </ng-template> <div class=\"modal-header\" *ngIf=\"_title||_titleTpl\"> <div class=\"modal-title\" [attr.id]=\"modalId\"> <ng-template #defaultTitle> {{_title}} </ng-template> <ng-template [ngTemplateOutlet]=\"_titleTpl||defaultTitle\"> </ng-template> </div> </div> <div class=\"modal-body\"> <ng-template #defaultContent>{{_content}}</ng-template> <ng-template [ngTemplateOutlet]=\"_contentTpl||defaultContent\"></ng-template> <ng-template #modal_component></ng-template> </div> <div class=\"modal-footer\" *ngIf=\"!_footerHide\"> <ng-template #defalutFooter> <button *ngIf=\"!_isConfirm\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'white'\" (click)=\"clickCancel($event)\"><span>{{_cancelText||'取消'}}</span></button> <button *ngIf=\"!_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"clickOk($event)\"><span>{{_okText||'确认'}}</span></button> <button *ngIf=\"_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"clickOk($event)\" (click)=\"clickOk($event)\"><span>{{_RogerText}}</span></button> </ng-template> <ng-template [ngTemplateOutlet]=\"_footerTpl||defalutFooter\"></ng-template> </div> <div tabindex=\"0\" style=\"width:0px;height:0px;overflow:hidden;\">aaa</div> </div> </div> </div> </div>`,\n  // styleUrls:  ['./jdb-plg-dialog.component.scss'],\n  animations: [\n    trigger('optionsState', [\n      state('showM', style({\n        transform: 'translate(-50%, -50%)',\n        opacity: '1',\n        // display: 'block',\n      })),\n      state('hideM', style({\n        transform: 'translate(-50%, -80%)',\n        opacity: '0',\n        // display: 'none',\n      })),\n      transition('showM <=> hideM', animate('200ms ease-out'))\n    ])]\n})\nexport class JdbPlgDialogComponent implements OnInit, AfterViewInit, OnChanges {\n  _customClass = '';\n  _maskClass = '';\n  _bodyStyleMap;\n  modalId: number;\n  _visible = false;\n  _title = '';\n  _closeable = true;\n  _titleTpl: TemplateRef<void>;\n  _content: string | Type<any>;\n  _contentTpl: TemplateRef<void>;\n  _animationStatus = '11';\n  _bodyClass: string;\n  _width = '400px';\n  _footerHide = false;\n  _isConfirm = false;\n  _okText = '';\n  _cancelText = '';\n  _RogerText = '';\n  _state = 'hideM';\n  _footerTpl: TemplateRef<void>;\n  @ViewChild('modal_content') contentEl: ElementRef;\n  @ViewChild('modal_component', { read: ViewContainerRef }) bodyEl: ViewContainerRef;\n  @Output() MvisibileChange: EventEmitter<boolean> = new EventEmitter();\n  @Output() MOnOk: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() MOnCancel: EventEmitter<MouseEvent | KeyboardEvent> = new EventEmitter();\n  // 弹框显隐\n  @Input()\n  set Mvisible(value: boolean) {\n    const visible = this.toBoolean(value);\n    if (this._visible === visible) {\n      return;\n    }\n\n    this._visible = visible;\n    this.MvisibileChange.emit(this._visible);\n  }\n  get Mvisible(): boolean {\n    return this._visible;\n  }\n  // 隐藏footer\n  @Input()\n  set MfooterHiden(value: boolean) {\n    const visible = this.toBoolean(value);\n    if (this._visible === visible) {\n      return;\n    }\n    this._footerHide = visible;\n  }\n  get MfooterHiden(): boolean {\n    return this._footerHide;\n  }\n  // 标题\n  @Input()\n  set Mtitle(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this._titleTpl = value;\n    } else {\n      this._title = value;\n    }\n  }\n  @Input()\n  set Mcontent(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this._contentTpl = value;\n    } else {\n      this._content = value;\n    }\n  }\n  @Input()\n  set Mfooter(value:string|TemplateRef<void>){\n    if (value instanceof TemplateRef){\n      this._footerTpl = value;\n    } \n  }\n  \n  // 自定义宽度\n  @Input()\n  set Mwidth(value: string | number) {\n    this._width = typeof value === 'number' ? value + 'px' : value;\n  }\n\n  // 定位modal位置和样式\n  setStyle() {\n    const el = this.contentEl.nativeElement;\n    this._bodyStyleMap = {\n      ...{ width: this._width }\n    };\n  }\n\n\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(e: KeyboardEvent): void {\n    this.clickCancel(e);\n  }\n\n  // 自定义样式\n  @Input()\n  set Mclass(value: string) {\n    this._customClass = value;\n  }\n\n  @Input()\n  set MOkText(value: string) {\n    this._okText = value;\n  }\n  @Input()\n  set McancelText(value: string) {\n    this._cancelText = value;\n  }\n  @Input()\n  set MRogerText(value: string) {\n    this._isConfirm = true;\n    this._RogerText = value;\n  }\n\n  constructor(private resolver: ComponentFactoryResolver) { }\n  ngOnInit() {\n    this.setStyle();\n  }\n  createDynamicComponent(component: Type<any>) {\n    const factory = this.resolver.resolveComponentFactory(this._content as Type<any>);\n    this.bodyEl.createComponent(factory);\n  }\n  ngAfterViewInit() {\n    \n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._visible) {\n      this._state = 'showM';\n      setTimeout(() => {\n        this.contentEl.nativeElement.parentNode.focus();\n      }, 200);\n    } else {\n      this._state = 'hideM';\n    }\n  }\n  clickCancel(e): void {\n    this._visible = false;\n    this._state = 'hideM';\n    this.MOnCancel.emit(e);\n  }\n  clickOk(e): void {\n    if (this.MOnOk) {\n      this.MOnOk.emit(e);\n    } else {\n      this._visible = false;\n      this._state = 'hideM';\n    }\n  }\n  closeModal(e): void {\n    if ((e.target as HTMLElement).getAttribute('role') === 'dialog') {\n      this.clickCancel(e);\n      this._state = 'hideM';\n    }\n  }\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== false);\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumber]'\n})\nexport class OnlyNumberDirective {\n\n  constructor(private el: ElementRef) { }\n  regexStr = '^[0-9]*$';\n  @Input() appOnlyNumber: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\n    const e = <KeyboardEvent>event;\n    if (this.appOnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode === 65 && e.ctrlKey === true) ||\n        // Allow: Ctrl+C\n        (e.keyCode === 67 && e.ctrlKey === true) ||\n        // Allow: Ctrl+V\n        (e.keyCode === 86 && e.ctrlKey === true) ||\n        // Allow: Ctrl+X\n        (e.keyCode === 88 && e.ctrlKey === true) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n        // let it happen, don't do anything\n        return;\n      }\n      const ch = String.fromCharCode(e.keyCode);\n      const regEx = new RegExp(this.regexStr);\n      if (regEx.test(ch)) {\n        return;\n      } else {\n        e.preventDefault();\n      }\n    }\n  }\n\n  // 解决中文输入法输入汉字问题\n  @HostListener('keyup', ['$event']) onKeyUp(event) {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/\\D/g, '');\n  }\n}\n","/*\n  下拉框功能：\n  种类：单选，多选，选几项\n  样式：高度 middle small large\n*/\n\nimport {\n  ViewContainerRef,\n  Component,\n  OnInit,\n  Input,\n  forwardRef,\n  AfterViewInit,\n  Renderer2,\n  ElementRef,\n  ViewChild,\n  Renderer,\n  ViewChildren,\n  OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-jdb-plg-select',\n  template: `<!-- 单选 --> <div *ngIf=\"_jdbMode=='chooseOne'\" #inputDom class=\"jdb-plg-select-one\" (click)=\"dialogShow($event)\" [ngClass]=\"_classMap\" [ngStyle]=\"{'width':_width}\"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder\" [hidden]=\"inputText!=''\">{{_placeHolder}}</div> <!-- 单选 --> <!-- <span class=\"chooseOne\" [hidden]=\"inputText==''\">{{inputText}}</span> --> <input class=\"chooseOne chooseOneInput\" [hidden]=\"inputText==''\" type=\"text\" [(ngModel)]=\"inputText\" readonly> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <!-- 单选 --> <li *ngFor=\"let option of _selectList \" (click)=\"item($event,option) \" [ngClass]=\"{active:ngModelValue===option[_optionValue],disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> <!-- 单选时下拉图标 --> <span class=\"select-icon icon-select-arrow \" [hidden]=\"isShowClear \"></span> </div> <!-- 多选 --> <div *ngIf=\"_jdbMode=='chooseMore' \" #inputDom class=\"jdb-plg-select-more \" (click)=\"dialogShow($event) \" [ngClass]=\"_classMap \" [ngStyle]=\"{ 'width':_width} \"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder \" [hidden]=\"inputText.length !=0 \">{{_placeHolder}}</div> <!-- 多选item --> <ul class=\"chooseMore \"> <li *ngFor=\"let item of inputText \"> {{item.text}} <span class=\"item-delete icon-close \" (click)=\"deleteMoreItem($event,item) \"></span> </li> </ul> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <li class=\"choose-more \" *ngFor=\"let option of _selectList \" (click)=\"chooseMore($event,option) \" [ngClass]=\"{ 'active':moreIndex(option),disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <!-- {{_optionText=='option'?option:option[_optionText]}} --> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> <span [hidden]=\"!moreIndex(option) \" class=\"choose-right icon-selected \"></span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> </div> <!-- 选中几项 --> <div *ngIf=\"_jdbMode=='chooseNum' \" #inputDom class=\"jdb-plg-select-num \" (click)=\"dialogShow($event) \" [ngClass]=\"_classMap \" [ngStyle]=\"{ 'width':_width} \"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder \" [hidden]=\"inputText!=0 \">{{_placeHolder}}</div> <span class=\"choose-tip \" [hidden]=\"inputText==0 \">已选中{{inputText}}项</span> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <li class=\"choose-more \" *ngFor=\"let option of _selectList \" (click)=\"numClick($event,option) \" [ngClass]=\"{ 'active':moreIndex(option),disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <!-- {{_optionText=='option'?option:option[_optionText]}} --> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> <span [hidden]=\"!moreIndex(option) \" class=\"choose-right icon-selected \"></span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> <span class=\"select-icon icon-select-arrow \" [hidden]=\"isShowClear \"></span> </div> <!-- 遮罩层 --> <div class=\"jdb-plg-select-master \" *ngIf=\"show \"></div>`,\n  // styleUrls:  ['./jdb-plg-select.component.scss'],\n  providers: [\n    {// 注册成为表单控件\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JdbPlgSelectComponent),\n      multi: true\n    }\n  ]\n})\nexport class JdbPlgSelectComponent implements OnInit, OnChanges {\n  _selectList: any;\n  _size = 'middle';\n  _width: string;\n  _optionText = 'text';  // 默认值\n  _optionValue = 'value'; // 默认值\n  _optionPosition: string;\n  isShowClear = false; // 是否展示清空x\n  _jdbClear = false;\n  _jdbDisabled = false; // 默认未禁用\n  _jdbMode = 'chooseOne';\n  _placeHolder = '请选择';\n  _chooseMoreArray = []; // 多选选中元素数组\n  _classMap = {};\n  listHeight: number;\n  savaHeight = true;\n  spaceFlex = true;  // 是否有剩余空间，默认有\n  _showImgBox = false; // 下拉框是否带图片\n  _jdbItemDisabled = 'disabled'; // 默认为disabled\n  _jdbSureDisabled = 2; // 为1是启用 2是禁用\n  _jdbNoDisabled = 1; // 为2表示不禁用\n\n  // 自定义类名\n  @Input() jdbClassName = '';\n\n  // 选项中某项禁用字段\n  @Input()\n  set jdbItemDisabled(value) {\n    this._jdbItemDisabled = value;\n  }\n  get jdbItemDisabled(): string {\n    return this._jdbItemDisabled;\n  }\n\n  // 选项中某项确认禁用\n  @Input()\n  set jdbSureDisabled(value) {\n    this._jdbSureDisabled = value;\n  }\n  get jdbSureDisabled(): any {\n    return this._jdbSureDisabled;\n  }\n\n  // // 选项中某项不禁用\n  // @Input()\n  // set jdbNoDisabled(value) {\n  //   this._jdbNoDisabled = value;\n  // }\n  // get jdbNoDisabled(): any {\n  //   return this._jdbNoDisabled;\n  // }\n\n  // 选项中某项确认禁用\n  @Input()\n  set jdbPlaceHolder(value) {\n    this._placeHolder = value;\n  }\n  get jdbPlaceHolder(): any {\n    return this._placeHolder;\n  }\n\n  // 是否需要显示清空\n  @Input()\n  set jdbClear(value) {\n    this._jdbClear = this.toBoolean(value);\n  }\n  get jdbClear(): boolean {\n    return this._jdbClear;\n  }\n\n  // 下拉框数组，必写\n  @Input()\n  set jdbSelectList(value) {\n    this._selectList = value;\n\n    // 循环数组，判断是否需要展示带有图片下拉框\n    if (this._selectList) {\n      this._selectList.forEach(element => {\n        if (element.imgUrl) {\n          this._showImgBox = true;\n        }\n      });\n    }\n  }\n  get jdbSelectList(): string {\n    return this._selectList;\n  }\n\n  // 下拉框尺寸，默认为高度30px；small为24px,large为40px;\n  @Input()\n  set jdbSize(value) {\n    this._size = value;\n  }\n  get jdbSize(): string {\n    return this._size;\n  }\n\n  // 自定义宽度\n  @Input()\n  set jdbWidth(value) {\n    this._width = value;\n  }\n  get jdbWidth(): string {\n    return this._width;\n  }\n\n  // 展示在页面内容字段名称\n  @Input()\n  set jdbOptionText(value) {\n    this._optionText = value;\n  }\n  get jdbOptionText(): string {\n    return this._optionText;\n  }\n\n  // 返回给serve对应字段名称\n  @Input()\n  set jdbOptionValue(value) {\n    this._optionValue = value;\n  }\n  get jdbOptionValue(): string {\n    return this._optionValue;\n  }\n\n  // 下拉框禁用\n  @Input()\n  set jdbDisabled(value) {\n    this._jdbDisabled = this.toBoolean(value);\n  }\n  get jdbDisabled(): boolean {\n    return this._jdbDisabled;\n  }\n\n  // select模式，默认为单选，chooseMore多选\n  @Input()\n  set jdbMode(value) {\n    this._jdbMode = value;\n  }\n  get jdbMode(): string {\n    return this._jdbMode;\n  }\n\n  @ViewChild('inputDom') inputDom: ElementRef;\n  @ViewChild('optionList') optionList: ElementRef;\n\n  show = false;\n  inputText: any;\n  ngModelValue = '';\n  constructor(private renderer2: Renderer2, private renderer: Renderer) {\n  }\n\n  ngOnInit() {\n    \n\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    // 点击除下拉框以外位置，下拉框隐藏\n    this.renderer2.listen('document', 'click', () => {\n      this.show = false;\n      this.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n    });\n\n    if (this._jdbClear && !this._jdbDisabled) {\n      // 监听输入框元素，若有内容时则滑上显示x\n      this.renderer2.listen(this.inputDom.nativeElement, 'mouseenter', () => {\n        // 若输入框不存在内容，则不做任何操作\n\n        if (this._jdbMode === 'chooseOne' || this._jdbMode === 'chooseNum') {\n          if (!this.inputText || this.show) {\n            return;\n          }\n        } else if (this._jdbMode === 'chooseMore') {\n          if (this.inputText.length === 0 || this.show) {\n            return;\n          }\n        }\n\n        this.isShowClear = true;\n        this.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n      });\n      this.renderer2.listen(this.inputDom.nativeElement, 'mouseleave', () => {\n        // 若输入框不存在内容，则不做任何操作\n        if (this._jdbMode === 'chooseOne' || this._jdbMode === 'chooseNum') {\n          if (!this.inputText || this.show) {\n            return;\n          }\n        } else if (this._jdbMode === 'chooseMore') {\n          if (this.inputText.length === 0 || this.show) {\n            return;\n          }\n        }\n\n        this.isShowClear = false;\n        this.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n      });\n    }\n\n  }\n\n  ngOnChanges() {\n    if (this._jdbMode === 'chooseOne') {\n      this.inputText = '';\n    } else if (this._jdbMode === 'chooseMore') {\n      this.inputText = [];\n    } else if (this._jdbMode === 'chooseNum') {\n      this.inputText = 0;\n    }\n    this.setClassMap();\n  }\n\n  setClassMap() {\n    if (this._jdbMode === 'chooseMore') {\n      this._classMap = {\n        [`${this._size}`]: true,\n        [`jdb-plg-select-bottom-${this._size}`]: this.inputText.length !== 0,\n        ['jdb-plg-select-disabled']: this._jdbDisabled,\n        [this.jdbClassName]: true\n      };\n    } else {\n      this._classMap = {\n        [`${this._size}`]: true,\n        ['jdb-plg-select-disabled']: this._jdbDisabled,\n        [this.jdbClassName]: true\n      };\n    }\n  }\n\n  // 点击x，清空内容\n  clearInputText(e) {\n    e.stopPropagation();\n\n    if (this._jdbMode === 'chooseOne') {\n      this.inputText = '';\n    } else if (this._jdbMode === 'chooseMore') {\n      this.inputText = [];\n      this._chooseMoreArray = [];\n    } else if (this._jdbMode === 'chooseNum') {\n      this.inputText = 0;\n      this._chooseMoreArray = [];\n    }\n    this.isShowClear = !this.isShowClear;\n\n    // 清空后输入需要重新告知父组件\n    this.ngModelValue = '';\n    this.onChange('');\n\n    this.setClassMap();\n  }\n\n  // 点击输入框下拉菜单显隐\n  dialogShow(e) {\n    e.stopPropagation();\n    // 若外侧组件告知禁用，则点击没有任何效果\n    if (this._jdbDisabled) {\n      return;\n    }\n    this.isShowClear = false;\n    this.show = !this.show;\n    this.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n    this.optionPosition(this.optionList.nativeElement.clientHeight);\n  }\n\n  // 浮层出现是在输入框上方还是下方\n  optionPosition(listHeight) {\n    const offetTop = this.getTop(this.inputDom.nativeElement);  // 元素offetTop\n    const scrollTop = this.getScrollTop(this.inputDom.nativeElement.parentElement);\n    const clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 屏幕高度\n    const elemHeight = this.inputDom.nativeElement.clientHeight; // 元素高度\n    let paddingHeight;\n    if (this.jdbSize === 'small') {\n      paddingHeight = 2;\n    } else if (this.jdbSize === 'large') {\n      paddingHeight = 9;\n    } else if (this.jdbSize === 'middle') {\n      paddingHeight = 5;\n    }\n    const flexHeight = clientHeight - offetTop - elemHeight - paddingHeight + scrollTop; // 剩余高度\n    if (flexHeight < listHeight) {\n      // 空间不足\n      this.spaceFlex = false;\n      this.renderer.setElementStyle(this.optionList.nativeElement, 'transform-origin', '100% 100%');\n      if (listHeight < 188) {\n        this.renderer.setElementStyle(this.optionList.nativeElement, 'top', - listHeight - 5 + 'px');\n      } else {\n        this.renderer.setElementStyle(this.optionList.nativeElement, 'top', -190 - paddingHeight + 'px');\n      }\n    } else {\n      this.spaceFlex = true;\n      this.renderer.setElementStyle(this.optionList.nativeElement, 'top', '');\n      this.renderer.setElementStyle(this.optionList.nativeElement, 'transform-origin', '0% 0%');\n    }\n  }\n\n  // ControlValueAccessor 自定义表单 与父组件的ngModel绑定起来\n  writeValue(value: any): void {\n    this.ngModelValue = value;\n\n    // 若有初始项，则需要处理一下\n    // if (this._jdbMode === 'chooseOne') {\n    //   this.forOneStart(value);\n    // } else if (this._jdbMode === 'chooseMore') {\n    //   this.forMoreStart(value);\n    //   this.setClassMap();\n    // } else if (this._jdbMode === 'chooseNum') {\n    //   this.forNumStart(value);\n    // }\n    if (value === null || value === '' || value === undefined) {\n      // 若传入值为null，则清空数据\n      if (this._jdbMode === 'chooseMore') {\n        this.inputText = [];\n      } else {\n        this.inputText = '';\n      }\n    } else {\n      if (this._jdbMode === 'chooseOne') {\n        this.forOneStart(value);\n      } else if (this._jdbMode === 'chooseMore') {\n        this.forMoreStart(value);\n        this.setClassMap();\n      } else if (this._jdbMode === 'chooseNum') {\n        this.forNumStart(value);\n      }\n    }\n  }\n  onChange: (value: any) => void = () => null;\n\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n  // 单选，若有初始选项，则遍历数组\n  forOneStart(value) {\n    this._selectList.forEach(elem => {\n      if (elem[this._optionValue] === value) {\n        this.inputText = elem[this._optionText];\n      }\n    });\n  }\n\n  // 多选，若有初始值则遍历数组\n  forMoreStart(value) {\n    value = value.split(',');\n\n    value.forEach(item => {\n      this._selectList.forEach(elem => {\n        if (elem[this._optionValue] === item) {\n          // inputText为输入框中展示的内容\n          const text = this._optionText;\n          const value = this._optionValue;\n          this.inputText.push({\n            text: elem[this._optionText],\n            value: elem[this._optionValue]\n          });\n\n          // this._chooseMoreArray为传出去的数据\n          this._chooseMoreArray.push(elem[this._optionValue]);\n          return;\n        }\n      });\n    });\n  }\n\n  // 选几项\n  forNumStart(value) {\n    value = value.split(',');\n    value.forEach(item => {\n      this._selectList.forEach(elem => {\n        if (elem[this._optionValue] === item) {\n          this.inputText++;\n          this._chooseMoreArray.push(elem[this._optionValue]);\n          return;\n        }\n      });\n    });\n  }\n\n  // 单选某一元素点击\n  item(e, item) {\n    // 阻止事件冒泡\n    e.stopPropagation();\n\n    // 判断show是否为true\n    if (!this.show) {\n      return;\n    }\n    // 判断该项是否可点击\n    if (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n      return;\n    }\n\n    this.inputText = item[this._optionText];\n    this.show = !this.show;\n    this.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\n    this.ngModelValue = item[this._optionValue];\n    this.onChange(item[this._optionValue]);\n  }\n\n  // 多选元素点击\n  chooseMore(e, item) {\n    let flag = false;\n    // 阻止事件冒泡\n    e.stopPropagation();\n\n    // 判断show是否为true\n    if (!this.show) {\n      return;\n    }\n\n    // 判断该项是否可点击\n    if (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n      return;\n    }\n\n    // 判断是否存在\n    this.inputText.forEach((element, index) => {\n      if (element[this._optionValue] === item[this._optionValue]) {\n        flag = true;\n        return;\n      }\n    });\n\n    if (flag) {\n      this.deleteMoreItem(e, item);\n      return;\n    }\n\n    // inputText为输入框中展示的内容\n    const text = this._optionText;\n    const value = this._optionValue;\n    this.inputText.push({\n      text: item[this._optionText],\n      value: item[this._optionValue]\n    });\n\n    // this._chooseMoreArray为传出去的数据\n    this._chooseMoreArray.push(item[this._optionValue]);\n    this.ngModelValue = this._chooseMoreArray.toString();\n    this.onChange(this._chooseMoreArray);\n    this.show = true;\n    this.setClassMap();\n  }\n\n  // 选中多少项li点击\n  numClick(e, item) {\n    let flag = false;\n    // 阻止事件冒泡\n    e.stopPropagation();\n\n    // 判断show是否为true\n    if (!this.show) {\n      return;\n    }\n\n    // 判断该项是否可点击\n    if (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n      return;\n    }\n\n    // 判断是否点击过\n    this._chooseMoreArray.forEach((element, index) => {\n      if (element === item[this._optionValue]) {\n        flag = true;\n        this._chooseMoreArray.splice(index, 1);\n        return;\n      }\n    });\n    if (flag) {\n      this.inputText--;\n      return;\n    }\n\n    this.inputText++;\n    this.show = true;\n    this._chooseMoreArray.push(item[this._optionValue]);\n    this.ngModelValue = this._chooseMoreArray.toString();\n    this.onChange(this._chooseMoreArray);\n  }\n\n  // 判断某一项是否存在于inputText中\n  moreIndex(item) {\n    let flag = false;\n    this._chooseMoreArray.forEach((element, index) => {\n      if (element === item[this._optionValue]) {\n        flag = true;\n        return;\n      }\n    });\n    return flag;\n  }\n\n  // 删除某一项\n  deleteMoreItem(e, item) {\n    e.stopPropagation();\n    if (this._jdbDisabled) {\n      return;\n    }\n\n    this.inputText.forEach((element, index) => {\n      if (element[this._optionValue] === item[this._optionValue]) {\n        this.inputText.splice(index, 1);\n        return;\n      }\n    });\n\n    this._chooseMoreArray.forEach((element, index) => {\n      if (element === item[this._optionValue]) {\n        this._chooseMoreArray.splice(index, 1);\n        return;\n      }\n    });\n    this.ngModelValue = this._chooseMoreArray.toString();\n    this.onChange(this._chooseMoreArray);\n    this.setClassMap();\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  // 计算某元素的offetTop\n  getTop(e) {\n    let offset = e.offsetTop;\n    if (e.offsetParent != null) {\n      //解析translateY\n      if (e.style.transform) {\n        let ret = this.parseTranslateY(e.style.transform);\n        offset += ret.isPercent ? e.clientHeight * ret.translateY / 100 : ret.translateY;\n      }\n      offset += this.getTop(e.offsetParent);\n    }\n    return offset;\n  }\n\n  // 计算某元素的scrollTop\n  getScrollTop(e) {\n    let offset = e.scrollTop;\n    if (e.parentElement != null) {\n      offset += this.getScrollTop(e.parentElement);\n    }\n    return offset;\n  }\n\n  //正则解析translateY\n  parseTranslateY(val) {\n    let reg = /\\(([^()]+)\\)/g;\n    let translate = reg.exec(val)[1];\n    let translatArr = translate.split(',');\n    let translateY;\n    let isPercent;\n    //如果不包含translate\n    if (val.indexOf('translate') === -1) {\n      return {\n        isPercent: false,\n        translateY: 0\n      }\n    }\n    //判断是translate还是translateY\n    if (translatArr.length === 2) {\n      translateY = translate.split(',')[1];\n    } else if (translatArr.length === 1 && val.indexOf('translateY') !== -1) {\n      translateY = translate;\n    }\n    //判断是百分比还是px\n    if (translateY.indexOf('px') !== -1) {\n      //截取px\n      isPercent = false;\n      translateY = Number(translateY.slice(0, -2));\n    } else if (translateY.indexOf('%') !== -1) {\n      isPercent = true;\n      translateY = Number(translateY.slice(0, -1));\n    }\n    //返回百分比或普通number值\n    return {\n      isPercent,\n      translateY\n    };\n  }\n}\n","import { Component, OnInit,EventEmitter,TemplateRef,Input,Output,ElementRef,ContentChild,forwardRef ,HostListener,ViewEncapsulation} from '@angular/core';\nimport { NgModel,ControlValueAccessor,NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'app-jdb-plg-input',\n    template: `<span class=\"input-group-addon\" *ngIf=\"_addOnContentBefore\"> <ng-template [ngTemplateOutlet]=\"_addOnContentBefore\"> </ng-template> </span> <ng-template [ngIf]=\"_type=='text'\"> <div class=\"input-text-wrap\" [ngClass]=\"_inputWrapClass\"> <span class=\"input-prefix\" *ngIf=\"_prefixContent\"> <ng-template [ngTemplateOutlet]=\"_prefixContent\"> </ng-template> </span> <input (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" [disabled]=\"_disabled\" [readonly]=\"_readonly\" [attr.type]=\"_type\" class=\"input\" [ngClass]=\"_classMap\" [attr.placeholder]=\"_placeHolder\" [(ngModel)]=\"jdbValue\" [style.width]=\"width\" maxlength=\"{{jdbMaxLength}}\" /> <span class=\"input-clear\" *ngIf=\"_clear && _value && _type=='text'\" (click)=\"clearTxt()\"> <i class=\"close-icon icon-empty\"></i> </span> <span class=\"ant-input-suffix\" *ngIf=\"_suffixContent\"> <i class=\"iconfont icon-guanbi2fill\"></i> <ng-template [ngTemplateOutlet]=\"_suffixContent\"> </ng-template> </span> </div> <div class=\"input-error-tip\" *ngIf=\"jdbError && _errorContent\"> <i class=\"icon-message-error error-tip\"></i> <span> <ng-template [ngTemplateOutlet]=\"_errorContent\"> </ng-template> </span> </div> </ng-template> <span class=\"input-group-addon\" *ngIf=\"_addOnContentAfter\"> <ng-template [ngTemplateOutlet]=\"_addOnContentAfter\"> </ng-template> </span> <ng-template [ngIf]=\"_type=='textarea'\"> <div class=\"input-text-wrap\"> <textarea (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" (input)=\"textareaOnChange($event)\" #inputTextarea [disabled]=\"_disabled\" [readonly]=\"_readonly\" type=\"textarea\" class=\"input input-textarea\" [ngClass]=\"_classMap\" [attr.placeholder]=\"jdbPlaceHolder\" [(ngModel)]=\"jdbValue\" maxlength=\"{{jdbMaxLength}}\" [style.width]=\"width\"></textarea> <span class=\"textarea-wc-tip\" [ngClass]=\"{'textarea-wc-tip-red': jdbValue&&jdbValue.length == jdbMaxLength}\" *ngIf=\"jdbMaxLength && !_disabled &&!_readonly\">{{(jdbValue&&jdbValue.length)||0}}/{{jdbMaxLength}}</span> </div> </ng-template>`,\n    // styleUrls:  ['./jdb-plg-input.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JdbPlgInputComponent),\n      multi: true\n    }\n  ],\n})\n\nexport class JdbPlgInputComponent implements OnInit,ControlValueAccessor{\n    _value = '';\n    _type= 'text';\n    _placeHolder= '';\n    _size= 'default';\n    _disabled = false;\n    _readonly = false;\n    _error = false;\n    _classMap: any;\n    _inputWrapClass: Array<string> = [];\n    _clear = false;\n    _maxlength: number;\n    _autoPromptData: Array<any> = [];\n     _composing = false;\n     @Input() width= '300px';\n    // ngModel Access\n    onChange: (value: string) => void = () => null;\n    @ContentChild('jdbErrorContent')  _errorContent: TemplateRef<any>;\n    @ContentChild( 'addContentBefore' ) _addOnContentBefore: TemplateRef<any>;\n    @ContentChild('addContentAfter') _addOnContentAfter: TemplateRef<any>;\n    @ContentChild('prefixContent') _prefixContent: TemplateRef<any>;\n    @ContentChild('suffixContent') _suffixContent: TemplateRef<any>;\n    @Output() jdbBlur: EventEmitter<MouseEvent> = new EventEmitter();\n    @Output() jdbFocus: EventEmitter<MouseEvent> = new EventEmitter();\n\n    ngOnInit() {\n        // this._inputWrapClass =[`input-text-wrap-${this._size}`];\n        if ( this._prefixContent ) {\n            this._inputWrapClass.push('prefix');\n        }\n    }\n\n    @HostListener('compositionstart', [ '$event' ])\n    compositionStart(e: CompositionEvent): void {\n        this._composing = true;\n    }\n\n    @HostListener('compositionend', [ '$event' ])\n    compositionEnd(e: CompositionEvent): void {\n        this._composing = false;\n        this.onChange(this._value);\n    }\n\n    @Input()\n    set jdbType(type: string){\n        this._type = type;\n    }\n    get jdbType(): string{\n        return this._type;\n    }\n\n    @Input()\n    set jdbPlaceHolder(placeHolder: string){\n        this._placeHolder = placeHolder;\n    }\n    get jdbPlaceHolder(): string{\n        return this._placeHolder;\n    }\n\n    @Input()\n    set jdbSize(size: string){\n        this._size = {large: 'lg',small: 'sm'}[size];\n        this.setClassMap();\n    }\n    get jdbSize(): string{\n        return this._size;\n    }\n\n    @Input()\n    set jdbDisabled(disabled: boolean){\n        this._disabled = this.toBoolean(disabled);\n        this.setClassMap();\n    }\n    get jdbDisabled(): boolean{\n        return this._disabled;\n    }\n\n    @Input()\n    set jdbReadonly(readonly: boolean){\n        this._readonly = this.toBoolean(readonly);\n    }\n    get jdbReadonly(): boolean{\n        return this._readonly;\n    }\n\n    @Input()\n    set jdbValue(value: string){\n        if ((this._value === value) || ((this._value == null) && (value == null))) {\n            return;\n        }\n        this._value = value;\n        if (!this._composing) {\n        this.onChange(value);\n        }\n    }\n    get jdbValue(): string{\n        if(this._value == '0'){\n            return '0';\n        }\n        return this._value || '';\n    }\n    @Input()\n    set jdbError(value: boolean){\n        this._error = this.toBoolean(value);\n        this.setClassMap();\n    }\n    get jdbError(): boolean{\n        return this._error;\n    }\n    @Input()\n    set jdbClear(value: boolean){\n        this._clear = this.toBoolean(value);\n    }\n    get jdbClear(): boolean{\n        return this._clear;\n    }\n\n    @Input()\n    set jdbMaxLength(value: number){\n        this._maxlength = value;\n    }\n    get jdbMaxLength(): number{\n        return this._maxlength;\n    }\n\n    @Input()\n    set jdbPromptData(value: Array<any>){\n        this._autoPromptData = value;\n    }\n    get jdbPromptData(): Array<any>{\n        return this._autoPromptData;\n    }\n    writeValue(value: string): void {\n        this._value = value;\n    }\n    registerOnChange(fn: (_: string) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n    }\n    _emitBlur($event) {\n        this.jdbBlur.emit($event);\n    }\n\n    _emitFocus($event) {\n        this.jdbFocus.emit($event);\n    }\n    textareaOnChange($event){\n\n    }\n    setClassMap() {\n        this._classMap = {\n            [ `input-${this._type}-${this._size}` ]: true,\n            [ 'input-disabled' ]: this._disabled,\n            ['input-error']: this._error\n        };\n    }\n    clearTxt() {\n        this._value = '';\n        this.onChange('');\n    }\n\n    toBoolean(value: boolean | string): boolean {\n        return value === '' || (value && value !== 'false');\n    }\n}\n","import { Injectable, ComponentFactoryResolver } from '@angular/core';\n@Injectable()\nexport class FillTableService {\n    constructor() {\n    }\n    /*\n        lines:number  表格展示的行数\n        lists:Array<any>  异步获取的数据\n        flag:boolean  是否在空白行栏展示操作按钮,默认取unShowOpt字段\n    */\n    fillTable(lines: number, lists:Array<any>, flag?:boolean) {\n        lines = lines || 10;\n        lists = lists || [];\n        flag = flag || true;\n        let aLength = lists.length;\n        let mLength = lines - aLength;\n        let fillObj = {unShowOpt:flag};\n        let keys;\n        if (aLength !== 0) {\n            lists.forEach(element => {\n                element.unShowOpt = !flag;\n            });\n            keys = Object.keys(lists[0]);\n            if (keys.length !== 0) {\n                keys.forEach(element => {\n                    if(element !== \"unShowOpt\"){\n                        fillObj[element] = Object.prototype.toString.call(lists[0][element]) == \"[object Array]\" ? [] : '';\n                    }\n                });\n            }\n        }\n        if (aLength !== 0 && mLength>0) {\n            for(let i=0;i<mLength;i++){\n                lists.push(fillObj);\n            }\n        }\n        return lists;\n    }\n}\n","import {Injectable, ComponentFactoryResolver, ViewContainerRef} from '@angular/core';\nimport {JdbPlgToastComponent} from '../../components/jdb-plg-toast/jdb-plg-toast.component';\n\n@Injectable()\nexport class CommonMethodService {\n\n  vRef;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {\n  }\n\n  /*常用公共方法*/\n\n  /*验证手机号是否合法\n  * number 校验的手机号码*/\n  testPhoneNumber(number: string) {\n    const phoneReg = /^[1][3,4,5,7,8][0-9]{9}$/;\n    return phoneReg.test(number);\n  }\n\n\n  setRootViewContainerRef(vRef) {\n    this.vRef = vRef;\n  }\n\n  toast(msg, delayTime = 3000) {\n    //通过ComponentFactoryResolver 创建出动态组件的实例\n    const childComponent = this.componentFactoryResolver.resolveComponentFactory(JdbPlgToastComponent);\n    let comInstance = this.vRef.createComponent(childComponent);\n    comInstance.instance.msg = msg;\n    comInstance.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      comInstance.destroy();\n    }, delayTime);\n\n  }\n\n  // 从数组删除指定元素\n  removeNodeFromArray(list, node?) {\n    if (!node) {\n      return list;\n    }\n    outFor:\n    for (let i = 0, j = list.length; i < j; i++) {\n      if (list[i] === node) {\n        list.splice(i, 1);\n        break outFor;\n      }\n    }\n    return list;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-table-error',\n  template: `<div class=\"jdb-plg-table-error\"> {{tableErrorText}} </div>`,\n  // styleUrls:  ['./jdb-plg-table-error.component.scss']\n})\nexport class JdbPlgTableErrorComponent implements OnInit {\n\n  /*\n    功能：实现表格报错文案水平居中\n  */\n\n  @Input() tableErrorText = '暂无数据';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe,PipeTransform } from '@angular/core';\n\n@Pipe({name:'provinceReformPipe'})\nexport class ProvinceReformPipe implements PipeTransform{\n    transform(val:any):any{\n        if(val.length === 0){\n            return '';\n        }\n        return val.join('、');\n    }\n}","import { Pipe,PipeTransform } from '@angular/core';\n\n@Pipe({name:'amountReformPipe'})\nexport class AmountReformPipe implements PipeTransform{\n    transform(val:any):string{\n        if(val === 0){\n            return '0.00';\n        }\n        if(!val){\n            return '';\n        }\n        return (val/100).toFixed(2);\n    }\n}","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { JdbPlgToastComponent } from './components/jdb-plg-toast/jdb-plg-toast.component';\nimport { JdbTabComponent } from './components/jdb-plg-tab/jdb-tab.component';\nimport { ShowPictureComponent } from './components/show-picture/show-picture.component';\nimport { PictureViewerComponent } from './components/picture-viewer/picture-viewer.component';\nimport { DragDirective } from './directive/drag.directive';\nimport { JdbPlgPaginationComponent } from './components/jdb-plg-pagination/jdb-plg-pagination.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JdbPlgButtonComponent } from './components/jdb-plg-button/jdb-plg-button.component';\nimport { JdbPlgDialogComponent } from './components/jdb-plg-dialog/jdb-plg-dialog.component';\nimport { OnlyNumberDirective } from './directive/only-number.directive';\nimport { JdbPlgSelectComponent } from './components/jdb-plg-select/jdb-plg-select.component';\nimport { JdbPlgInputComponent } from './components/jdb-plg-input/jdb-plg-input.component';\n//import { JdbPlgAutocompleteDirective } from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.directive';\n//import { JdbPlgAutocompleteComponent } from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.component';\nimport { JdbPlgBaseService } from './services/jdb-plg-base/jdb-plg-base.service';\nimport { FillTableService } from './services/jdb-plg-base/fill-table.service';\nimport { CommonMethodService } from './services/jdb-plg-base/common-method.service';\n\nimport { JdbPlgTableErrorComponent } from './components/jdb-plg-table-error/jdb-plg-table-error.component';\nimport { ProvinceReformPipe } from './pipe/province-reform.pipe';\nimport { AmountReformPipe } from './pipe/amount-reform.pipe';\n\n\nconst MDL_MODULES = [\n  ShowPictureComponent,\n  PictureViewerComponent,\n  DragDirective,\n  JdbPlgPaginationComponent,\n  JdbPlgButtonComponent,\n  JdbPlgDialogComponent,\n  JdbPlgSelectComponent,\n  JdbPlgInputComponent,\n // JdbPlgAutocompleteDirective,\n  //JdbPlgAutocompleteComponent,\n  JdbTabComponent,\n  JdbPlgTableErrorComponent,\n  ProvinceReformPipe,\n  AmountReformPipe\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule\n  ],\n  exports: MDL_MODULES,\n  declarations: [\n    JdbPlgToastComponent,\n    JdbTabComponent,\n    ShowPictureComponent,\n    PictureViewerComponent,\n    DragDirective,\n    JdbPlgPaginationComponent,\n    OnlyNumberDirective,\n    JdbPlgSelectComponent,\n    JdbPlgButtonComponent,\n    JdbPlgDialogComponent,\n    JdbPlgInputComponent,\n    //JdbPlgAutocompleteDirective,\n    //JdbPlgAutocompleteComponent,\n    JdbPlgTableErrorComponent,\n    ProvinceReformPipe,\n    AmountReformPipe\n  ],\n  providers: [JdbPlgBaseService, CommonMethodService, FillTableService],\n  entryComponents: [JdbPlgToastComponent]\n})\nexport class JdbPlgUiModule { \n    /**\n//    * @deprecated Use `NgZorroAntdModule` instead.\n//    */\n//   static forRoot(): ModuleWithProviders {\n//     return {\n//       ngModule: JdbPlgUiModule\n//     };\n//   }\n}\n// export * from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.component';\nexport * from './components/jdb-plg-button/jdb-plg-button.component';\nexport * from './components/jdb-plg-dialog/jdb-plg-dialog.component';\nexport * from './components/jdb-plg-input/jdb-plg-input.component';\nexport * from './components/jdb-plg-pagination/jdb-plg-pagination.component';\nexport * from './components/jdb-plg-select/jdb-plg-select.component';\nexport * from './components/jdb-plg-tab/jdb-tab.component';\nexport * from './components/jdb-plg-table-error/jdb-plg-table-error.component';\nexport * from './components/jdb-plg-toast/jdb-plg-toast.component';\nexport * from './components/picture-viewer/picture-viewer.component';\nexport * from './components/show-picture/show-picture.component';\n\nexport { CommonMethodService } from './services/jdb-plg-base/common-method.service';\nexport { FillTableService } from './services/jdb-plg-base/fill-table.service';\nexport { JdbPlgBaseService } from './services/jdb-plg-base/jdb-plg-base.service';\n// TODO 暴露服务方式\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","BrowserXhr","build","XMLHttpRequest","decorators","type","Injectable","ctorParameters","RequestMethod","Get","Post","Put","Delete","Options","Head","Patch","ReadyState","Unsent","Open","HeadersReceived","Loading","Done","Cancelled","ResponseType","Basic","Cors","Default","Error","Opaque","ContentType","NONE","JSON","FORM","FORM_DATA","TEXT","BLOB","ARRAY_BUFFER","ResponseContentType","Text","Json","ArrayBuffer","Blob","Headers","headers","_this","_headers","Map","_normalizedNames","forEach","values","name","value","append","keys","isArray","delete","fromResponseHeaderString","headersString","split","line","index","indexOf","name_1","slice","trim","set","getAll","push","lcName","toLowerCase","fn","get","has","from","join","mayBeSetNormalizedName","toJSON","serialized","v","entries","ResponseOptions","opts","body","status","statusText","url","merge","options","BaseResponseOptions","_super","tslib_1.__extends","ConnectionBackend","XSRFStrategy","normalizeMethodName","method","toUpperCase","QueryEncoder","encodeKey","k","standardEncoding","encodeValue","encodeURIComponent","replace","URLSearchParams","rawParams","queryEncoder","paramsMap","map","param","eqIdx","_a","key","val","list","paramParser","clone","appendAll","storedParam","setAll","searchParams","replaceAll","toString","paramsList","Body","json","_body","parse","text","encodingHint","String","fromCharCode","Uint16Array","Uint8Array","stringify","arrayBuffer","input","view","strLen","charCodeAt","buffer","stringToArrayBuffer","blob","Response","responseOptions","ok","_nextRequestId","JSONP_HOME","_jsonpConnections","_getJsonpConnections","w","window","BrowserJsonp","node","document","createElement","src","nextRequestID","requestCallback","id","exposeConnection","connection","removeConnection","send","appendChild","cleanup","parentNode","removeChild","JSONPConnection","req","_dom","baseResponseOptions","_finished","TypeError","request","response","Observable","responseObserver","readyState","_id","callback","lastIndexOf","substring","script","_script","onLoad","event","responseOptions_1","error","_responseData","next","complete","onError","message","addEventListener","removeEventListener","finished","data","XSSI_PREFIX","JSONPBackend","_browserJSONP","_baseResponseOptions","createConnection","XHRConnection","browserXHR","_xhr","open","withCredentials","responseText","xhr","getAllResponseHeaders","responseURL","test","getResponseHeader","err","setDetectedContentType","setRequestHeader","responseType","getBody","abort","contentType","CookieXSRFStrategy","_cookieName","_headerName","configureRequest","xsrfToken","getDOM","getCookie","XHRBackend","_browserXHR","_xsrfStrategy","RequestOptions","search","params","_mergeSearchParams","defineProperty","enumerable","configurable","_parseParams","objParams","item","_appendParam","BaseRequestOptions","Request","requestOptions","paramsArg","element","prefix","detectContentType","detectContentTypeFromBody","FormData","noop","httpRequest","backend","mergeOptions","defaultOpts","providedOpts","newOptions","Http","_backend","_defaultOptions","responseObservable","post","put","patch","head","Jsonp","defaultOptions","_createDefaultCookieXSRFStrategy","httpFactory","xhrBackend","HttpModule","NgModule","args","providers","provide","useFactory","deps","useClass","Version","JdbPlgToastComponent","Component","selector","template","Input","componentFactoryResolver","_injector","EventEmitter","JdbTabComponent","ChildComponent","attrs","title","comId","isCloseFlag","tabIdComMap","childComponent","resolveComponentFactory","comInstance","target","createComponent","items","instance","tabComs","setOneComHide","curTabIndex","tabSubs","subscribe","onTopComMsg","emit","com","tabChange","tabIndex","location","nativeElement","style","display","setOneComShow","onTabChange","tabRefresh","destroy","splice","onTabRemove","removeTab","clear","ComponentFactoryResolver","Injector","ViewChild","read","ViewContainerRef","Output","ShowPictureComponent","update","renderer","num","degnum","PictureViewerComponent","_jdbMaster","toBoolean","_jdbClear","current","pictureList","elem","imgBox","children","resetPosition","imgContent","setElementStyle","maxHeight","maxWidth","jdbShowType","image","Image","onload","hRatio","wRatio","width","h","height","imgRate","imgUrl","resetImgData","imgOperate","rate","animations","trigger","state","z-index","transform","transition","animate","Renderer","render","DragDirective","localStorage","getItem","isDown","disLeft","offsetLeft","disTop","offsetTop","disX","clientX","disY","clientY","cursor","preventDefault","newdisX","newdisY","left","top","Directive","ElementRef","HostListener","el","renderer2","Infinity","JdbPlgPaginationComponent","_showTotal","_total","setPageNo","_current","_lastIndex","_firstIndex","Number","_showPageSize","_pageSize","_options","optionsArr_1","obj","_showQuickJump","jdbSimple","_jdbSimple","Math","ceil","tmpPages","max","right","min","pages","quickJumpPage","jdbPageIndex","jdbPageIndexChange","jdbPageSize","jdbPageSizeChange","inputJump","focus","pageSize","dataChange","round","Renderer2","isObject","isDate","toISOString","jsonObj","e","console","log","toJson","pctEncodeSpaces","parts","toSerialize","topLevel","serialize","encodeUriQuery","serializeValue","propIsEnumerable","propertyIsEnumerable","_i","source","symbols","to","toObject","getOwnPropertySymbols","http","route","JdbPlgBaseService","vRef","msg","delayTime","changeDetectorRef","detectChanges","setTimeout","alert","apiName","dataObj","loginToken","loginWay","orgUid","time","Date","getTime","tokenObj","currentRoute","hash","jQueryLikeParamSerializer","objectAssign","jdbDhTraceId","parseInt","random","reqUrl","requestoptions","res","filter","toast","reset","fns","len","returnCode","returnUserMessage","isIntercept","catch","throw","stamp","cookieStr","Cookie","cookieObj","cookieData","employeeId","empId","paramsObj","href","file","reader","FileReader","result","readAsDataURL","Router","_elementRef","_renderer","jdbPlgBaseService","_el","addClass","_prefixCls","JdbPlgButtonComponent","size","_setClassMap","loading","removeClass","resolver","JdbPlgDialogComponent","_visible","visible","MvisibileChange","_footerHide","TemplateRef","_titleTpl","_title","_contentTpl","_content","_footerTpl","_width","contentEl","_bodyStyleMap","clickCancel","_customClass","_okText","_cancelText","_isConfirm","_RogerText","setStyle","component","factory","bodyEl","changes","_state","MOnCancel","MOnOk","getAttribute","opacity","OnlyNumberDirective","appOnlyNumber","keyCode","ctrlKey","ch","RegExp","regexStr","JdbPlgSelectComponent","_jdbItemDisabled","_jdbSureDisabled","_placeHolder","_selectList","_showImgBox","_size","_optionText","_optionValue","_jdbDisabled","_jdbMode","listen","show","setElementClass","inputDom","inputText","isShowClear","setClassMap","_classMap","jdbClassName","_b","stopPropagation","_chooseMoreArray","ngModelValue","onChange","optionPosition","optionList","clientHeight","listHeight","paddingHeight","offetTop","getTop","scrollTop","getScrollTop","parentElement","documentElement","elemHeight","jdbSize","spaceFlex","undefined","forOneStart","forMoreStart","forNumStart","isDisabled","flag","deleteMoreItem","offset","offsetParent","ret","parseTranslateY","isPercent","translateY","translate","exec","translatArr","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","JdbPlgInputComponent","_prefixContent","_inputWrapClass","_composing","_value","_type","placeHolder","large","small","_disabled","disabled","_readonly","readonly","_error","_clear","_maxlength","_autoPromptData","$event","jdbBlur","jdbFocus","encapsulation","ViewEncapsulation","None","ContentChild","FillTableService","lines","lists","aLength","mLength","fillObj","unShowOpt","CommonMethodService","number","outFor","j","JdbPlgTableErrorComponent","ProvinceReformPipe","Pipe","AmountReformPipe","toFixed","MDL_MODULES","imports","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","exports","declarations","entryComponents"],"mappings":"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"}