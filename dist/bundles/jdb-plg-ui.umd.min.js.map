{"version":3,"file":"jdb-plg-ui.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../__jdbui_components/components/jdb-plg-toast/jdb-plg-toast.component.ts","../../__jdbui_components/components/jdb-plg-tab/jdb-tab.component.ts","../../__jdbui_components/components/show-picture/show-picture.component.ts","../../__jdbui_components/components/picture-viewer/picture-viewer.component.ts","../../__jdbui_components/directive/drag.directive.ts","../../__jdbui_components/components/jdb-plg-pagination/jdb-plg-pagination.component.ts","../../__jdbui_components/components/jdb-plg-button/jdb-plg-button.component.ts","../../__jdbui_components/components/jdb-plg-dialog/jdb-plg-dialog.component.ts","../../__jdbui_components/components/jdb-plg-new-dialog/jdb-plg-new-dialog.component.ts","../../__jdbui_components/directive/only-number.directive.ts","../../__jdbui_components/directive/watermark.directive.ts","../../__jdbui_components/components/jdb-plg-select/jdb-plg-select.component.ts","../../__jdbui_components/components/jdb-plg-input/jdb-plg-input.component.ts","../../__jdbui_components/components/jdb-plg-autocomplete/keycode.ts","../../__jdbui_components/components/jdb-plg-autocomplete/jdb-plg-autocomplete.component.ts","../../__jdbui_components/services/jdb-plg-base/common-method.service.ts","../../__jdbui_components/services/jdb-plg-base/query-string.ts","../../__jdbui_components/services/jdb-plg-base/object-assign.ts","../../__jdbui_components/services/jdb-plg-base/send-statistic.service.ts","../../__jdbui_components/services/jdb-plg-base/jdb-plg-base.service.ts","../../__jdbui_components/services/jdb-plg-base/fill-table.service.ts","../../__jdbui_components/services/jdb-plg-base/jdb-modal.service.ts","../../__jdbui_components/components/jdb-plg-table-error/jdb-plg-table-error.component.ts","../../__jdbui_components/pipe/province-reform.pipe.ts","../../__jdbui_components/pipe/amount-reform.pipe.ts","../../__jdbui_components/components/jdb-plg-timeline-item/jdb-plg-timeline-item.component.ts","../../__jdbui_components/components/jdb-plg-switch/jdb-plg-switch.component.ts","../../__jdbui_components/jdb-plg-ui.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit, AfterViewInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-toast',\n  template: `<div class=\"toast-wraper\" [innerHtml]=\"msg\"> </div> `,\n  // styleUrls: ['./jdb-plg-toast.component.scss']\n})\nexport class JdbPlgToastComponent implements OnInit {\n\n  @Input() msg:string = \"\";\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n}\n\n\n\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewContainerRef,\n  ViewChild,\n  ElementRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  Injector,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnChanges\n} from '@angular/core';\n\n@Component({\n  selector: 'jdb-tab',\n  template: `<div class=\"tab-wraper\"> <div class=\"tab-nav-wraper\"> <div *ngFor=\"let item of items;let i = index;\" class=\"tab-item {{item.theme}} {{item.style}} tab-item-hei{{item.height}}\" [ngClass]=\"{'tab-selected':i == curTabIndex, 'trapezoid1':item.theme === 'trapezoid'&&(i == 0)}\" title='{{item.title}}'> <div (click)=\"tabChange(i)\" class=\"tab-text\" [ngClass]=\"{'trapezoid-div':item.theme === 'trapezoid'}\"> {{item.title}}<span *ngIf=\"totalTip.isShow ? totalTip.isShow : false\" class=\"tab-total\">{{totalTip[i]}}</span> </div> <span class=\"close-btn\" (click)=\"removeTab(i)\" *ngIf=\"i !== 0 && item.isCloseFlag != true\">&times;</span> <div *ngIf=\"item.borderLength === 'short'\" class=\"self-border\"></div> </div> </div> <div class=\"tab-content-wraper\"> <div #tabContent class=\"place-holder\"></div> </div> </div> `\n  // styleUrls: ['./jdb-tab.component.scss']\n})\nexport class JdbTabComponent implements OnInit, OnDestroy, OnChanges {\n  // @ViewChild('tabContent') tabContent: ElementRef;\n  @ViewChild('tabContent', { read: ViewContainerRef })\n  target;\n  @Output() onTabChange = new EventEmitter();\n  @Output() onTabRemove = new EventEmitter();\n  @Output() onTopComMsg = new EventEmitter();\n  @Input() totalTip: any; // tab标签后面的总数提示\n  @Output() totalTipChange = new EventEmitter();\n  items = [];\n  tabComs = [];\n  tabSubs: any;\n  curTabIndex = 0;\n  tabIdComMap = {};\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    public _injector: Injector\n  ) {\n    this.totalTip = {\n      isShow: false\n    };\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    // console.log('changes:totalTip:' + this.totalTip);\n  }\n\n  /**\n   *\n   * @param ChildComponent\n   * @param attrs:{\n   *     propery:value\n   * ]\n   * title:string\n   * isCloseFlag\n   * @description: tab切换的样式作为可配置功能拓展，主要是通过类名设置，提供主题名theme和色调搭配 style:\n   * 一、theme说明：\n   * - text-纯文本\n   * - trapezoid-梯形\n   * - rectangle-长方形\n   * - 待以后添加\n   * 二、style说明：\n   * 1、纯文本的一般情况下是没有边框和背景色的，所以格式遵循：'形状'-'初始字体颜色''激活字体颜色''边框色''边框长还是短'\n   * - text garyBlackBlueLong（文本的默认样式）\n   * - text garyBlackBlueShort\n   * 2、图形一般情况下有边框和背景色：\n   * （格式严格遵循：'形状'-'初始背景色''激活背景色''边框色''边框长还是短': 比如 'rectangle grayWhiteBlueLong')\n   * - rectangle grayWhiteBlueLong: 长方形-灰色 白色 蓝边 长。这也是默认的tab样式\n   * - trapezoid grayWhite: 梯形-灰色 白色。说明梯形的tab没有 边框的颜色效果\n   * （如果倒数几个配置均不需要，则用nonono，直接省略不写：'trapezoid-grayWhite'））\n   * （但是如果是中间有配置项为no，则不能省略 no。书写为：'trapezoid-noNoBlueLong'）\n   * @example:\n   * this.lefTopTab.addItem(ChildrenComponent, {\n   *     theme: {\n   *      height: 40,\n   *      name: 'trapezoid',\n   *      style: 'grayWhite',\n   *      borderLength: 'long' / 'short'\n   *     }\n   *   }, '主页', '', true);\n   * @extends:\n   * 如果颜色配置遇到'light'，表示设置透明；\n   * 三、borderLength说明：\n   * ‘long'-长边框，此时隐藏元素\n   * ‘short'-短边框，此时显示元素\n   */\n  addItem(\n    ChildComponent: any,\n    attrs: any,\n    title: string,\n    comId: any = '',\n    isCloseFlag: boolean = false\n  ) {\n    if (comId && this.tabIdComMap[comId]) {\n      let com: any = this.tabIdComMap[comId];\n      this.tabChange(com.index);\n      return;\n    }\n    const childComponent = this.componentFactoryResolver.resolveComponentFactory(\n      ChildComponent\n    );\n    var comInstance = this.target.createComponent(childComponent);\n    var keys = Object.keys(attrs);\n    this.items.push({\n      title: title,\n      isCloseFlag: isCloseFlag,\n      theme: attrs.theme ? (attrs.theme.name ? attrs.theme.name : null) : null,\n      style: attrs.theme\n        ? attrs.theme.style\n          ? attrs.theme.style\n          : null\n        : null,\n      height: attrs.theme\n        ? attrs.theme.height\n          ? attrs.theme.height\n          : null\n        : null,\n      borderLength: attrs.theme\n        ? attrs.theme.borderLength\n          ? attrs.theme.borderLength\n          : null\n        : null\n    });\n    keys.forEach(value => {\n      comInstance.instance[value] = attrs[value];\n    });\n    this.tabComs.push(comInstance);\n    if (this.items.length > 1) {\n      this.setOneComHide(this.curTabIndex);\n    }\n\n    this.tabSubs = comInstance.instance['onTopComMsg'] = new EventEmitter();\n    this.tabSubs.subscribe(value => {\n      this.onTopComMsg.emit(value);\n    });\n    this.curTabIndex = this.items.length - 1;\n    if (comId) {\n      this.tabIdComMap[comId] = {\n        index: this.curTabIndex,\n        comInstance: comInstance.instance\n      };\n    }\n    return comInstance;\n  }\n\n  private setOneComHide(tabIndex) {\n    this.tabComs[tabIndex].location.nativeElement.style.display = 'none';\n  }\n\n  private setOneComShow(tabIndex) {\n    this.tabComs[tabIndex].location.nativeElement.style.display = 'block';\n  }\n\n  tabChange(index) {\n    if (this.curTabIndex === index) {\n      return;\n    }\n    this.setOneComHide(this.curTabIndex);\n    this.setOneComShow(index);\n    this.curTabIndex = index;\n    this.onTabChange.emit(index);\n    this.tabComs[index].instance.tabRefresh &&\n      this.tabComs[index].instance.tabRefresh({});\n    // this.tabComs[index].destroy();\n  }\n\n  setOneTabShow(index) {\n    this.tabChange(index);\n  }\n\n  removeTab(index) {\n    this.tabComs[index].destroy();\n    this.tabComs.splice(index, 1);\n    this.items.splice(index, 1);\n    if (index <= this.curTabIndex) {\n      this.curTabIndex--;\n    }\n    if (this.curTabIndex < 0) {\n      this.curTabIndex = 0;\n    }\n    this.setOneComShow(this.curTabIndex);\n    this.onTabRemove.emit(index);\n    let tabIdComMap = this.tabIdComMap;\n    for (let key in tabIdComMap) {\n      if (tabIdComMap[key].index == index) {\n        delete tabIdComMap[key];\n        break;\n      }\n    }\n  }\n\n  removeTabById(id: string) {\n    let tabIdComMap = this.tabIdComMap;\n    for (let key in tabIdComMap) {\n      if (key == id) {\n        this.removeTab(tabIdComMap[key]['index']);\n        break;\n      }\n    }\n  }\n  ngOnDestroy() {\n    if (this.target) {\n      // this.target.destroy();\n      this.target.clear();\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-show-picture',\n  template: `<div> <div class=\"img-mask\" (click)=\"closeModel()\"> <!-- 遮罩层 --> </div> <div class=\"img-content\"> <span class=\"close\" (click)=\"closeModel()\"> <img src=\"/assets/images/close-x.png\" alt=\"\"> </span> <img [src]=\"pictureUrl\" alt=\"\" style=\"max-height: 600px;max-width: 800px;\"> </div> </div> `,\n  // styleUrls: ['./show-picture.component.scss']\n})\nexport class ShowPictureComponent implements OnInit {\n  @Input() pictureUrl: string;\n  @Output() update = new EventEmitter<{status: boolean}>();\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  closeModel(){\n    this.update.emit({status: false})\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ElementRef,\n  Renderer,\n  HostListener,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterViewInit\n} from '@angular/core';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from '@angular/animations';\n@Component({\n  selector: 'app-picture-viewer',\n  template: `<div class=\"picture-viewer\"> <div class=\"img-mask\" *ngIf=\"_jdbMaster\" (click)=\"closeModel()\"> <!-- 遮罩层 --> </div> <div #imgContent [ngClass]=\"{'img-content-componet':jdbShowType==2}\" class=\"img-content\"> <!-- 右上角关闭按钮 --> <div class=\"close\" *ngIf=\"_jdbClear\" (click)=\"closeModel()\"> <span class=\"icon-close\"></span> </div> <!-- 图片box --> <ul class=\"img-box\" #img> <li *ngFor=\"let item of pictureList;let i=index\" [@imgMove]=\"ImgState(i)\"> <img appDragDirective  [src]=\"item.imgUrl\" alt=\"\" style=\"max-height: 600px;max-width: 800px;\"> </li> </ul> <!-- 上一页下一页 --> <div [hidden]=\"current==0\" class=\"prev-page\" (click)=\"Prev()\"> <span class=\"icon-pagination-prev\"></span> </div> <div [hidden]=\"current==pictureList.length-1\" class=\"next-page\" (click)=\"Next()\"> <span class=\"icon-pagination-next\"></span> </div> <!-- 右下角页码 --> <div class=\"img-index\">{{current+1}}/{{pictureList.length}}</div> <!-- 缩放旋转按钮组 --> <div class=\"btn-box\"> <span [ngClass]=\"{'hover-disabled':imgOperate.num===4}\" class=\"icon-picture-zoom-in scale-big\" (click)=\"scaleBig()\"></span> <span [ngClass]=\"{'hover-disabled':imgOperate.num==0.5}\" class=\"icon-picture-zoom-out  scale-small\" (click)=\"scaleSmall()\"></span> <span class=\"icon-picture-counterclockwise routate-ni\" (click)=\"routateNi()\"></span> <span class=\"icon-picture-clockwise routate-shun\" (click)=\"routateShun()\"></span> </div> </div> </div>`,\n  // styleUrls: ['./picture-viewer.component.scss'],\n  animations: [\n    trigger('imgMove', [\n      /** 不显示 */\n      state('off', style({ 'display': 'none', 'z-index': '0', 'transform': 'translateX(0)' })),\n      /** 上一张图片 */\n      state('prev', style({\n        'z-index': '1',\n        'transform': 'translateX(-100%)'\n      })),\n      /** 下一张图片 */\n      state('next', style({ 'z-index': '2', 'transform': 'translateX(100%)' })),\n      /** 当前图片 */\n      state('on', style({ 'z-index': '3', 'transform': 'translateX(0)' })),\n      transition('prev=>on', [\n        animate('0.3s ease-in')\n      ]),\n      transition('next=>on', [\n        animate('0.3s ease-in')\n      ]),\n      transition('on=>prev', [\n        animate('0.3s ease-in')\n      ]),\n      transition('on=>next', [\n        animate('0.3s ease-in')\n      ])\n    ])\n  ]\n})\nexport class PictureViewerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() pictureList: any = [];\n  @Output() update = new EventEmitter<{ status: boolean }>();\n  // @Input() current: number = 0;\n  @ViewChild('img') imgBox: ElementRef;  // 图片父节点\n  @ViewChild('imgContent') imgContent: ElementRef; // 容器元素\n  // 设置容器的默认宽高，可适配 可配置属性\n  @Input() maxWidth: number = 800;\n  @Input() maxHeight: number = 600;\n  @Input() jdbShowType: number = 1; // 是浮层还是嵌入组件，默认为1，作为浮层，若为2，则表示是嵌入组件\n\n  _jdbMaster = true; // 是否需要master遮罩，默认需要遮罩层\n  _jdbClear = true;// 是否需要按钮叉，默认需要\n  dragStatus = false;\n  current = 0; // 展示图片下标，默认为0\n\n  elem: any;\n\n  imgOperate = {\n    num: 1,\n    degnum: 0\n  };\n\n\n  @Input()\n  set jdbMaster(value: boolean) {\n    this._jdbMaster = this.toBoolean(value);\n  }\n\n  get jdbMaster(): boolean {\n    return this._jdbMaster;\n  }\n\n  @Input()\n  set jdbClear(value: boolean) {\n    this._jdbClear = this.toBoolean(value);\n  }\n\n  get jdbClear(): boolean {\n    return this._jdbClear;\n  }\n\n  @Input()\n  set jdbCurrent(value: number) {\n    if (value > this.pictureList.length || value < 0) {\n      this.current = 0;\n      return;\n    }\n    this.current = value;\n  }\n\n  get jdbCurrent(): number {\n    return this.current;\n  }\n\n  constructor(private renderer: Renderer) {\n\n  }\n\n  ngOnInit() {\n    this.elem = this.imgBox.nativeElement.children;  // 所有的li\n  }\n\n  ngOnChanges() {\n    if (this.pictureList) {\n      this.pictureList.forEach((element, index) => {\n        this.resetPosition(index);\n      });\n    }\n  }\n\n  // 设置元素样式\n  ngAfterViewInit() {\n    const imgContent = this.imgContent.nativeElement;\n    this.renderer.setElementStyle(imgContent, 'height', this.maxHeight + 'px');\n    this.renderer.setElementStyle(imgContent, 'width', this.maxWidth + 'px');\n\n    if (this.jdbShowType == 1) {\n      this.renderer.setElementStyle(imgContent, 'margin-left', - this.maxWidth / 2 + 'px');\n      this.renderer.setElementStyle(imgContent, 'margin-top', - this.maxHeight / 2 + 'px');\n    }\n  }\n\n  // 重置图片位置\n  resetPosition(index) {\n    const image = new Image();\n    image.onload = () => {\n      // 获取当前加载图片宽高\n      let w = image.width;\n      let h = image.height;\n      let hRatio;\n      let wRatio;\n      // 设置默认比例以及容器宽高\n      const imgRate = w / h; // 图片宽高比\n      // const maxWidth = 800;\n      // const maxHeight = 600;\n      wRatio = this.maxWidth / w;\n      hRatio = this.maxHeight / h;\n\n      if (wRatio > 1 && hRatio > 1) {\n        // 两者比例均大于1表示图为小图，宽高未达到800*600,则取原图大小\n        w = w;\n        h = h;\n      } else if (wRatio < 1 && hRatio < 1) {\n        // 两者比例均小于1表示图为大图，宽高达到800*600,则取容器大小\n        if (imgRate > 1) {\n          // 宽图\n          w = this.maxWidth;\n          h = w / imgRate;\n        } else if (imgRate < 1) {\n          // 长图\n          h = this.maxHeight;\n          w = h * imgRate;\n        }\n\n      } else if (wRatio > 1 && hRatio < 1) {\n        // 表示为长图片，则高为600，宽等比例缩放取值\n        h = this.maxHeight;\n        w = w * hRatio;\n      } else if (wRatio < 1 && hRatio > 1) {\n        // 表示为宽图片，则宽为800，高等比例缩放取值\n        h = h * wRatio;\n        w = this.maxWidth;\n      }\n\n      // 设置图片展示宽高\n      this.renderer.setElementStyle(this.elem[index].children[0], 'height', h + 'px');\n      this.renderer.setElementStyle(this.elem[index].children[0], 'width', w + 'px');\n\n      if (w === this.maxWidth && h === this.maxHeight) {\n        // 设置图片位置使其垂直水平居中\n        this.renderer.setElementStyle(this.elem[index].children[0], 'top', '0px');\n        this.renderer.setElementStyle(this.elem[index].children[0], 'left', '0px');\n      } else {\n        // 设置图片位置使其垂直水平居中\n        this.renderer.setElementStyle(this.elem[index].children[0], 'top', (this.maxHeight - h) / 2 + 'px');\n        this.renderer.setElementStyle(this.elem[index].children[0], 'left', (this.maxWidth - w) / 2 + 'px');\n      }\n\n    };\n    image.src = this.pictureList[index].imgUrl;\n  }\n\n  // 切换动画\n  ImgState(index) {\n    if (this.pictureList && this.pictureList.length) {\n      if (this.current === 0) {\n        return index === 0 ? 'on' :\n          index === 1 ? 'next' :\n            index === this.pictureList.length - 1 ? 'prev' :\n              'off';\n      } else if (this.current === this.pictureList.length - 1) {\n        return index === this.pictureList.length - 1 ? 'on' :\n          index === this.pictureList.length - 2 ? 'prev' :\n            index === 0 ? 'next' :\n              'off';\n      }\n      switch (index - this.current) {\n        case 0:\n          return 'on';\n        case 1:\n          return 'next';\n        case -1:\n          return 'prev';\n        default:\n          return 'off';\n      }\n    } else {\n      return 'off';\n    }\n  }\n\n  // 下一张图\n  Next() {\n    this.resetImgData();\n    this.current = (this.current + 1) % this.pictureList.length;\n    this.resetPosition(this.current - 1);\n    // 修改状态，使拖动图片回到原来位置\n    // this.dragStatus = true;\n  }\n\n  // 上一张图\n  Prev() {\n    this.resetImgData();\n    this.current = this.current - 1 < 0 ? this.pictureList.length - 1 : this.current - 1;\n    this.resetPosition(this.current + 1);\n    // 修改状态，使拖动图片回到原来位置\n    // this.dragStatus = true;\n  }\n\n  // 关闭图片查看器 __关闭弹框后再次打开所有拖拽后的位置都会自动归为，因为触发了onChanges方法\n  closeModel() {\n    this.resetImgData();\n    this.update.emit({ status: false });\n  }\n\n  // 放大 50% 100% 200% 400%\n  scaleBig() {\n    this.imgOperate.num = this.imgOperate.num * 2;\n    if (this.imgOperate.num > 4) {\n      this.imgOperate.num = 4;\n    }\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 缩小\n  scaleSmall() {\n    this.imgOperate.num = this.imgOperate.num / 2;\n    if (this.imgOperate.num < 1) {\n      this.imgOperate.num = 0.5;\n    }\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 逆时针旋转\n  routateNi() {\n    this.imgOperate.degnum++;\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 顺时针旋转\n  routateShun() {\n    this.imgOperate.degnum--;\n\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 重置图片数据\n  resetImgData() {\n    this.imgOperate = {\n      num: 1,\n      degnum: 0\n    };\n    const rate = 'scale(1,1) rotate(0deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transition', 'transform 0.2s linear 0.4s');\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  ngOnDestroy() {\n    this.pictureList = null;\n    this.imgBox = null;\n    this.imgContent = null;\n    this.current = null;\n  }\n}\n","import {\n    HostListener,\n    ElementRef,\n    Directive,\n    Component,\n    Renderer,\n    OnInit,\n    Input,\n    AfterContentInit,\n    OnChanges,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n@Directive({\n    selector: 'img[appDragDirective]'\n})\nexport class DragDirective {\n    oldLeft: string;\n    oldTop: string;\n\n    private isDown = false;\n    private disX;\n    private disY;\n    private disLeft;\n    private disTop;\n\n    constructor(\n        private elem: ElementRef,\n        private render: Renderer\n    ) {\n        //\n    }\n\n    // 点击事件\n    @HostListener('mousedown', ['$event']) onMousedown(event) {\n        const wRate = localStorage.getItem('dragWidth');\n        const hRate = localStorage.getItem('dragHeight');\n        this.isDown = true;\n\n        this.disLeft = this.elem.nativeElement.offsetLeft;\n        this.disTop = this.elem.nativeElement.offsetTop;\n\n        this.disX = event.clientX;\n        this.disY = event.clientY;\n        event.target.style.cursor = 'move';\n        // event.preventDefault();\n    }\n\n    // 监听移动事件事件\n    @HostListener('mousemove', ['$event']) onMousemove(event) {\n        event.preventDefault();\n        // 判断该元素是否被点击了。\n\n        if (this.isDown) {\n            const newdisX = event.clientX - this.disX;\n            const newdisY = event.clientY - this.disY;\n            this.elem.nativeElement.style.left = newdisX + this.disLeft + 'px';\n            this.elem.nativeElement.style.top = newdisY + this.disTop + 'px';\n\n        }\n        return false;\n\n\n    }\n\n    // 监听document离开事件\n\n    @HostListener('mouseup', ['$event']) onMouseup() {\n        // 只用当元素移动过了，离开函数体才会触发。\n        if (this.isDown) {\n            this.isDown = false;\n            this.disLeft = this.elem.nativeElement.offsetLeft;\n            this.disTop = this.elem.nativeElement.offsetTop;\n        }\n    }\n\n    // 监听元素离开事件\n    @HostListener('mouseleave', ['$event']) onMouseleave() {\n        this.isDown = false;\n    }\n    ngOnDestroy() {\n        //Called once, before the instance is destroyed.\n        //Add 'implements OnDestroy' to the class.\n        \n    }\n}\n","\nimport {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  Renderer2\n} from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-pagination',\n  template: `<div class=\"jdb-plg-pagination\">\n    <!-- 总条数 -->\n    <span *ngIf=\"_showTotal\" class=\"total-box\">\n      共{{_total}}条\n    </span>\n\n    <div class=\"operate-box\">\n        <!-- 条数切换 -->\n        <div class=\"jdb-plg-pagination-options\" *ngIf=\"_showPageSize\">\n            <app-jdb-plg-select (ngModelChange)=\"dataChange(false,$event)\" [jdbSize]=\"'small'\" [jdbWidth]=\"_jdbSelectWidth\" [(ngModel)]=\"_pageSize\" [jdbSelectList]=\"_options\"></app-jdb-plg-select>\n        </div>\n        <!-- 基本分页样式 -->\n        <ul *ngIf=\"!_jdbSimple\" class=\"base-pagination\">\n            <!-- 上一页按钮 -->\n            <li class=\"jdb-plg-pagination-prev\" title=\"上一页\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_current-1,$event)\">\n                <span class=\"jdbIcon icon-pagination-prev\"></span>\n            </li>\n            <!-- 首页按钮 -->\n            <li class=\"jdb-plg-pagination-first\" title=\"首页\" [ngClass]=\"{'active':_current===_firstIndex}\" (click)=\"dataChange(true,_firstIndex,$event)\">\n                {{_firstIndex}}\n            </li>\n            <!-- 省略号 -->\n            <li class=\"jdb-plg-pagination-forward\" *ngIf=\"(_lastIndex >9)&&(_current-4>_firstIndex)\" (click)=\"jumpBefore($event,_pageSize)\">\n                <span class=\"icon-pagination-more\"></span>\n                <span class=\"icon-pagination-jump-prev\"></span>\n            </li>\n            <!-- 按钮 -->\n            <li class=\"jdb-plg-pagination-pager\" *ngFor=\"let page of pages\" [ngClass]=\"{'active':_current===page.index}\" (click)=\"dataChange(true,page.index,$event)\">\n                {{page.index}}\n            </li>\n            <!-- 省略号 -->\n            <li class=\"jdb-plg-pagination-backward\" *ngIf=\"(_lastIndex >9)&&(_current+4<_lastIndex)\" (click)=\"jumpAfter($event,_pageSize)\">\n                <span class=\"icon-pagination-more\"></span>\n                <span class=\"icon-pagination-jump-next\"></span>\n            </li>\n            <!-- 尾页按钮 -->\n            <li class=\"jdb-plg-pagination-last\" *ngIf=\"(_lastIndex>0)&&(_lastIndex!==_firstIndex)\" title=\"尾页\" [ngClass]=\"{'active':_current===_lastIndex}\" (click)=\"dataChange(true,_lastIndex,$event)\">\n                {{_lastIndex}}\n            </li>\n            <!-- 下一页按钮 -->\n            <li class=\"jdb-plg-pagination-next\" title=\"下一页\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_current+1,$event)\">\n                <span class=\"jdbIcon icon-pagination-next\"></span>\n            </li>\n        </ul>\n        <!-- 简单分页样式 -->\n        <div class=\"simple-pagination\" *ngIf=\"_jdbSimple\">\n            <div class=\"left-box\">\n                <span class=\"icon-pagination-first\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_firstIndex,$event)\"></span>\n                <span class=\"icon-pagination-prev\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_current-1,$event)\"></span>\n            </div>\n            <div class=\"center-box\">\n                {{_current}} / {{_lastIndex}}\n            </div>\n            <div class=\"right-box\">\n                <span class=\"icon-pagination-next\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_current+1,$event)\"></span>\n                <span class=\"icon-pagination-last\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_lastIndex,$event)\"></span>\n            </div>\n        </div>\n        <!-- 快速跳转 -->\n        <div *ngIf=\"_showQuickJump\" class=\"quick-jumper\">\n            第\n            <input #inputJump type=\"text\" [(ngModel)]=\"quickJumpPage\" (keyup.enter)=\"quickJump()\" appOnlyNumber=\"true\"> 页\n            <button (click)=\"quickJump()\">跳转</button>\n        </div>\n    </div>\n</div>`,\n  // styleUrls: ['./jdb-plg-pagination.component.scss']\n})\nexport class JdbPlgPaginationComponent {\n  _total: number; // 总条数\n  _current = 1; // 当前页码默认为1\n  _pageSize = 10; // 默认条数\n  _firstIndex = 1;  // 首页默认为1\n  _lastIndex = Infinity;  // 尾页默认为无穷\n  _showTotal = false;  // 是否展示总数，默认不展示\n  _showPageSize = false; // 是否展示页码切换，默认不展示\n  _showQuickJump = false; // 是否展示快速跳转，默认不展示\n  pages = [];  // 页码数组\n  // _options = [10, 20, 30, 40, 50]; // select默认数组\n  // select默认数组\n  _options = [\n    { value: 10, text: '10条/页' },\n    { value: 20, text: '20条/页' },\n    { value: 30, text: '30条/页' },\n    { value: 40, text: '40条/页' },\n    { value: 50, text: '50条/页' }\n  ];\n\n  quickJumpPage: any; // 快速跳转页码\n  hisQicukPage: any;  // 历史快速跳转页码\n  _jdbSimple = false; // 是否为简单分页，默认为基本分页\n  _jdbSelectWidth = '90px'; // 下拉框宽度\n\n  @Output() jdbPageSizeChange: EventEmitter<number> = new EventEmitter();  // 条数切换  命名与属性相关\n  @Output() jdbPageIndexChange: EventEmitter<number> = new EventEmitter();  // 页码切换\n\n  @ViewChild('inputJump') private inputJump: ElementRef;\n  constructor(\n    private el: ElementRef,\n    private renderer2: Renderer2\n  ) { }\n\n  // 是否展示总数标签\n  @Input()\n  set jdbShowTotal(value: boolean) {\n    this._showTotal = this.toBoolean(value);\n  }\n\n  get jdbShowTotal(): boolean {\n    return this._showTotal;\n  }\n\n  // 数据总数\n  @Input()\n  set jdbTotal(value: number) {\n    // 若传入值和当前total一致，则不触发操作\n    if (value === this._total) {\n      return;\n    }\n    this._total = value;\n    this.setPageNo();\n  }\n\n  get jdbTotal(): number {\n    return this._total;\n  }\n\n  // jdbPageIndex与_current关联，表示页码\n  @Input()\n  set jdbPageIndex(value: number) {\n    if (this._current === value) {\n      return;\n    }\n    if (value > this._lastIndex || value < this._firstIndex) {\n      return;\n    }\n    this._current = Number(value);\n    this.setPageNo();\n  }\n\n  get jdbPageIndex(): number {\n    return this._current;\n  }\n\n  // 是否展示切换条数select\n  @Input()\n  set jdbShowPageSize(value: boolean) {\n    this._showPageSize = this.toBoolean(value);\n  }\n\n  get jdbShowPageSize(): boolean {\n    return this._showPageSize;\n  }\n\n  // 默认条数\n  @Input()\n  set jdbPageSize(value: number) {\n    if (value === this._pageSize) {\n      return;\n    }\n    this._pageSize = value;\n    this.setPageNo();\n  }\n\n  get jdbPageSize(): number {\n    return this._pageSize;\n  }\n\n  // 默认下拉选择条数数组\n  @Input()\n  set jdbSizeOptions(value) {\n    // 若传入值和当前total一致，则不触发操作\n    if (value === this._options) {\n      return;\n    }\n\n    // 判断是否为数组\n    if (Object.prototype.toString.call(value) === '[object Array]') {\n      const optionsArr = [];\n      value.forEach(elem => {\n        const obj = {\n          value: elem,\n          text: elem + '条/页'\n        };\n        optionsArr.push(obj);\n      });\n      this._options = optionsArr;\n    }\n  }\n\n  get jdbSizeOptions() {\n    return this._options;\n  }\n\n  // 是否展示快速跳转页面\n  @Input()\n  set jdbShowQuickJump(value: boolean) {\n    this._showQuickJump = this.toBoolean(value);\n  }\n\n  get jdbShowQuickJump(): boolean {\n    return this._showQuickJump;\n  }\n\n  // 分页样式\n  @Input()\n  set jdbSimple(value: boolean) {\n    this._jdbSimple = this.toBoolean(value);\n  }\n\n  get jdbSimple(): boolean {\n    return this.jdbSimple;\n  }\n\n  // 下拉框宽度设置，防止window系统出现滚动条位置不够\n  @Input()\n  set jdbSelectWidth(value: string) {\n    this._jdbSelectWidth = value;\n  }\n\n  get jdbSelectWidth(): string {\n    return this._jdbSelectWidth;\n  }\n\n  // 创建页码\n  setPageNo() {\n    // 向上取整\n    this._lastIndex = Math.ceil(this._total / this._pageSize);\n    // 如果当前页码大于尾页，则等于尾页\n    // if (this._current > this._lastIndex) {\n    //   this.jdbPageIndex = this._lastIndex;\n    //   this.jdbPageIndexChange.emit(this.jdbPageIndex);\n    // }\n\n    const tmpPages = [];\n\n    if (this._lastIndex <= 9) {\n      // 若总页数不超过9，则全部展示在页面上\n      for (let i = 2; i <= this._lastIndex - 1; i++) {\n        tmpPages.push({\n          index: i\n        });\n      }\n    } else {\n      const current = +this._current;\n      let left = Math.max(2, current - 2);\n      let right = Math.min(current + 2, this._lastIndex - 1);\n\n      // 特殊处理正数第五个数和倒数第五个数\n      if (current === 5) {\n        left = 2;\n      } else if (current === this._lastIndex - 4) {\n        right = this._lastIndex - 1;\n      }\n\n      if (current - 1 <= 3) {\n        right = 7;\n      }\n\n      if (this._lastIndex - current <= 3) {\n        left = this._lastIndex - 6;\n      }\n\n      for (let i = left; i <= right; i++) {\n        tmpPages.push({ index: i });\n      }\n    }\n\n    this.pages = tmpPages;\n  }\n\n  // status为true表示页码切换，num表示页码，false表示条数切换，num表示条数  e为$event\n  dataChange(status: boolean, num: number, e?): void {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    if (status) {\n      if (num === this._firstIndex - 1 || num === this._lastIndex + 1) {\n        return;\n      }\n      // 清空输入框内容\n      this.quickJumpPage = '';\n      this.jdbPageIndex = num;\n      this.jdbPageIndexChange.emit(this.jdbPageIndex);\n    } else {\n      // 清空输入框内容\n      this.quickJumpPage = '';\n      this.jdbPageSize = num;\n      this.jdbPageSizeChange.emit(num);\n\n      // 切换页数之后需要将页码重置为1\n      this.jdbPageIndex = 1;\n      this.jdbPageIndexChange.emit(this.jdbPageIndex);\n      this.setPageNo();\n    }\n    // this.setPageNo();\n  }\n\n  // 点击跳转按钮快速跳转\n  quickJump() {\n    // 若是输入的页码大于最后一页页码，即超出范围不存在，则清空页码，并使输入框获取焦点\n    if (this.quickJumpPage > this._lastIndex) {\n      this.inputJump.nativeElement.focus();\n      this.quickJumpPage = '';\n      return;\n    }\n\n    // 若输入为空，则不能跳转\n    if (!this.quickJumpPage) {\n      return;\n    }\n\n    this.jdbPageIndex = this.quickJumpPage;\n    this.jdbPageIndexChange.emit(this.jdbPageIndex);\n  }\n\n  // 点击左箭头(为什么使用条数除以2呢)\n  jumpBefore(e, pageSize) {\n    this.dataChange(true, this._current - Math.round(pageSize / 2), e);\n  }\n\n  // 点击右箭头\n  jumpAfter(e, pageSize) {\n    this.dataChange(true, this._current + Math.round(pageSize / 2), e);\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  // 校验是否为纯数字\n  isNumber(obj) {\n    const reg = /^[0-9]*$/;\n    return reg.test(obj);\n  }\n\n}\n\n","import { Component, OnInit, Input, Renderer2, HostListener, ElementRef } from '@angular/core';\n\nexport type buttonSize = 'small' | 'large' | 'default';\nexport type buttonType = 'primary' | 'gray' | 'danger' | 'buleline' | 'white';\n\n@Component({\n  selector: 'button[app-jdb-plg-button]',\n  template: `<i class=\"jdb-icon-loading action\" *ngIf=\"loading\"></i> <ng-content></ng-content>`\n  // styleUrls: ['./jdb-plg-button.component.scss']\n})\n\nexport class JdbPlgButtonComponent implements OnInit {\n\n  _el: HTMLElement;\n  nativeElement: HTMLElement;\n  _prefixCls = 'jdb-plg-btn';\n  size: buttonSize;            // size的值 'small' 、 'large' 、 'default'\n  type: buttonType;            // type的值 'primary' 、 'gray' 、 'danger'、'buleline' 、'white'\n  loading: boolean;\n\n  @Input()\n  get jdbSize() {\n    return this.size;\n  }\n  set jdbSize(value: buttonSize) {\n    if (!value) {\n      value = 'default';\n    }\n    this.size = value;\n    // this._renderer.addClass(this._el, this.size);\n    this._setClassMap(this.loading);\n  }\n\n  @Input()\n  get jdbType() {\n    return this.type;\n  }\n  set jdbType(value: buttonType) {\n    if (!value) {\n      value = 'primary';\n    }\n    this.type = value;\n    // this._renderer.addClass(this._el, this.type);\n    this._setClassMap(this.loading);\n  }\n\n  @Input()\n  get jdbLoading() {\n    return this.loading; \n  }\n\n  set jdbLoading(value: boolean | string) {\n    value = value === '' || (value && value !== 'false');\n    this.loading = value;\n    this._setClassMap(this.loading);\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n\n    this._el = this._elementRef.nativeElement;\n\n    this.nativeElement = this._elementRef.nativeElement;\n    this._renderer.addClass(this._el, this._prefixCls);\n  }\n  _setClassMap(loading) {\n    this._renderer.removeClass(this._el, 'undefined');\n    this._renderer.addClass(this._el, this.size);\n    this._renderer.addClass(this._el, this.type);\n    if (loading) {\n      this._renderer.addClass(this._el, 'loading_disable');\n    } else {\n      this._renderer.removeClass(this._el, 'loading_disable');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnChanges,\n  ViewChild,\n  Output,\n  Input,\n  SimpleChanges,\n  OnDestroy,\n  Inject,\n  ElementRef,\n  HostListener,\n  ViewEncapsulation,\n  TemplateRef,\n  EventEmitter,\n  ViewContainerRef,\n  Type,\n  ComponentFactory,\n  ComponentFactoryResolver\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n@Component({\n  selector: 'app-jdb-plg-dialog',\n  template: `<div [ngClass]=\"_customClass\"> <div class=\"_maskClass\" [ngClass]=\"{'hid':!_visible}\" [style.zIndex]=\"1000\"></div> <div class=\"jdb-modal\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'hid':!_visible}\" [ngStyle]=\"{'dispaly':!_visible}\" (click)=\"closeModal($event)\" class=\"_wrapClass\" [ngClass]=\"_wrapClass\" [style.zIndex]=\"1000\" [attr.aria-modalId]=\"modalId\"> <div #modal_content class=\"modal\" [@optionsState]=\"_state\" [ngStyle]=\"_bodyStyleMap\"> <div class=\"modal-content\"> <ng-template [ngIf]=\"_closeable\"> <button class=\"modal-close\" (click)=\"clickCancel($event)\"> <!-- <span class=\"modal-close-x\"></span> --> <span class=\"icon-close\"></span> </button> </ng-template> <div class=\"modal-header\" *ngIf=\"_title||_titleTpl\"> <div class=\"modal-title\" [attr.id]=\"modalId\"> <ng-template #defaultTitle> {{_title}} </ng-template> <ng-template [ngTemplateOutlet]=\"_titleTpl||defaultTitle\"> </ng-template> </div> </div> <div class=\"modal-body\"> <ng-template #defaultContent>{{_content}}</ng-template> <ng-template [ngTemplateOutlet]=\"_contentTpl||defaultContent\"></ng-template> <ng-template #modal_component></ng-template> </div> <div class=\"modal-footer\" *ngIf=\"!_footerHide\"> <ng-template #defalutFooter> <button *ngIf=\"!_isConfirm\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'white'\" (click)=\"clickCancel($event)\"><span>{{_cancelText||'取消'}}</span></button> <button *ngIf=\"!_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"clickOk($event)\"><span>{{_okText||'确认'}}</span></button> <button *ngIf=\"_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"clickOk($event)\" (click)=\"clickOk($event)\"><span>{{_RogerText}}</span></button> </ng-template> <ng-template [ngTemplateOutlet]=\"_footerTpl||defalutFooter\"></ng-template> </div> <div tabindex=\"0\" style=\"width:0px;height:0px;overflow:hidden;\">aaa</div> </div> </div> </div> </div>`,\n  // styleUrls: ['./jdb-plg-dialog.component.scss'],\n  animations: [\n    trigger('optionsState', [\n      state('showM', style({\n        transform: 'translate(-50%, -50%)',\n        opacity: '1',\n        // display: 'block',\n      })),\n      state('hideM', style({\n        transform: 'translate(-50%, -80%)',\n        opacity: '0',\n        // display: 'none',\n      })),\n      transition('showM <=> hideM', animate('200ms ease-out'))\n    ])]\n})\nexport class JdbPlgDialogComponent implements OnInit, AfterViewInit, OnChanges {\n  _customClass = '';\n  _maskClass = '';\n  _bodyStyleMap;\n  modalId: number;\n  _visible = false;\n  _title = '';\n  _closeable = true;\n  _titleTpl: TemplateRef<void>;\n  _content: string | Type<any>;\n  _contentTpl: TemplateRef<void>;\n  _animationStatus = '11';\n  _bodyClass: string;\n  _width = '400px';\n  _footerHide = false;\n  _isConfirm = false;\n  _okText = '';\n  _cancelText = '';\n  _RogerText = '';\n  _state = 'hideM';\n  _footerTpl: TemplateRef<void>;\n  @ViewChild('modal_content') contentEl: ElementRef;\n  @ViewChild('modal_component', { read: ViewContainerRef }) bodyEl: ViewContainerRef;\n  @Output() MvisibileChange: EventEmitter<boolean> = new EventEmitter();\n  @Output() MOnOk: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() MOnCancel: EventEmitter<MouseEvent | KeyboardEvent> = new EventEmitter();\n  // 弹框显隐\n  @Input()\n  set Mvisible(value: boolean) {\n    const visible = this.toBoolean(value);\n    if (this._visible === visible) {\n      return;\n    }\n\n    this._visible = visible;\n    this.MvisibileChange.emit(this._visible);\n  }\n  get Mvisible(): boolean {\n    return this._visible;\n  }\n  // 隐藏footer\n  @Input()\n  set MfooterHiden(value: boolean) {\n    const visible = this.toBoolean(value);\n    if (this._visible === visible) {\n      return;\n    }\n    this._footerHide = visible;\n  }\n  get MfooterHiden(): boolean {\n    return this._footerHide;\n  }\n  // 标题\n  @Input()\n  set Mtitle(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this._titleTpl = value;\n    } else {\n      this._title = value;\n    }\n  }\n  @Input()\n  set Mcontent(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this._contentTpl = value;\n    } else {\n      this._content = value;\n    }\n  }\n  @Input()\n  set Mfooter(value:string|TemplateRef<void>){\n    if (value instanceof TemplateRef){\n      this._footerTpl = value;\n    } \n  }\n  \n  // 自定义宽度\n  @Input()\n  set Mwidth(value: string | number) {\n    this._width = typeof value === 'number' ? value + 'px' : value;\n  }\n\n  // 定位modal位置和样式\n  setStyle() {\n    const el = this.contentEl.nativeElement;\n    this._bodyStyleMap = {\n      ...{ width: this._width }\n    };\n  }\n\n\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(e: KeyboardEvent): void {\n    this.clickCancel(e);\n  }\n\n  // 自定义样式\n  @Input()\n  set Mclass(value: string) {\n    this._customClass = value;\n  }\n\n  @Input()\n  set MOkText(value: string) {\n    this._okText = value;\n  }\n  @Input()\n  set McancelText(value: string) {\n    this._cancelText = value;\n  }\n  @Input()\n  set MRogerText(value: string) {\n    this._isConfirm = true;\n    this._RogerText = value;\n  }\n\n  constructor(private resolver: ComponentFactoryResolver) { }\n  ngOnInit() {\n    this.setStyle();\n  }\n  createDynamicComponent(component: Type<any>) {\n    const factory = this.resolver.resolveComponentFactory(this._content as Type<any>);\n    this.bodyEl.createComponent(factory);\n  }\n  ngAfterViewInit() {\n    \n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._visible) {\n      this._state = 'showM';\n      setTimeout(() => {\n        this.contentEl.nativeElement.parentNode.focus();\n      }, 200);\n    } else {\n      this._state = 'hideM';\n    }\n  }\n  clickCancel(e): void {\n    this._visible = false;\n    this._state = 'hideM';\n    this.MOnCancel.emit(e);\n  }\n  clickOk(e): void {\n    if (this.MOnOk) {\n      this.MOnOk.emit(e);\n    } else {\n      this._visible = false;\n      this._state = 'hideM';\n    }\n  }\n  closeModal(e): void {\n    if ((e.target as HTMLElement).getAttribute('role') === 'dialog') {\n      this.clickCancel(e);\n      this._state = 'hideM';\n    }\n  }\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== false);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  ViewChild,\n  Output,\n  Input,\n  ElementRef,\n  EventEmitter,\n  ViewContainerRef,\n  Type,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Renderer2\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n@Component({\n  selector: 'app-jdb-plg-new-dialog',\n  template: `<div [ngClass]=\"_customClass\"> <div class=\"_newMaskClass\" [ngClass]=\"{'hid':!_visible}\" [style.zIndex]=\"900\"></div> <div class=\"jdb-modal\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'hid':!_visible}\" [ngStyle]=\"{'dispaly':!_visible}\" (click)=\"cusCloseModal($event)\" class=\"_newWrapClass\" [ngClass]=\"_newWrapClass\" [style.zIndex]=\"900\"> <div #modal_content class=\"new-modal\" [@optionsState]=\"_state\" [ngStyle]=\"_bodyStyleMap\"> <div class=\"modal-content\"> <ng-template [ngIf]=\"_closeable\"> <button class=\"new-modal-close\" style=\"outline: none\" (click)=\"closeModel($event)\"> <span class=\"icon-close\"></span> </button> </ng-template> <div class=\"new-modal-header\" *ngIf=\"_title\"> <div class=\"new-modal-title\" [attr.id]=\"modalId\">{{_title}}</div> </div> <div class=\"new-modal-body _modalTextBody\"> <ng-template #modal_component></ng-template> <ng-template #modal_text></ng-template> </div> <div class=\"new-modal-footer\" *ngIf=\"_footer\"> <button *ngIf=\"!_isConfirm\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'gray'\" (click)=\"cancelModel($event)\"><span>{{_cancelText}}</span></button> <button *ngIf=\"!_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"confirmModel($event)\"><span>{{_okText}}</span></button> <button *ngIf=\"_isConfirm\" class=\"right-btn confirm-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"confirmModel($event)\"><span>{{_okText}}</span></button> </div> </div> </div> </div> </div>`,\n  animations: [\n    trigger('optionsState', [\n      state('showM', style({\n        opacity: '1',\n      })),\n      state('hideM', style({\n        opacity: '0',\n      })),\n      transition('showM <=> hideM', animate('200ms ease-out'))\n    ])]\n})\nexport class JdbPlgNewDialogComponent implements OnInit, AfterViewInit {\n  _visible = false;                 //弹框显示隐藏\n  _title = '提示';                   //弹框标题\n  _bodyStyleMap;                    //弹框样式 \n  _customClass = '';                //自定义容器样式\n  _maskClass = '';                  //自定义遮罩样式\n  _closeable = true;                //是否显示左上角关闭按钮\n  _content: string | Type<void>;    //内容模板\n  _footer = true;                   //是否显示底部按钮\n  _isConfirm = false;               //是否是确认类型的模态框\n  _okText = '';                     //确认按钮文案\n  _cancelText = '';                 //取消按钮文案\n  _state = '';                      //模态框状态\n  _closeType = 'mask';              //自定义关闭模态框的热区\n  _componentParams = {};            //模板参数\n  _text = '';                       //文本内容\n  _class = '';                      //文本类名\n  _style = null;                    //文本样式\n  contentComponentRef: ComponentRef<void>;\n  @ViewChild('modal_content') contentEl: ElementRef;\n  @ViewChild('modal_text') textEl: ElementRef;\n  @ViewChild('modal_component', { read: ViewContainerRef}) bodyEl: ViewContainerRef;\n  @Output() onClose: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() onOk: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() onCancel: EventEmitter<MouseEvent | KeyboardEvent> = new EventEmitter();\n\n\n  //模态框内容模板\n  @Input()\n  _contentTpl: string | Type<void>;\n\n  //弹框显示隐藏\n  @Input()\n  set visible(value) {\n    this._visible = value;\n    //控制切入和切出动画\n    if (this._visible) {\n      this._state = 'showM';\n    } else {\n      this._state = 'hideM';\n    }\n  }\n  get visible() {\n    return this._visible;\n  }\n\n  //弹框宽度\n  @Input()\n  set _width(value) {\n    this._bodyStyleMap = {\n      width: value\n    }\n  }\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2\n  ) { }\n\n  ngOnInit() {\n    //判断_contentTpl是不是组件实例\n    if (this._contentTpl instanceof Type) {\n      this.createDynamicComponent(this._contentTpl as Type<void>);\n    } else {\n      this.createDynamicDom();\n    }\n  }\n  \n  //创建文本模板内容\n  createDynamicDom(){\n    let insertDiv = this.renderer.createElement('div');\n      let text = this.renderer.createText(this._text);\n      this.renderer.addClass(insertDiv,this._class);\n      this.renderer.appendChild(insertDiv, text);\n      if(this._style){\n        for(let key in this._style){\n          this.renderer.setStyle(insertDiv,key,this._style[key]);\n        }\n      }\n      this.renderer.appendChild(document.querySelector('._modalTextBody'), insertDiv);\n  }\n\n  createDynamicComponent(component: Type<any>): void {\n    //生成组件工厂函数\n    const factory = this.resolver.resolveComponentFactory(component);\n    //生成组件实例\n    this.contentComponentRef = this.bodyEl.createComponent(factory);\n    //模板的输入属性\n    for (let key in this._componentParams) {\n      this.contentComponentRef.instance[key] = this._componentParams[key];\n    }\n    //立刻执行一次变更检测\n    this.contentComponentRef.changeDetectorRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    //动态组件实例存在 插入到视图容器中\n    if (this.contentComponentRef) {\n      this.bodyEl.insert(this.contentComponentRef.hostView);\n    }\n  }\n\n  //关闭弹框\n  closeModel(e: MouseEvent): void {\n    this.onClose.emit(e);\n    this._state = 'hideM';\n  }\n\n  //确认弹框\n  confirmModel(e: MouseEvent): void {\n    this.onOk.emit(e);\n    this._state = 'hideM';\n  }\n\n  //取消弹框\n  cancelModel(e: MouseEvent): void {\n    this.onCancel.emit(e);\n    this._state = 'hideM';\n  }\n\n  //点击遮罩关闭\n  cusCloseModal(e: MouseEvent): void {\n    let flag = this.isChildOf(e.target, this.contentEl.nativeElement);\n    if (this._closeType === 'mask' && !flag) {\n      this.onClose.emit(e);\n      this._state = 'hideM';\n    }\n  }\n\n  //阻止冒泡\n  // selfCloseModal(e: MouseEvent): void {\n  //   e.stopPropagation();\n  //   e.cancelBubble = true;\n  // }\n\n  isChildOf(child, parent) {\n    var parentNode;\n    if (child && parent) {\n      parentNode = child.parentNode;\n      while (parentNode) {\n        if (parent === parentNode) {\n          return true;\n        }\n        parentNode = parentNode.parentNode;\n      }\n    }\n    return false;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumber]'\n})\nexport class OnlyNumberDirective {\n\n  constructor(private el: ElementRef) { }\n  regexStr = '^[0-9]*$';\n  @Input() appOnlyNumber: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\n    const e = <KeyboardEvent>event;\n    if (this.appOnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode === 65 && e.ctrlKey === true) ||\n        // Allow: Ctrl+C\n        (e.keyCode === 67 && e.ctrlKey === true) ||\n        // Allow: Ctrl+V\n        (e.keyCode === 86 && e.ctrlKey === true) ||\n        // Allow: Ctrl+X\n        (e.keyCode === 88 && e.ctrlKey === true) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n        // let it happen, don't do anything\n        return;\n      }\n      const ch = String.fromCharCode(e.keyCode);\n      const regEx = new RegExp(this.regexStr);\n      if (regEx.test(ch)) {\n        return;\n      } else {\n        e.preventDefault();\n      }\n    }\n  }\n\n  // 解决中文输入法输入汉字问题\n  @HostListener('keyup', ['$event']) onKeyUp(event) {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/\\D/g, '');\n  }\n}\n","/**\n * 2018-06-21\n * @author 李佳轩\n * @description 水印指令，组件渲染之前请确保通过静态方法setText设置了需要显示的水印文案，否则显示默认的`JDB`\n * @example\n * <div *ngIf=\"isList\" class=\"caseList\" appWaterMark>\n *      <nz-table ...>\n *          ...\n *      </nz-table>\n * </div>\n */\n\nimport { Directive, ElementRef, OnInit, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Directive({\n    selector: '[appWaterMark]'\n})\nexport class WatermarkDirective implements OnInit, AfterViewInit {\n\n    /**\n     * 水印渲染的文案，默认JDB\n     */\n    private static _text: string = '';\n\n    // 大部分时候需要在请求的毁掉里取设置水印文案，所以需要在设置水印文案之后重绘水印\n    private static drawSubject: Subject<boolean> = new Subject<boolean>();\n\n    private draw$: Observable<boolean> = WatermarkDirective.drawSubject.asObservable();\n\n    constructor(\n        private el: ElementRef,\n        private render: Renderer2\n    ) {\n    }\n\n    /**\n     * @method 设置水印渲染的文案。\n     * @param callback 该参数为一个函数或字符串，该参数为函数时用户自定义生成文案的过程，这个回调函数最后应返回字符串，因为这个字符串将被渲染成水印。\n     * 若该参数为字符串，则传入的字符串就是渲染的水印文案\n     */\n    static setText(callback: string | (() => string)): void {\n        if (typeof callback === 'string') {\n            WatermarkDirective._text = callback;\n        } else {\n            WatermarkDirective._text = callback();\n        }\n        WatermarkDirective.drawSubject.next(true);\n    }\n\n\n    /**\n     * @method 通过canvas渲染水印背景，然后设置到指令绑定的元素的背景，然后背景默认重复。\n     * @extends 可以通过改变`fillText()`的个数来增加文案出现的次数。\n     */\n    draw() {\n        // const name = localStorage.getItem('cxNickName') || '';\n        // const phone = localStorage.getItem('cxPhone') || '';\n        // const str = `CXWEB-${name}${phone.slice(-4)}`;\n        if (WatermarkDirective._text) {\n            const node = document.createElement('canvas');\n            node.width = 500;\n            node.height = 200;\n            node.style.display = 'none';\n\n            const ctx = node.getContext('2d');\n            ctx.rotate(-10 * Math.PI / 180);\n            ctx.font = '16px microsoft yahei';\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'Middle';\n\n            ctx.fillText(WatermarkDirective._text, 0, 200);\n            // ctx.fillText(str, 80, 150);\n            ctx.fillText(WatermarkDirective._text, 165, 85);\n            // ctx.fillText(str, 230, 160);\n            ctx.fillText(WatermarkDirective._text, 300, 190);\n            this.render.setStyle(this.el.nativeElement, 'backgroundImage', `url(${node.toDataURL('image/png')})`);\n        }\n        // this.render.setStyle(this.el.nativeElement, 'background', `red`);\n    }\n\n    ngOnInit() {\n        this.draw$.subscribe(() => {\n            this.draw();\n        });\n    }\n    ngAfterViewInit() {\n        this.draw(); // 调用渲染水印方法\n    }\n}\n","/*\n  下拉框功能：\n  种类：单选，多选，选几项\n  样式：高度 middle small large\n*/\n\nimport {\n\tViewContainerRef,\n\tComponent,\n\tOnInit,\n\tInput,\n\tforwardRef,\n\tAfterViewInit,\n\tRenderer2,\n\tElementRef,\n\tViewChild,\n\tRenderer,\n\tViewChildren,\n\tOnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'app-jdb-plg-select',\n\ttemplate: `<!-- 单选 --> <div *ngIf=\"_jdbMode=='chooseOne'\" #inputDom class=\"jdb-plg-select-one\" (click)=\"dialogShow($event)\" [ngClass]=\"_classMap\" [ngStyle]=\"{'width':_width}\"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder\" [hidden]=\"inputText!==''\">{{_placeHolder}}</div> <!-- 单选 --> <!-- <span class=\"chooseOne\" [hidden]=\"inputText==''\">{{inputText}}</span> --> <input class=\"chooseOne chooseOneInput\" [hidden]=\"inputText===''\" type=\"text\" [(ngModel)]=\"inputText\" readonly> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <!-- 单选 --> <li *ngFor=\"let option of _selectList \" (click)=\"item($event,option) \" [ngClass]=\"{active:ngModelValue===option[_optionValue],disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> <!-- 单选时下拉图标 --> <span class=\"select-icon icon-select-arrow \" [hidden]=\"isShowClear \"></span> </div> <!-- 多选 --> <div *ngIf=\"_jdbMode=='chooseMore' \" #inputDom class=\"jdb-plg-select-more \" (click)=\"dialogShow($event) \" [ngClass]=\"_classMap \" [ngStyle]=\"{ 'width':_width} \"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder \" [hidden]=\"inputText.length !=0 \">{{_placeHolder}}</div> <!-- 多选item --> <ul class=\"chooseMore \"> <li *ngFor=\"let item of inputText \"> {{item[_optionText]}} <span class=\"item-delete icon-close \" (click)=\"deleteMoreItem($event,item) \"></span> </li> </ul> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <li class=\"choose-more \" *ngFor=\"let option of _selectList \" (click)=\"chooseMore($event,option) \" [ngClass]=\"{ 'active':moreIndex(option),disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <!-- {{_optionText=='option'?option:option[_optionText]}} --> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> <span [hidden]=\"!moreIndex(option) \" class=\"choose-right icon-selected \"></span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> </div> <!-- 选中几项 --> <div *ngIf=\"_jdbMode=='chooseNum' \" #inputDom class=\"jdb-plg-select-num \" (click)=\"dialogShow($event) \" [ngClass]=\"_classMap \" [ngStyle]=\"{ 'width':_width} \"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder \" [hidden]=\"inputText!==0 \">{{_placeHolder}}</div> <span class=\"choose-tip \" [hidden]=\"inputText===0 \">已选中{{inputText}}项</span> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <li class=\"choose-more \" *ngFor=\"let option of _selectList \" (click)=\"numClick($event,option) \" [ngClass]=\"{ 'active':moreIndex(option),disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <!-- {{_optionText=='option'?option:option[_optionText]}} --> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> <span [hidden]=\"!moreIndex(option) \" class=\"choose-right icon-selected \"></span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> <span class=\"select-icon icon-select-arrow \" [hidden]=\"isShowClear \"></span> </div> <!-- 遮罩层 --> <div class=\"jdb-plg-select-master \" *ngIf=\"show \"></div>`,\n\t// styleUrls: ['./jdb-plg-select.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\t// 注册成为表单控件\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => JdbPlgSelectComponent),\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class JdbPlgSelectComponent implements OnInit, OnChanges {\n\t_selectList: any;\n\t_size = 'middle';\n\t_width: string;\n\t_optionText = 'text'; // 默认值\n\t_optionValue = 'value'; // 默认值\n\t_optionPosition: string;\n\tisShowClear = false; // 是否展示清空x\n\t_jdbClear = false;\n\t_jdbDisabled = false; // 默认未禁用\n\t_jdbMode = 'chooseOne';\n\t_placeHolder = '请选择';\n\t_chooseMoreArray = []; // 多选选中元素数组\n\t_classMap = {};\n\tlistHeight: number;\n\tsavaHeight = true;\n\tspaceFlex = true; // 是否有剩余空间，默认有\n\t_showImgBox = false; // 下拉框是否带图片\n\t_jdbItemDisabled = 'disabled'; // 默认为disabled\n\t_jdbSureDisabled = 2; // 为1是启用 2是禁用\n\t_jdbNoDisabled = 1; // 为2表示不禁用\n\t_jdbError = false; //  输入框输入项报错标红\n\n\t// 自定义类名\n\t@Input() jdbClassName = '';\n\n\t// 选项中某项禁用字段\n\t@Input()\n\tset jdbItemDisabled(value) {\n\t\tthis._jdbItemDisabled = value;\n\t}\n\tget jdbItemDisabled(): string {\n\t\treturn this._jdbItemDisabled;\n\t}\n\n\t// 输入框是否处于报错状态\n\t@Input()\n\tset jdbError(value) {\n\t\tthis._jdbError = this.toBoolean(value);\n\t}\n\tget jdbError(): boolean {\n\t\treturn this._jdbError;\n\t}\n\n\t// 选项中某项确认禁用\n\t@Input()\n\tset jdbSureDisabled(value) {\n\t\tthis._jdbSureDisabled = value;\n\t}\n\tget jdbSureDisabled(): any {\n\t\treturn this._jdbSureDisabled;\n\t}\n\n\t// // 选项中某项不禁用\n\t// @Input()\n\t// set jdbNoDisabled(value) {\n\t//   this._jdbNoDisabled = value;\n\t// }\n\t// get jdbNoDisabled(): any {\n\t//   return this._jdbNoDisabled;\n\t// }\n\n\t// 选项中某项确认禁用\n\t@Input()\n\tset jdbPlaceHolder(value) {\n\t\tthis._placeHolder = value;\n\t}\n\tget jdbPlaceHolder(): any {\n\t\treturn this._placeHolder;\n\t}\n\n\t// 是否需要显示清空\n\t@Input()\n\tset jdbClear(value) {\n\t\tthis._jdbClear = this.toBoolean(value);\n\t}\n\tget jdbClear(): boolean {\n\t\treturn this._jdbClear;\n\t}\n\n\t// 下拉框数组，必写\n\t@Input()\n\tset jdbSelectList(value) {\n\t\t// 循环数组，判断是否需要展示带有图片下拉框\n\t\tif (value) {\n\t\t\tconst arr = [];\n\t\t\tvalue.forEach((element) => {\n\t\t\t\tconst type = typeof element;\n\t\t\t\tif (type === 'string' || type === 'number') {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\ttext: element,\n\t\t\t\t\t\tvalue: element\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tarr.push(element);\n\t\t\t\t\tif (element.imgUrl) {\n\t\t\t\t\t\tthis._showImgBox = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._selectList = arr;\n\t\t}\n\t}\n\tget jdbSelectList(): any {\n\t\treturn this._selectList;\n\t}\n\n\t// 下拉框尺寸，默认为高度30px；small为24px,large为40px;\n\t@Input()\n\tset jdbSize(value) {\n\t\tthis._size = value;\n\t}\n\tget jdbSize(): string {\n\t\treturn this._size;\n\t}\n\n\t// 自定义宽度\n\t@Input()\n\tset jdbWidth(value) {\n\t\tthis._width = value;\n\t}\n\tget jdbWidth(): string {\n\t\treturn this._width;\n\t}\n\n\t// 展示在页面内容字段名称\n\t@Input()\n\tset jdbOptionText(value) {\n\t\tthis._optionText = value;\n\t}\n\tget jdbOptionText(): string {\n\t\treturn this._optionText;\n\t}\n\n\t// 返回给serve对应字段名称\n\t@Input()\n\tset jdbOptionValue(value) {\n\t\tthis._optionValue = value;\n\t}\n\tget jdbOptionValue(): string {\n\t\treturn this._optionValue;\n\t}\n\n\t// 下拉框禁用\n\t@Input()\n\tset jdbDisabled(value) {\n\t\tthis._jdbDisabled = this.toBoolean(value);\n\t}\n\tget jdbDisabled(): boolean {\n\t\treturn this._jdbDisabled;\n\t}\n\n\t// select模式，默认为单选，chooseMore多选\n\t@Input()\n\tset jdbMode(value) {\n\t\tthis._jdbMode = value;\n\t}\n\tget jdbMode(): string {\n\t\treturn this._jdbMode;\n\t}\n\n\t@ViewChild('inputDom') inputDom: ElementRef;\n\t@ViewChild('optionList') optionList: ElementRef;\n\n\tshow = false;\n\tinputText: any;\n\tngModelValue: any = ''; // 单选为字符串，多选为数组\n\tconstructor(private renderer2: Renderer2, private renderer: Renderer) { }\n\n\tngOnInit() { }\n\n\t// tslint:disable-next-line:use-life-cycle-interface\n\tngAfterViewInit() {\n\t\t// 点击除下拉框以外位置，下拉框隐藏\n\t\tthis.renderer2.listen('document', 'click', () => {\n\t\t\tthis.show = false;\n\t\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t});\n\n\t\t// 监听输入框元素，若有内容时则滑上显示x\n\t\tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseenter', () => {\n\n\t\t\tif (this._jdbClear && !this._jdbDisabled) {\n\t\t\t\t// 若输入框不存在内容，则不做任何操作\n\t\t\t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.isShowClear = true;\n\t\t\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t\t}\n\t\t});\n\n\t\tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseleave', () => {\n\t\t\tif (this._jdbClear && !this._jdbDisabled) {\n\t\t\t\t// 若输入框不存在内容，则不做任何操作\n\t\t\t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.isShowClear = false;\n\t\t\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t\t}\n\t\t});\n\n\t\t// if (this._jdbClear && !this._jdbDisabled) {\n\t\t// \t// 监听输入框元素，若有内容时则滑上显示x\n\t\t// \tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseenter', () => {\n\t\t// \t\t// 若输入框不存在内容，则不做任何操作\n\t\t// \t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\n\t\t// \t\tthis.isShowClear = true;\n\t\t// \t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t// \t});\n\t\t// \tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseleave', () => {\n\t\t// \t\t// 若输入框不存在内容，则不做任何操作\n\t\t// \t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\n\t\t// \t\tthis.isShowClear = false;\n\t\t// \t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t// \t});\n\t\t// }\n\t}\n\n\tngOnChanges() {\n\t\t// 当数组取到后重新判断ngModel绑定的值，解决异步数据不回显问题\n\t\tif (this._selectList) {\n\t\t\tif (this.ngModelValue === null || this.ngModelValue === '' || this.ngModelValue === undefined) {\n\t\t\t\t// 若传入值为null，则清空数据\n\t\t\t\tif (this._jdbMode === 'chooseMore') {\n\t\t\t\t\tthis.inputText = [];\n\t\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\t\tthis.inputText = 0;\n\t\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputText = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._jdbMode === 'chooseOne') {\n\t\t\t\t\tthis.forOneStart(this.ngModelValue);\n\t\t\t\t} else if (this._jdbMode === 'chooseMore') {\n\t\t\t\t\tthis.forMoreStart(this.ngModelValue);\n\t\t\t\t\tthis.setClassMap();\n\t\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\t\tthis.forNumStart(this.ngModelValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setClassMap();\n\t}\n\n\tsetClassMap() {\n\t\tif (this._jdbMode === 'chooseMore') {\n\t\t\tthis._classMap = {\n\t\t\t\t[`${this._size}`]: true,\n\t\t\t\t[`jdb-plg-select-bottom-${this._size}`]: this.inputText.length !== 0,\n\t\t\t\t['jdb-plg-select-disabled']: this._jdbDisabled,\n\t\t\t\t[this.jdbClassName]: true,\n\t\t\t\t['jdb-plg-select-error']: this._jdbError // 输入项报错标红\n\t\t\t};\n\t\t} else {\n\t\t\tthis._classMap = {\n\t\t\t\t[`${this._size}`]: true,\n\t\t\t\t['jdb-plg-select-disabled']: this._jdbDisabled,\n\t\t\t\t[this.jdbClassName]: true,\n\t\t\t\t['jdb-plg-select-error']: this._jdbError // 输入项报错标红\n\t\t\t};\n\t\t}\n\t}\n\n\t// 点击x，清空内容\n\tclearInputText(e) {\n\t\te.stopPropagation();\n\n\t\tif (this._jdbMode === 'chooseOne') {\n\t\t\tthis.inputText = '';\n\t\t} else if (this._jdbMode === 'chooseMore') {\n\t\t\tthis.inputText = [];\n\t\t\tthis._chooseMoreArray = [];\n\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\tthis.inputText = 0;\n\t\t\tthis._chooseMoreArray = [];\n\t\t}\n\t\tthis.isShowClear = !this.isShowClear;\n\n\t\t// 清空后输入需要重新告知父组件\n\t\tthis.ngModelValue = '';\n\t\tthis.onChange('');\n\n\t\tthis.setClassMap();\n\t}\n\n\t// 点击输入框下拉菜单显隐\n\tdialogShow(e) {\n\t\te.stopPropagation();\n\t\t// 若外侧组件告知禁用，则点击没有任何效果\n\t\tif (this._jdbDisabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.isShowClear = false;\n\t\tthis.show = !this.show;\n\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\tthis.optionPosition(this.optionList.nativeElement.clientHeight);\n\t}\n\n\t// 浮层出现是在输入框上方还是下方\n\toptionPosition(listHeight) {\n\t\tconst offetTop = this.getTop(this.inputDom.nativeElement); // 元素offetTop\n\t\tconst scrollTop = this.getScrollTop(this.inputDom.nativeElement.parentElement);\n\t\tconst clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 屏幕高度\n\t\tconst elemHeight = this.inputDom.nativeElement.clientHeight; // 元素高度\n\t\tlet paddingHeight;\n\t\tif (this.jdbSize === 'small') {\n\t\t\tpaddingHeight = 2;\n\t\t} else if (this.jdbSize === 'large') {\n\t\t\tpaddingHeight = 9;\n\t\t} else if (this.jdbSize === 'middle') {\n\t\t\tpaddingHeight = 5;\n\t\t}\n\t\tconst flexHeight = clientHeight - offetTop - elemHeight - paddingHeight + scrollTop; // 剩余高度\n\t\t// console.log(\n\t\t// \t'元素offsetTop', offetTop,\n\t\t// \t'父元素scrollTop', scrollTop,\n\t\t// \t'元素高度', elemHeight,\n\t\t// \t'屏幕高度', clientHeight,\n\t\t// \t'计算后剩余高度', flexHeight,\n\t\t// \t'浮层元素高度', listHeight,\n\t\t// );\n\t\tif (flexHeight < listHeight) {\n\t\t\t// 空间不足\n\t\t\tthis.spaceFlex = false;\n\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'transform-origin', '100% 100%');\n\t\t\tif (listHeight < 188) {\n\t\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'top', -listHeight - 5 + 'px');\n\t\t\t} else {\n\t\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'top', -190 - paddingHeight + 'px');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.spaceFlex = true;\n\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'top', '');\n\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'transform-origin', '0% 0%');\n\t\t}\n\t}\n\n\t// ControlValueAccessor 自定义表单 与父组件的ngModel绑定起来\n\twriteValue(value: any): void {\n\t\tthis.ngModelValue = value;\n\t\tif (value === null || value === '' || value === undefined) {\n\t\t\t// 若传入值为null，则清空数据\n\t\t\tif (this._jdbMode === 'chooseMore') {\n\t\t\t\tthis.inputText = [];\n\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\tthis.inputText = 0;\n\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t} else {\n\t\t\t\tthis.inputText = '';\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._jdbMode === 'chooseOne') {\n\t\t\t\tthis.forOneStart(value);\n\t\t\t} else if (this._jdbMode === 'chooseMore') {\n\t\t\t\tthis.forMoreStart(value);\n\t\t\t\tthis.setClassMap();\n\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\tthis.forNumStart(value);\n\t\t\t}\n\t\t}\n\t}\n\tonChange: (value: any) => void = () => null;\n\n\tregisterOnChange(fn: (value: any) => void): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => void): void { }\n\n\tsetDisabledState(isDisabled: boolean): void { }\n\n\t// 单选，若有初始选项，则遍历数组\n\tforOneStart(value) {\n\t\tthis._selectList.forEach((elem) => {\n\t\t\tif (elem[this._optionValue] === value) {\n\t\t\t\tthis.inputText = elem[this._optionText];\n\t\t\t}\n\t\t});\n\t}\n\n\t// 多选，若有初始值则遍历数组\n\tforMoreStart(value) {\n\t\t// 判断传入值类型 老版本为string,新版本为数组，兼容新老版本\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = value.toString().split(',');\n\t\t}\n\t\tvalue.forEach((item) => {\n\t\t\tthis._selectList.forEach((elem) => {\n\t\t\t\tif (elem[this._optionValue] === item) {\n\t\t\t\t\t// inputText为输入框中展示的内容 判断是否有重新赋值text和value字段\n\t\t\t\t\tlet textName = this._optionText;\n\t\t\t\t\tlet valueName = this._optionValue;\n\t\t\t\t\tif (this.jdbOptionText) {\n\t\t\t\t\t\ttextName = this.jdbOptionText;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.jdbOptionValue) {\n\t\t\t\t\t\tvalueName = this.jdbOptionValue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// key为变量的赋值方法\n\t\t\t\t\tconst obj = {};\n\t\t\t\t\tobj[textName] = elem[this._optionText];\n\t\t\t\t\tobj[valueName] = elem[this._optionValue];\n\t\t\t\t\tthis.inputText.push(obj);\n\n\t\t\t\t\t// this._chooseMoreArray为传出去的数据\n\t\t\t\t\tthis._chooseMoreArray.push(elem[this._optionValue]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// 选几项\n\tforNumStart(value) {\n\t\t// 判断传入值类型 老版本为string,新版本为数组，兼容新老版本\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = value.toString().split(',');\n\t\t}\n\n\t\tvalue.forEach((item) => {\n\t\t\tthis._selectList.forEach((elem) => {\n\t\t\t\tif (elem[this._optionValue] === item) {\n\t\t\t\t\tthis.inputText++;\n\t\t\t\t\tthis._chooseMoreArray.push(elem[this._optionValue]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// 单选某一元素点击\n\titem(e, item) {\n\t\t// 阻止事件冒泡\n\t\te.stopPropagation();\n\n\t\t// 判断show是否为true\n\t\tif (!this.show) {\n\t\t\treturn;\n\t\t}\n\t\t// 判断该项是否可点击\n\t\tif (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputText = item[this._optionText];\n\t\tthis.show = !this.show;\n\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\n\t\tthis.ngModelValue = item[this._optionValue];\n\t\tthis.onChange(item[this._optionValue]);\n\t}\n\n\t// 多选元素点击\n\tchooseMore(e, item) {\n\t\tlet flag = false;\n\t\t// 阻止事件冒泡\n\t\te.stopPropagation();\n\t\t// 判断show是否为true\n\t\tif (!this.show) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断该项是否可点击\n\t\tif (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断是否存在\n\t\tthis.inputText.forEach((element, index) => {\n\t\t\tif (element[this._optionValue] === item[this._optionValue]) {\n\t\t\t\tflag = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif (flag) {\n\t\t\tthis.deleteMoreItem(e, item);\n\t\t\treturn;\n\t\t}\n\n\t\t// inputText为输入框中展示的内容\n\t\tlet textName = this._optionText;\n\t\tlet valueName = this._optionValue;\n\t\tif (this.jdbOptionText) {\n\t\t\ttextName = this.jdbOptionText;\n\t\t}\n\t\tif (this.jdbOptionValue) {\n\t\t\tvalueName = this.jdbOptionValue;\n\t\t}\n\t\tconst obj = {};\n\t\tobj[textName] = item[this._optionText];\n\t\tobj[valueName] = item[this._optionValue];\n\t\tthis.inputText.push(obj);\n\n\t\t// this._chooseMoreArray为传出去的数据\n\t\tthis._chooseMoreArray.push(item[this._optionValue]);\n\t\tthis.ngModelValue = this._chooseMoreArray; // 传出数据格式为数组\n\t\tthis.onChange(this._chooseMoreArray);\n\n\t\tthis.show = true;\n\t\tthis.setClassMap();\n\t}\n\n\t// 选中多少项li点击\n\tnumClick(e, item) {\n\t\tlet flag = false;\n\t\t// 阻止事件冒泡\n\t\te.stopPropagation();\n\n\t\t// 判断show是否为true\n\t\tif (!this.show) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断该项是否可点击\n\t\tif (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断是否点击过\n\t\tthis._chooseMoreArray.forEach((element, index) => {\n\t\t\tif (element === item[this._optionValue]) {\n\t\t\t\tflag = true;\n\t\t\t\tthis._chooseMoreArray.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\tif (flag) {\n\t\t\tthis.inputText--;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputText++;\n\t\tthis.show = true;\n\t\tthis._chooseMoreArray.push(item[this._optionValue]);\n\t\tthis.ngModelValue = this._chooseMoreArray; // 传出格式为数组\n\t\tthis.onChange(this._chooseMoreArray);\n\t}\n\n\t// 判断某一项是否存在于inputText中\n\tmoreIndex(item) {\n\t\tlet flag = false;\n\t\tthis._chooseMoreArray.forEach((element, index) => {\n\t\t\tif (element === item[this._optionValue]) {\n\t\t\t\tflag = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\treturn flag;\n\t}\n\n\t// 删除某一项\n\tdeleteMoreItem(e, item) {\n\t\te.stopPropagation();\n\t\tif (this._jdbDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputText.forEach((element, index) => {\n\t\t\tif (element[this._optionValue] === item[this._optionValue]) {\n\t\t\t\tthis.inputText.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tthis._chooseMoreArray.forEach((element, index) => {\n\t\t\tif (element === item[this._optionValue]) {\n\t\t\t\tthis._chooseMoreArray.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\tthis.ngModelValue = this._chooseMoreArray; // 传出格式为数组\n\t\tthis.onChange(this._chooseMoreArray);\n\t\tthis.setClassMap();\n\t}\n\n\t// 转换为boolean,即实现有这个字段就认为为true,没有即为false\n\ttoBoolean(value: boolean | string): boolean {\n\t\treturn value === '' || (value && value !== 'false');\n\t}\n\n\t// 计算某元素的offetTop\n\tgetTop(e) {\n\t\tlet offset = e.offsetTop;\n\t\tif (e.offsetParent != null) {\n\t\t\toffset += this.getTop(e.offsetParent);\n\t\t}\n\t\treturn offset;\n\t}\n\n\t// 计算某元素的scrollTop\n\tgetScrollTop(e) {\n\t\tlet offset = e.scrollTop;\n\t\tif (e.parentElement != null) {\n\t\t\toffset += this.getScrollTop(e.parentElement);\n\t\t}\n\t\treturn offset;\n\t}\n}\n","import { Component, OnInit, EventEmitter, TemplateRef, Input, Output, ElementRef, ContentChild, forwardRef, HostListener, ViewEncapsulation, AfterViewInit, Renderer2, ViewChild } from '@angular/core';\nimport { NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'app-jdb-plg-input',\n    template: `<span class=\"input-group-addon\" *ngIf=\"_addOnContentBefore\"> <ng-template [ngTemplateOutlet]=\"_addOnContentBefore\"> </ng-template> </span> <ng-template [ngIf]=\"_type=='text'\"> <div class=\"input-text-wrap\" [ngClass]=\"_inputWrapClass\"> <span class=\"input-prefix\" *ngIf=\"_prefixContent\"> <ng-template [ngTemplateOutlet]=\"_prefixContent\"> </ng-template> </span> <span class=\"input-content\"> <input (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" [disabled]=\"_disabled\" [readonly]=\"_readonly\" [attr.id]=\"jdbId\" [attr.type]=\"_type\" class=\"input\" [ngClass]=\"_classMap\" [attr.placeholder]=\"_placeHolder\" [(ngModel)]=\"jdbValue\" [style.width]=\"width\" maxlength=\"{{jdbMaxLength}}\" #input /> <span class=\"input-clear\" *ngIf=\"_clear && _value && _type=='text'\" (click)=\"clearTxt($event)\"> <i class=\"close-icon icon-empty\"></i> </span> </span> <span class=\"ant-input-suffix\" *ngIf=\"_suffixContent\"> <i class=\"iconfont icon-guanbi2fill\"></i> <ng-template [ngTemplateOutlet]=\"_suffixContent\"> </ng-template> </span> <div class=\"input-error-tip\" *ngIf=\"jdbError && _errorContent\" [style.width]=\"width\"> <i class=\"icon-message-error error-tip\"></i> <p class=\"input-error-content\"> <ng-template [ngTemplateOutlet]=\"_errorContent\"> </ng-template> </p> </div> </div> </ng-template> <span class=\"input-group-addon\" *ngIf=\"_addOnContentAfter\"> <ng-template [ngTemplateOutlet]=\"_addOnContentAfter\"> </ng-template> </span> <ng-template [ngIf]=\"_type=='textarea'\"> <div class=\"input-text-wrap\"> <textarea (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" (input)=\"textareaOnChange($event)\" [attr.id]=\"jdbId\" #inputTextarea [disabled]=\"_disabled\" [readonly]=\"_readonly\" type=\"textarea\" class=\"input input-textarea\" [ngClass]=\"_classMap\" [attr.placeholder]=\"jdbPlaceHolder\" [(ngModel)]=\"jdbValue\" maxlength=\"{{jdbMaxLength}}\" [style.width]=\"width\"></textarea> <span class=\"textarea-wc-tip\" [ngClass]=\"{'textarea-wc-tip-red': jdbValue&&jdbValue.length == jdbMaxLength}\" *ngIf=\"jdbMaxLength && !_disabled &&!_readonly\">{{(jdbValue&&jdbValue.length)||0}}/{{jdbMaxLength}}</span> </div> </ng-template>`,\n    // styleUrls: ['./jdb-plg-input.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => JdbPlgInputComponent),\n            multi: true\n        }\n    ],\n})\n\nexport class JdbPlgInputComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n    _value = '';\n    _type = 'text';\n    _placeHolder = '';\n    _size = 'default';\n    _disabled = false;\n    _readonly = false;\n    _error = false;\n    _classMap: any;\n    _inputWrapClass: Array<string> = [];\n    _clear = false;\n    _maxlength: number;\n    _autoPromptData: Array<any> = [];\n    _composing = false;\n    @Input() width = '300px';\n    // ngModel Access\n    onChange: (value: string) => void = () => null;\n    @ContentChild('jdbErrorContent') _errorContent: TemplateRef<any>;\n    @ContentChild('addContentBefore') _addOnContentBefore: TemplateRef<any>;\n    @ContentChild('addContentAfter') _addOnContentAfter: TemplateRef<any>;\n    @ContentChild('prefixContent') _prefixContent: TemplateRef<any>;\n    @ContentChild('suffixContent') _suffixContent: TemplateRef<any>;\n    @Output() jdbBlur: EventEmitter<MouseEvent> = new EventEmitter();\n    @Output() jdbFocus: EventEmitter<MouseEvent> = new EventEmitter();\n\n    @ViewChild('input') inputEl: ElementRef;\n    @ViewChild('clearBtn') clearBtnEl: ElementRef;\n\n    constructor(private render: Renderer2) {\n\n    }\n\n    ngOnInit() {\n        // this._inputWrapClass =[`input-text-wrap-${this._size}`];\n        if (this._prefixContent) {\n            this._inputWrapClass.push('prefix');\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.clearBtnEl) {\n            this.render.setStyle(this.clearBtnEl.nativeElement, 'top', this.inputEl.nativeElement.height / 2);\n        }\n    }\n\n    @HostListener('compositionstart', ['$event'])\n    compositionStart(e: CompositionEvent): void {\n        this._composing = true;\n    }\n\n    @HostListener('compositionend', ['$event'])\n    compositionEnd(e: CompositionEvent): void {\n        this._composing = false;\n        this.onChange(this._value);\n    }\n\n    @Input()\n    set jdbType(type: string) {\n        this._type = type;\n    }\n    get jdbType(): string {\n        return this._type;\n    }\n\n    @Input()\n    set jdbPlaceHolder(placeHolder: string) {\n        this._placeHolder = placeHolder;\n    }\n    get jdbPlaceHolder(): string {\n        return this._placeHolder;\n    }\n\n    @Input()\n    set jdbSize(size: string) {\n        this._size = { large: 'lg', small: 'sm' }[size];\n        this.setClassMap();\n    }\n    get jdbSize(): string {\n        return this._size;\n    }\n\n    @Input()\n    set jdbDisabled(disabled: boolean) {\n        this._disabled = this.toBoolean(disabled);\n        this.setClassMap();\n    }\n    get jdbDisabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set jdbReadonly(readonly: boolean) {\n        this._readonly = this.toBoolean(readonly);\n    }\n    get jdbReadonly(): boolean {\n        return this._readonly;\n    }\n\n    @Input()\n    set jdbValue(value: string) {\n        if ((this._value === value) || ((this._value == null) && (value == null))) {\n            return;\n        }\n        this._value = value;\n        if (!this._composing) {\n            this.onChange(value);\n        }\n    }\n    get jdbValue(): string {\n        return this._value || '';\n    }\n    @Input()\n    set jdbError(value: boolean) {\n        this._error = this.toBoolean(value);\n        this.setClassMap();\n    }\n    get jdbError(): boolean {\n        return this._error;\n    }\n    @Input()\n    set jdbClear(value: boolean) {\n        this._clear = this.toBoolean(value);\n    }\n    get jdbClear(): boolean {\n        return this._clear;\n    }\n\n    @Input()\n    set jdbMaxLength(value: number) {\n        this._maxlength = value;\n    }\n    get jdbMaxLength(): number {\n        return this._maxlength;\n    }\n\n    @Input()\n    set jdbPromptData(value: Array<any>) {\n        this._autoPromptData = value;\n    }\n    get jdbPromptData(): Array<any> {\n        return this._autoPromptData;\n    }\n    writeValue(value: string): void {\n        this._value = value;\n    }\n    registerOnChange(fn: (_: string) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n    }\n    _emitBlur($event) {\n        this.jdbBlur.emit($event);\n    }\n\n    _emitFocus($event) {\n        this.jdbFocus.emit($event);\n    }\n    textareaOnChange($event) {\n\n    }\n    setClassMap() {\n        this._classMap = {\n            [`input-${this._type}-${this._size}`]: true,\n            ['input-disabled']: this._disabled,\n            ['input-error']: this._error\n        };\n    }\n    clearTxt(e) {\n        e.stopPropagation();\n        this._value = '';\n        this.onChange('');\n    }\n\n    toBoolean(value: boolean | string): boolean {\n        return value === '' || (value && value !== 'false');\n    }\n}\n","export const keyCode = {\n    UP: 38,\n    DOWN: 40,\n    ENTER: 13\n\n}","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  Inject,\n  Renderer2,\n  AfterViewInit,\n  ViewChild,\n  forwardRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AutoCompleteResult } from './autocomplete.result';\nimport { keyCode } from './keycode';\n@Component({\n  selector: 'app-jdb-plg-autocomplete',\n  template: `<div class=\"autoprompt\"> <app-jdb-plg-input [jdbType]=\"'text'\" [jdbPlaceHolder]=\"jdbPlaceHolder\" [jdbClear]=\"true\" [(ngModel)]=\"_searchWord\" [width]=\"width\" (ngModelChange)=\"changeInput()\"> </app-jdb-plg-input> <ul #resultele [hidden]=\"!_listShow\" [style.width]=\"width\"> <li *ngFor=\"let item of searchResult;index as i\" [ngClass]=\"{'selected': activeIndex == i}\" (click)=\"selectedItem(item,i)\"> <p> {{item.text}} </p> </li> </ul> </div> <!-- <div class=\"autoprompt-mask\" [hidden]=\"!_listShow\" (click)=\"closePop($event)\"></div> -->`,\n  // styleUrls: ['./jdb-plg-autocomplete.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JdbPlgAutocompleteComponent),\n      multi: true\n    }\n  ]\n})\nexport class JdbPlgAutocompleteComponent implements OnInit, AfterViewInit, ControlValueAccessor, OnChanges {\n  _searchParam = 'key';    // 异步模式下，向后端传的搜索参数\n  _serverApi = '/';        // 异步模式下，接口URL\n  _searchWord = '';\n  searchResult: AutoCompleteResult[] = [];    // 存储搜索结果\n  _listShow = false;\n  activeIndex = 0;\n  selectOne: any;    // 存储选中数据\n  ngModelValue = '';\n  @ViewChild('resultele') resultEle: ElementRef;    // 盛放搜索结果的容器\n  @Input() jdbPlaceHolder = '';\n  @Input() width = '300px';\n  _dataSource = [];    // 同步模式下一次性传入搜索数据\n  @Input() dataKey = 'value';    // 自定义数据key的键值\n  @Input() dataVal = 'text';     // 自定义数据的value键值\n  @Input() jdbDataAsyn = false;    //  是否异步；默认同步处理\n  @Output() onSelected: EventEmitter<AutoCompleteResult> = new EventEmitter(); // 选中回调\n  onChange: (value: string) => void = () => null;\n  constructor(private el: ElementRef,\n              // @Inject('jdbPlgBaseApi') private jdbPlgBaseApi,\n              private render: Renderer2) { }\n  ngOnInit() {\n  }\n  ngAfterViewInit() {\n    this.render.listen(this.el.nativeElement, 'input', this.debounce(() => {\n      this.activeIndex = -1;\n      this.inputHandle();\n    }, 500, false));\n    // 处理搜索框点击事件\n    this.render.listen(this.el.nativeElement.querySelector('input[type=\"text\"]'), 'click', (evt) => {\n      this.activeIndex = -1;\n      if (!this._searchWord) {\n        this.searchResult = this.jdbDataSource;\n      } else {\n        this.searchResult = this.searchResult = this.jdbDataSource.filter((obj) => obj['text'].indexOf(this._searchWord) !== -1);\n      }\n      if (this.searchResult.length > 0) {\n        this._listShow = true;\n        setTimeout(_ => {\n          this.resetPopDirection(this.el.nativeElement);\n        }, 0);\n      }\n      evt.stopPropagation();\n    });\n    // 处理关闭搜索结果\n    this.render.listen('document', 'click', (evt) => {\n      this._listShow = false;\n    });\n    this.render.listen(this.el.nativeElement.querySelector('input[type=\"text\"]'), 'blur', () => {\n      if ( (this.selectOne && this._searchWord !== this.selectOne.text) || !this.selectOne ) {\n        this._searchWord = '';\n        this.ngModelValue = '';\n        this.selectOne = null;\n        this.onChange('');\n      }\n    });\n  }\n  ngOnChanges(simples: SimpleChanges) {\n  }\n  // 键盘事件\n  @HostListener('keydown', ['$event']) OnKeyDown(event: KeyboardEvent) {\n    switch (event.which) {\n      case keyCode.UP:\n        this.activeIndex--;\n        if (this.activeIndex < 0) {\n          this.activeIndex = this.searchResult.length - 1;\n        }\n        this.setSearchWord();\n        break;\n      case keyCode.DOWN:\n        this.activeIndex++;\n        if (this.activeIndex >= this.searchResult.length) {\n          this.activeIndex = 0;\n        }\n        this.setSearchWord();\n        break;\n      case keyCode.ENTER:\n        const item = <AutoCompleteResult>this.searchResult[this.activeIndex];\n        this.selectedItem(item, this.activeIndex);\n        break;\n      default:\n        this.activeIndex = -1;\n    }\n  }\n  // 粘贴事件\n  @HostListener('paste', ['$event']) OnPaste(event: Event) {\n    this.inputHandle();\n  }\n  // 处理input和paste事件\n  inputHandle() {\n    if (this._searchWord) {\n      if (this.jdbDataAsyn) { // 异步请求接口，返回数据\n        // this.popupList();\n      } else {    // 同步过滤处理\n        this.searchResult = this.jdbDataSource.filter((obj) => obj['text'].indexOf(this._searchWord) !== -1);\n        // if (this.searchResult.length > 0) {\n        //     this.selectOne = this.searchResult[this.activeIndex];\n        // }\n      }\n      // 显示结果\n      if (this.searchResult.length > 0) {\n        this._listShow = true;\n      } else {\n        this._listShow = false;\n      }\n      // 要先让搜索结果展示，才能获取到相关高度，处理显示位置\n      setTimeout(_ => {\n        this.resetPopDirection(this.el.nativeElement);\n      }, 0);\n    }\n  }\n  closePop(event) {\n    if (this.selectOne && this._searchWord && this._listShow) {\n      if (this._searchWord !== this.selectOne.text) {\n        this.ngModelValue = '';\n        this.onChange('');\n        this.selectOne = null;\n        this._searchWord = '';\n      } else {\n        this.onSelected.emit(this.selectOne.value);\n        this.ngModelValue = this.selectOne.value;\n        this.onChange(this.ngModelValue);\n      }\n    }\n    this._listShow = false;\n    // event.stopPropagation();\n  }\n  // 设置选中样式\n  setSelectClass(obj) {\n    if (obj) {\n      return this._searchWord === obj.text;\n    }\n    return;\n  }\n  // 设置文本框选中内容\n  setSearchWord() {\n    this.selectOne = <AutoCompleteResult>this.searchResult[this.activeIndex];\n    this._searchWord = this.selectOne.text;\n  }\n  // 选中单个条目\n  selectedItem(item, index) {\n    this.activeIndex = index;\n    this.selectOne = item;\n    this._searchWord = item.text;\n    this._listShow = false;\n    this.onSelected.emit(this.selectOne.value);\n    this.ngModelValue = this.selectOne.value;\n    this.onChange(this.ngModelValue);\n    event.stopPropagation();\n  }\n  // 查询接口\n  // popupList() {\n  //   this.searchResult = [];\n  //   this.jdbPlgBaseApi.post(this._serverApi,\n  //     { [this._searchParam]: this._searchWord }, false).subscribe(\n  //     (res) => {\n  //       if (+res.error.returnCode === 0) {\n  //         res.data = res.data.map((obj, index) => ({\n  //           value: obj[this.dataKey],\n  //           text: obj[this.dataVal]\n  //         }));\n  //         this.searchResult = <AutoCompleteResult[]>res.data;\n  //         this._listShow = true;\n  //         // if (this.searchResult.length > 0) {\n  //         //     this.selectOne = this.searchResult[this.activeIndex];\n  //         // }\n  //       }\n  //     });\n  // }\n  // 函数防抖\n  debounce(fn, wait, immediate) {\n    let timeout,\n      args,\n      context,\n      timestamp,\n      result;\n    const later = function () {\n      const last = new Date().getTime() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = fn.apply(context, args);\n          if (!timeout) {\n            context = args = null;\n          }\n        }\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = new Date().getTime();\n      const callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) {\n        result = fn.apply(context, args);\n        context = args = null;\n      }\n      return result;\n    };\n  }\n  // 设置弹出位置\n  resetPopDirection(node) {\n    const getOffsetTop = function (ele) {\n      let top = ele.offsetTop;\n      if (!ele.offsetParent) {\n        top += getOffsetTop(ele.offsetParent);\n      }\n      return top;\n    };\n    const getScrollTop = function (ele) {\n      let top = ele.scrollTop;\n      if (!ele.parentElement) {\n        top += getScrollTop(ele.parentElement);\n      }\n      return top;\n    };\n    const nodeTop = getOffsetTop(node),\n      clientHeight = document.documentElement.clientHeight || document.body.clientHeight,\n      scrollTop = getScrollTop(node.parentElement),\n      popHeight = this.resultEle.nativeElement.offsetHeight || 250,\n      inputHeight = node.querySelector('input[type=\"text\"]').offsetHeight;\n    // console.log('clientHeight:' + clientHeight + 'nodeTop:' + nodeTop + 'nodeHeight:' + nodeHeight + 'scrollTop:' + scrollTop);\n    const lastDirect = clientHeight - (nodeTop - scrollTop) - popHeight - inputHeight;\n    if (lastDirect <= 0) {\n      this.render.addClass(this.resultEle.nativeElement, 'pop_top');\n    } else {\n      this.render.removeClass(this.resultEle.nativeElement, 'pop_top');\n    }\n  }\n  // 清空文本框处理\n  changeInput() {\n    if (this._searchWord === '') {\n      this.ngModelValue = '';\n      this.onChange('');\n    }\n  }\n  @Input()\n  set jdbDataSource(value) {\n    this._dataSource = value;\n    if (!this.jdbDataAsyn && this._dataSource.length > 0) {\n      if (typeof this._dataSource[0] === 'string') {\n        this._dataSource = this._dataSource.map((val, index) => ({\n          value: val,\n          text: val\n        }));\n      } else if (typeof this._dataSource[0] === 'object' && (this.dataKey !== 'value' || this.dataVal !== 'text')) {\n        this._dataSource = this._dataSource.map((obj, index) => ({\n          value: obj[this.dataKey],\n          text: obj[this.dataVal]\n        }));\n      }\n      this.searchResult = this._dataSource;\n    }\n  }\n  get jdbDataSource() {\n    return this._dataSource;\n  }\n  @Input()\n  set jdbSearchParam(val) {\n    this._searchParam = val;\n  }\n  get jdbSearchParam() {\n    return this._searchParam;\n  }\n  @Input()\n  set jdbServerApi(val) {\n    this._serverApi = val;\n  }\n  get jdbServerApi() {\n    return this._serverApi;\n  }\n  writeValue(value: string): void {\n    this.ngModelValue = value;\n    if (this.ngModelValue === '') {\n      this._searchWord = '';\n    }\n  }\n  registerOnChange(fn: (_: string) => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n  }\n}","import { Injectable, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { JdbPlgToastComponent } from '../../components/jdb-plg-toast/jdb-plg-toast.component';\n\n@Injectable()\nexport class CommonMethodService {\n\n  vRef;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {\n  }\n\n  /*常用公共方法*/\n\n  /*验证手机号是否合法\n  * number 校验的手机号码*/\n  testPhoneNumber(number: string) {\n    const phoneReg = /^[1][0-9]{10}$/;\n    return phoneReg.test(number);\n  }\n\n  /*验证姓名是否合法\n   name 校验的姓名*/\n  testName(name: string) {\n    const nameReg = /^[\\u4E00-\\u9FA5·]{2,20}$/;\n    return nameReg.test(name);\n  }\n\n  /*验证代偿金额是否为最大1亿，最小一元，只可以两位小数\n  num单位为分*/\n  testRepayAmount(num) {\n    const nameReg = /^([1-9][0-9]{2,9}|10000000000)$/;\n    return nameReg.test(num);\n  }\n\n  /*数字格式化为千位分隔\n  num单位为分*/\n  numFormat(num) {\n    num = num / 100;\n    return num.toFixed(2).replace(/\\d{1,3}(?=(\\d{3})+(\\.\\d*)?$)/g, '$&,');\n  }\n\n  /**\n   * @method 将'yyyy-MM-dd~yyyy-MM-dd'格式，转化为startTime、endTime（10位时间戳）\n   * @param value 'yyyy-MM-dd~yyyy-MM-dd'格式字符串\n   */\n  toTimestamp(value) {\n    const timeObj = {};\n    if (value) {\n      const arrDate = value.split('~');\n      timeObj['startTime'] = new Date(arrDate[0]).getTime() / 1000;\n      timeObj['endTime'] = new Date(arrDate[1]).getTime() / 1000;\n    } else {\n      timeObj['startTime'] = '';\n      timeObj['endTime'] = '';\n    }\n    return timeObj;\n  }\n\n\n  /* 将时间戳转化为不同时间格式\n  * @param time必传 10位的时间戳\n  * @param type选传 默认'yyyy-MM-dd HH:mm:ss'格式  type为1 'yyyy-MM-dd HH:mm:ss'; type为2 'yyyy-MM-dd HH:mm'; type为3 'yyyy-MM-dd'; type为4 'yyyy-MM'; type为5 'yyyy';\n  */\n  toDate(time, type = 1) {\n    const myDate = new Date(time * 1000);\n    const year = myDate.getFullYear();\n    const month = this.add0(myDate.getMonth() + 1);\n    const day = this.add0(myDate.getDate());\n    const hour = this.add0(myDate.getHours());\n    const minute = this.add0(myDate.getMinutes());\n    const second = this.add0(myDate.getSeconds());\n    switch (type) {\n      case 1:\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n      case 2:\n        return `${year}-${month}-${day} ${hour}:${minute}`;\n      case 3:\n        return `${year}-${month}-${day}`;\n      case 4:\n        return `${year}-${month}`;\n      case 5:\n        return `${year}`;\n    }\n  }\n  add0(m) {\n    return m < 10 ? `0${+m}` : m;\n  }\n\n  /* \n    参数1: 当前日期的前/后几天，n<0是为当前日期的后几天，反之为当前日期的前几天,默认为0;\n    参数2: 拼接的符号，符号'-'(2018-07-16),符号'/'(2018/07/16),默认为'-';\n    参数3: 是否返回的是时间戳格式，默认是时间戳格式\n    返回值: n=0时，返回当前日期的数组，否则第一个元素为当前日期，第二个元素为目标日期。\n  */\n  getTarDate(n = 0, joinStr = '-', isTimeStamp = true) {\n    let date = new Date();\n    let tarYear, tarMonth, tarDay, curYear, curMonth, curDay, curDate, tarDate;\n    //获取当前年月日\n    curYear = date.getFullYear();\n    curMonth = date.getMonth() + 1;\n    curDay = date.getDate();\n    //获取当前前n天或后n天的年月日\n    date.setDate(date.getDate() - n);\n    tarYear = date.getFullYear();\n    tarMonth = date.getMonth() + 1;\n    tarDay = date.getDate();\n    curDate = curYear + joinStr + (curMonth < 10 ? ('0' + curMonth) : curMonth) + joinStr + (curDay < 10 ? ('0' + curDay) : curDay);\n    tarDate = tarYear + joinStr + (tarMonth < 10 ? ('0' + tarMonth) : tarMonth) + joinStr + (tarDay < 10 ? ('0' + tarDay) : tarDay);\n    if (!isTimeStamp) {\n      return n === 0 ? [curDate] : [curDate, tarDate];\n    }\n    if (joinStr !== '-') {\n      let reg = new RegExp(joinStr, \"g\");\n      curDate = curDate.replace(reg, '-');\n      tarDate = tarDate.replace(reg, '-');\n    }\n    return n === 0 ? [new Date(curDate + ' 00:00:00').getTime()] : [new Date(curDate + ' 00:00:00').getTime(), new Date(tarDate + ' 23:59:59').getTime()];\n  }\n\n\n  setRootViewContainerRef(vRef) {\n    this.vRef = vRef;\n  }\n\n  toast(msg, delayTime = 3000) {\n    // 通过ComponentFactoryResolver 创建出动态组件的实例\n    const childComponent = this.componentFactoryResolver.resolveComponentFactory(JdbPlgToastComponent);\n    const comInstance = this.vRef.createComponent(childComponent);\n    comInstance.instance.msg = msg;\n    comInstance.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      comInstance.destroy();\n    }, delayTime);\n  }\n  //方式丢失精度四种算法\n  //乘法\n  accMul(arg1, arg2) {\n    let m = 0, s1 = arg1.toString(), s2 = arg2.toString();\n    try { m += s1.split(\".\")[1].length } catch (e) { }\n    try { m += s2.split(\".\")[1].length } catch (e) { }\n    return Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\")) / Math.pow(10, m)\n  }\n  //除法\n  accDiv(arg1, arg2) {\n    let t1 = 0, t2 = 0, r1, r2;\n    try { t1 = arg1.toString().split(\".\")[1].length } catch (e) { }\n    try { t2 = arg2.toString().split(\".\")[1].length } catch (e) { }\n    r1 = Number(arg1.toString().replace(\".\", \"\"))\n    r2 = Number(arg2.toString().replace(\".\", \"\"))\n    return this.accMul((r1 / r2), Math.pow(10, t2 - t1));\n  }\n  //加法\n  accAdd(arg1, arg2) {\n    let r1, r2, m;\n    try { r1 = arg1.toString().split(\".\")[1].length } catch (e) { r1 = 0 }\n    try { r2 = arg2.toString().split(\".\")[1].length } catch (e) { r2 = 0 }\n    m = Math.pow(10, Math.max(r1, r2))\n    return (arg1 * m + arg2 * m) / m\n  }\n  //减法\n  accSubtr(arg1, arg2) {\n    let r1, r2, m, n;\n    try { r1 = arg1.toString().split(\".\")[1].length } catch (e) { r1 = 0 }\n    try { r2 = arg2.toString().split(\".\")[1].length } catch (e) { r2 = 0 }\n    m = Math.pow(10, Math.max(r1, r2));\n    n = (r1 >= r2) ? r1 : r2;\n    return ((arg1 * m - arg2 * m) / m).toFixed(n);\n  }\n\n}\n","'use strict';\nfunction isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n}\nfunction isObject(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Object]\";\n}\n\nfunction isDate(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Date]\";\n}\n\nfunction toJson(value) {\n    var jsonObj = {};\n    try {\n        jsonObj = JSON.parse(value);\n    } catch (e) {\n        console.log('to json parse error');\n    }\n    return jsonObj;\n}\nfunction serializeValue(v) {\n    if (isObject(v)) {\n        return isDate(v) ? v.toISOString() : toJson(v);\n    }\n    return v;\n}\nfunction encodeUriQuery(val, pctEncodeSpaces?) {\n    return encodeURIComponent(val).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\nexport function jQueryLikeParamSerializer(params) {\n    if (!params) return '';\n    var parts = [];\n    serialize(params, '', true);\n    return parts.join('&');\n\n    function serialize(toSerialize: any, prefix: any, topLevel?: any) {\n        if (isArray(toSerialize)) {\n            toSerialize.forEach((value, index) => {\n                serialize(value, prefix + '[' + (isObject(value) ? index : '') + ']');\n            });\n        } else if (isObject(toSerialize) && !isDate(toSerialize)) {\n            for (let key in toSerialize) {\n                serialize(toSerialize[key], prefix +\n                    (topLevel ? '' : '.') +\n                    key +\n                    (topLevel ? '' : ''));\n\n                // serialize(toSerialize[key], prefix +\n                //     (topLevel ? '' : '[') +\n                //     key +\n                //     (topLevel ? '' : ']'));\n            }\n        } else {\n            parts.push(encodeUriQuery(prefix) + '=' +\n                (toSerialize == null ? '' : encodeUriQuery(serializeValue(toSerialize))));\n        }\n    }\n}\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst propIsEnumerable = Object.prototype.propertyIsEnumerable;\nexport function toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n  return Object(val);\n}\nexport function objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  const to = toObject(target);\n  let symbols: any;\n  for (let s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (const key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n    if ((<any>Object).getOwnPropertySymbols) {\n      symbols = (<any>Object).getOwnPropertySymbols(from);\n      for (let i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class SendStatisticService {\n    private emitStatistic = new Subject();\n    StatisticOutPut$ = this.emitStatistic.asObservable();\n    constructor() {\n\n    }\n\n    emitStatisticData(value) {\n        if (value.length !== 0) {\n            this.emitStatistic.next(value);\n        }\n    }\n}","import { CommonMethodService } from './common-method.service';\n//import { Cookie } from 'ng2-cookies';\n// let Cookie = require('ng2-cookies');\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import 'rxjs/add/observable/throw';\nimport { filter, catchError } from 'rxjs/operators';\n// import 'rxjs/add/operator/filter';\n// import 'rxjs/add/operator/catch';\nimport { jQueryLikeParamSerializer } from './query-string';\nimport { objectAssign } from './object-assign';\n\nimport { StatisticData } from '../../config/statistic.config';\nimport { SendStatisticService } from './send-statistic.service';\n\nlet statisticList = [];\n@Injectable()\nexport class JdbPlgBaseService {\n  vRef;\n  timer: any = null;\n  //收集的每一个接口的数据结构\n  newStatisticData: StatisticData = {\n    from: '',\n    operator: '',\n    memberId: '',\n    service: {\n      apiException: {\n        requestTime: null,\n        url: '',\n        params: null,\n        resCode: null,\n        resMessage: '',\n        errorMessage: ''\n      }\n    }\n  };\n  //收集的每一个接口的公共信息\n  baseObj: any = {\n    from: null,\n    operator: null,\n    memberId: null,\n  };\n\n  constructor(\n    private http: HttpClient,\n    private commonService: CommonMethodService,\n    private sendStatisticService: SendStatisticService\n  ) {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    //轮询去发送数据，并清空队列\n    this.timer = setInterval(() => {\n      this.sendStatisticService.emitStatisticData(statisticList);\n      statisticList = [];\n    }, 10000);\n  }\n\n  setRootViewContainerRef(vRef) {\n    this.vRef = vRef;\n    this.commonService.setRootViewContainerRef(vRef);\n  }\n\n  /**\n   *\n   * @param apiName\n   * @param dataObj\n   * @param isIntercept 是否拦截处理returnCode != 0 的情况\n   */\n  post(apiName, dataObj, options) {\n    let time = new Date().getTime();\n    let loginToken;\n    let loginWay;\n    let orgUid;\n    // 系统来源\n    let from;\n    // 获取接口的apiException\n    this.newStatisticData.service.apiException = {\n      requestTime: null,\n      url: '',\n      params: null,\n      resCode: null,\n      resMessage: '',\n      errorMessage: ''\n    };\n    let apiException = JSON.parse(JSON.stringify(this.newStatisticData.service.apiException));\n    this.newStatisticData.service.apiException = apiException;\n    if (options && options.tokenObj) {\n      loginToken = localStorage.getItem(options.tokenObj.loginToken);\n      loginWay = localStorage.getItem(options.tokenObj.loginWay);\n      orgUid = localStorage.getItem(options.tokenObj.orgUid);\n      from = localStorage.getItem(options.tokenObj.from);\n    }\n    let loginObj: any = {};\n    let data: any = {};\n    let currentRoute = location.hash.split('/')[1];\n    if (loginToken) {\n      if (orgUid) {\n        loginObj = {\n          'loginToken': loginToken,\n          'loginWay': loginWay,\n          'orgUid': orgUid,\n          'jdbDhTraceId': time + '-' + parseInt(Math.random() * (100000 + 1) + 1 + '')\n        };\n      } else {\n        loginObj = {\n          'loginToken': loginToken,\n          'loginWay': loginWay,\n          'jdbDhTraceId': time + '-' + parseInt(Math.random() * (100000 + 1) + 1 + '')\n        };\n      }\n      data = objectAssign({}, loginObj, dataObj);\n    } else {\n      data = objectAssign({}, dataObj);\n    }\n    // 請求參數\n    apiException.params = data;\n    data = jQueryLikeParamSerializer(data);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' });\n    const requestoptions = {\n      headers: headers\n    };\n    let reqUrl = apiName;\n    //统计数据添加from和operator字段\n    this.baseObj.from = from;\n    this.baseObj.operator = localStorage.getItem('nickName');\n    this.baseObj.memberId = localStorage.getItem('memberId');\n    //统计数据添加请求url\n    apiException.url = reqUrl;\n    return this.http.post(reqUrl, data || {}, requestoptions)\n      .pipe(filter((res: any) => {\n        // 根据joinTraceId是否为true 判断是否需要拼接日志号 （目前只有电催系统需要）\n        if ( currentRoute != 'login' && options && options.joinTraceId) {\n          res.error.returnUserMessage = res.error.returnUserMessage + '<br/>(日志号:' + loginObj.jdbDhTraceId + ')';\n        }\n        const endTime = new Date().getTime();\n        //统计接口请求时长\n        apiException.requestTime = endTime - time;\n        //校验接口返回的数据结构格式\n        if (!(res.hasOwnProperty('data') && res.hasOwnProperty('error'))) {\n          this.commonService.toast('系统接口格式错误！');\n          options && options.reset && options.reset();\n          return false;\n        }\n        if (options.fns && options.fns.length != 0) {\n          let len = options.fns.length;\n          for (let i = 0; i < len; i++) {\n            let fn = options.fns[i];\n            if (res.error && res.error.returnCode * 1 === fn.returnCode && currentRoute != 'login') {\n              fn.callback();\n            }\n          }\n        }\n        if (res.error && res.error.returnCode * 1 == 0) {\n          //统计数据添加returnCode，returnUserMessage信息\n          apiException.resCode = res.error.returnCode;\n          apiException.resMessage = res.error.returnUserMessage;\n          //拷贝公共信息\n          this.newStatisticData = Object.assign(this.newStatisticData, this.baseObj);\n          //去除logDataApi、loginApi、qrcodeApi三个接口\n          if (options && !options.noLog) {\n            statisticList.push(this.newStatisticData);\n          }\n          return true;\n        }\n        // 统计数据添加returnCode，returnUserMessage信息\n        apiException.resCode = res.error.returnCode;\n        apiException.resMessage = res.error.returnUserMessage;\n        this.newStatisticData = Object.assign(this.newStatisticData, this.baseObj);\n        if (options && !options.noLog ) {\n          statisticList.push(this.newStatisticData);\n        }\n        //兼容登录组件中qrcodeApi和loginApi两个接口老的写法\n        if (typeof (options) === 'boolean') {\n          if (options) {\n            this.commonService.toast(res && res.error && res.error.returnUserMessage);\n            return false;\n          } else {\n            return true;\n          }\n        }\n        //是否拦截处理\n        if (options.isIntercept) {\n          this.commonService.toast(res && res.error && res.error.returnUserMessage);\n          return false;\n        } else {\n          return true;\n        }\n      }))\n      .pipe(catchError((error: any) => {\n        // 统计错误信息\n        apiException.errorMessage = error;\n        this.newStatisticData = Object.assign(this.newStatisticData, this.baseObj);\n        if (options && !options.noLog ) {\n          statisticList.push(this.newStatisticData);\n        }\n        return Observable.throw(error || 'Server error');\n      }));\n  }\n\n\n\n  stamp2string(stamp) {\n    if (stamp) {\n      let date = new Date(stamp).toJSON();\n      return date.split('T')[0];\n    }\n    return null;\n  }\n\n  download(apiName, params) {\n    // let cookieStr = Cookie.get('loginInfo');\n    let cookieObj: any = {};\n    let cookieData: any = {};\n    // if (cookieStr) {\n    //   try {\n    //     cookieObj = JSON.parse(cookieStr);\n    //     cookieData = {\n    //       loginToken: cookieObj.loginToken,\n    //       employeeId: cookieObj.empId\n    //     };\n    //   }\n    //   catch (e) {\n    //     console.log('parse cookie error...');\n    //   }\n    // }\n\n    let paramsObj = objectAssign({}, cookieData, params);\n    let url = apiName + '?';\n    for (let key in paramsObj) {\n      if (paramsObj[key]) {\n        url += key + '=' + encodeURIComponent(paramsObj[key]) + '&';\n      }\n    }\n    window.location.href = url;\n  }\n\n  getPicSize(file) {\n    let arr = {};\n    let reader = new FileReader();\n    reader.onload = function (e: any) {\n      let data = e.target.result;\n      //加载图片获取图片真实宽度和高度\n      let image = new Image();\n      image.onload = function () {\n        let width = image.width;\n        let height = image.height;\n        arr = {\n          height: height,\n          width: width\n        };\n        return arr;\n      };\n      image.src = data;\n    };\n    reader.readAsDataURL(file);\n  }\n}\n","import { Injectable, ComponentFactoryResolver } from '@angular/core';\n@Injectable()\nexport class FillTableService {\n    constructor() {\n    }\n    /*\n        lines:number  表格展示的行数\n        lists:Array<any>  异步获取的数据\n        flag:boolean  是否在空白行栏展示操作按钮,默认取unShowOpt字段\n    */\n    fillTable(lines: number, lists:Array<any>, flag?:boolean) {\n        lines = lines || 10;\n        lists = lists || [];\n        flag = flag || true;\n        let aLength = lists.length;\n        let mLength = lines - aLength;\n        let fillObj = {unShowOpt:flag};\n        let keys;\n        if (aLength !== 0) {\n            lists.forEach(element => {\n                element.unShowOpt = !flag;\n            });\n            keys = Object.keys(lists[0]);\n            if (keys.length !== 0) {\n                keys.forEach(element => {\n                    if(element !== \"unShowOpt\"){\n                        fillObj[element] = Object.prototype.toString.call(lists[0][element]) == \"[object Array]\" ? [] : '';\n                    }\n                });\n            }\n        }\n        if (aLength !== 0 && mLength>0) {\n            for(let i=0;i<mLength;i++){\n                lists.push(fillObj);\n            }\n        }\n        return lists;\n    }\n}\n","import { Injectable, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Type, ViewContainerRef } from '@angular/core';\nimport { JdbPlgNewDialogComponent } from '../../components/jdb-plg-new-dialog/jdb-plg-new-dialog.component';\n\nexport interface Options {\n    /**\n     * 自定义父容器类，可选\n     */\n    customClass?: string;\n    /**\n     * 自定义遮罩类，可选\n     */\n    maskClass?: string;\n    /**\n     * 自定义模态框主体样式，可选\n     */\n    bodyStyle?: any;\n    /**\n     * 控制模态框显示/隐藏\n     * true隐藏 fasle显示\n     * 可选\n     */\n    visible?: boolean;\n    /**\n     * 弹框标题，可选\n     */\n    title?: string;\n\n    /**\n     * 是否显示右上角关闭按钮，默认显示\n     * true隐藏 false不显示\n     * 可选\n     */\n    closeable?: boolean;\n    /**\n     * 模态框内容模板，必选\n     */\n    component?: Type<any>;\n    /**\n     * 默认内容为文本\n     * 组件模板component和文本模板同时配置\n     * 优先显示组件模板\n     */\n    text?:string;\n    /**\n     * 当默认内容为文本时，设置文本的类名\n    */\n    class?:string;\n    /**\n     * 当默认内容为文本时，设置文本的样式\n     * class和style同时配置\n     * 优先显示style\n    */\n    style?:Object;\n    /**\n     * 模板参数\n     */\n    componentParams?:Object;\n    /**\n     * 模态框宽度\n     * 默认400px\n     */\n    width?: number;\n    /**\n     * 是否显示/隐藏底部按钮，默认显示\n     * true显示 false隐藏\n     */\n    footer?: boolean;\n    /**\n     * 是否是确认模态框，默认不是\n     * true是 false不是\n     */\n    isConfirm?: boolean;\n    /**\n     * 确认按钮文案\n     */\n    okText?: string;\n    /**\n     * 取消按钮文案\n     */\n    cancelText?: string;\n    /**\n     * 自定义弹框关闭类型，默认为mask\n     * mask:点击除模态框区域以外的位置关闭模态框\n     * custom:自主触发关闭操作\n     * 可选\n     */\n    closeType?: string;\n    /**\n     * 视图容器\n     * 必选\n     */\n    container:ViewContainerRef;\n    /**\n     * 监听右上角关闭事件，默认为关闭模态框，没有额外的动作\n     * 可选\n     */\n    onClose?: () => void;\n    /**\n     * 监听确认事件，默认为关闭模态框，没有额外的动作\n     * 可选\n     */\n    onOk?: () => void;\n    /**\n     * 监听取消事件，默认为关闭模态框，没有额外的动作\n     * 可选\n     */\n    onCancel?: () => void;\n\n}\n\n@Injectable()\nexport class JdbModalService {\n    componentRef: ComponentRef<JdbPlgNewDialogComponent>;\n    _componentRefList = [];\n    _options: Options = {\n        customClass: '',\n        maskClass: '',\n        bodyStyle: null,\n        visible: false,\n        title: '',\n        closeable: true,\n        component: null,\n        text:'',\n        componentParams:{},\n        width: null,\n        footer: true,\n        container:null,\n        isConfirm: false,\n        okText: '',\n        cancelText: '',\n        class:'',\n        style:null,\n        onClose: () => {\n            this.destroy();\n        },\n        onOk: () => {\n            this.destroy();\n        },\n        onCancel: () => {\n            this.destroy();\n        }\n    }\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) { \n\n\n    }\n\n    //动态创建模态框,返回模态框实例\n    create(options: Options): ComponentRef<JdbPlgNewDialogComponent> {\n        this._options = {\n            customClass: '',\n            maskClass: '',\n            bodyStyle: null,\n            visible: false,\n            title: '',\n            closeable: true,\n            component: null,\n            text:'',\n            componentParams:{},\n            width: null,\n            footer: true,\n            container:null,\n            isConfirm: false,\n            okText: '',\n            cancelText: '',\n            class:'',\n            style:null,\n            onClose: () => {\n                this.destroy();\n            },\n            onOk: () => {\n                this.destroy();\n            },\n            onCancel: () => {\n                this.destroy();\n            }\n        }\n        let componentFactory = this.componentFactoryResolver.resolveComponentFactory(JdbPlgNewDialogComponent);\n        let componentRef = options.container.createComponent(componentFactory);\n        this._componentRefList.push(componentRef);\n        //assign配置\n        if (options) {\n            Object.assign(this._options, options);\n        }\n        this.assignProps(componentRef);\n        //获取组件实例的根节点并append到body上\n        window.document.body.appendChild((componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement);\n        return componentRef;\n    }\n\n    //模态框实例上添加属性\n    assignProps(componentRef: ComponentRef<JdbPlgNewDialogComponent>): void {\n        let _options = this._options;\n        let ins = componentRef.instance;\n        ins.visible = _options.visible || true;\n        ins._title = _options.title || '提示';\n        ins._width = _options.width ? `${_options.width}px` : '400px';\n        ins._state = 'showM';\n        ins._contentTpl = _options.component;\n        ins._componentParams = _options.componentParams;\n        ins._customClass = _options.customClass;\n        ins._maskClass = _options.maskClass;\n        ins._isConfirm = _options.isConfirm;\n        ins._okText = _options.okText || '确认';\n        ins._cancelText = _options.cancelText || '取消';\n        ins._footer = _options.footer;\n        ins._closeable = _options.closeable;\n        ins._closeType = _options.closeType || 'mask';\n        ins._text = _options.text || 'hello';\n        ins._class = _options.class || 'defaultTextClass';\n        ins._style = _options.style;\n        ins.onClose.subscribe((e) => {\n            _options.onClose();\n        })\n        ins.onOk.subscribe((e) => {\n            _options.onOk();\n        })\n        ins.onCancel.subscribe((e) => {\n            _options.onCancel();\n        })\n    }\n\n    //销毁模态框\n    destroy(): void {\n        let len = this._componentRefList.length-1;\n        if(this._componentRefList[len]){\n            this._componentRefList[len].destroy();\n        }\n        this._componentRefList.pop();\n    }\n\n    //triggerOk\n    triggerOk():void{\n        this._options.onOk();\n    }\n\n    //triggerClose\n    triggerClose():void{\n        this._options.onClose();\n    }\n\n    //triggerCancel\n    triggerCancel():void{\n        this._options.onCancel();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-table-error',\n  template: `<div class=\"jdb-plg-table-error\"> {{tableErrorText}} </div>`,\n  // styleUrls: ['./jdb-plg-table-error.component.scss']\n})\nexport class JdbPlgTableErrorComponent implements OnInit {\n\n  /*\n    功能：实现表格报错文案水平居中\n  */\n\n  @Input() tableErrorText = '暂无数据';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe,PipeTransform } from '@angular/core';\n\n@Pipe({name:'provinceReformPipe'})\nexport class ProvinceReformPipe implements PipeTransform{\n    transform(val:any):any{\n        if(val.length === 0){\n            return '';\n        }\n        return val.join('、');\n    }\n}","import { Pipe,PipeTransform } from '@angular/core';\n\n@Pipe({name:'amountReformPipe'})\nexport class AmountReformPipe implements PipeTransform{\n    transform(val:any):string{\n        if(val === 0){\n            return '0.00';\n        }\n        if(!val){\n            return '';\n        }\n        return (val/100).toFixed(2);\n    }\n}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-timeline-item',\n  template: `<div class=\"timeline-item\"> <div class=\"timeline-item-tail\" [ngClass]=\"{'timeline-item-tail-last': isLast}\"></div> <div class=\"timeline-item-circle\"></div> <div class=\"timeline-item-content\"> <div class=\"timeline-cardBox\" [ngStyle]=\"{'width': cardBoxWidth,'background': cardBgc}\"> <div class=\"timeline-arrow\"> <em></em> <span [ngStyle]=\"{'border-right-color': cardBgc}\"></span> </div> <ng-content></ng-content> </div> <p [ngStyle]=\"{'width': cardBoxWidth}\" class=\"timeline-buttom_time\" *ngIf=\"optTime\">{{optTime*1000 | date: \"y-MM-dd HH:mm:ss\"}}</p> </div> </div>`,\n  // styleUrls: ['./jdb-plg-timeline-item.component.scss']\n})\nexport class JdbPlgTimelineItemComponent implements OnInit {\n\n  constructor() { }\n\n  isLast: boolean;\n  optTime = 0;\n  @Input() cardBoxWidth;\n  @Input() cardBgc;\n\n  @Input()\n  get timeNum() {\n    return this.optTime;\n  }\n  set timeNum(time) {\n    if (!time) {\n      time = 0;\n    }\n    this.optTime = time;\n  }\n  @Input()\n  get lastItem() {\n    return this.isLast;\n  }\n  set lastItem(item) {\n    this.isLast = item;\n  }\n  ngOnInit() {\n  }\n\n}\n","import {Component, forwardRef, HostListener, Input, OnInit} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nexport type JdbSwitchSizeType = 'default' | 'small';\n\n@Component({\n  selector: 'app-jdb-plg-switch',\n  template: `<span [ngClass]=\"outBoxClass\"> <span class=\"inner-content\"> <ng-container *ngIf=\"checked\"> {{jdbCheckedText}} </ng-container> <ng-container *ngIf=\"!checked\"> {{jdbUncheckedText}} </ng-container> </span> </span> `,\n  // styleUrls: ['./jdb-plg-switch.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JdbPlgSwitchComponent),\n      multi: true\n    }\n  ]\n})\nexport class JdbPlgSwitchComponent implements OnInit, ControlValueAccessor {\n\n  @Input()\n  set jdbCheckedText(value: string) {\n    this._jdbCheckedText = value;\n  }\n\n  get jdbCheckedText(): string {\n    return this._jdbCheckedText;\n  }\n\n  @Input()\n  set jdbUncheckedText(value: string) {\n    this._jdbUncheckedText = value;\n  }\n\n  get jdbUncheckedText(): string {\n    return this._jdbUncheckedText;\n  }\n\n  @Input()\n  set jdbLoading(value: boolean) {\n    this._jdbLoading = Boolean(value);\n    this.setClassMap();\n  }\n\n  get jdbLoading(): boolean {\n    return this._jdbLoading;\n  }\n\n  @Input()\n  set jdbDisabled(value: boolean) {\n    this._jdbDisabled = Boolean(value);\n    this.setClassMap();\n  }\n\n  get jdbDisabled(): boolean {\n    return this._jdbDisabled;\n  }\n\n  @Input()\n  set jdbSize(value: JdbSwitchSizeType) {\n    this._jdbSize = value;\n    this.setClassMap();\n  }\n\n  get jdbSize(): JdbSwitchSizeType {\n    return this._jdbSize;\n  }\n\n  @Input()\n  set jdbControl(value: boolean) {\n    this._jdbControl = Boolean(value);\n  }\n\n  get jdbControl(): boolean {\n    return this._jdbControl;\n  }\n\n  outBoxClass: object;  // 外层容器class\n  checked = false; // 是否打开。默认关闭\n  prefixCls = 'jdb-switch';  // class前缀\n\n\n  private _jdbCheckedText: string;  // 打开时展示的文字\n  private _jdbUncheckedText: string;  // 关闭时展示的文字\n  private _jdbLoading = false;  // 是否显示加载圈\n  private _jdbDisabled = false;  // 是否禁用\n  private _jdbControl = false;  // 是否完全控制\n  private _jdbSize: JdbSwitchSizeType = 'default';  // 尺寸\n\n  onChange: (value: boolean) => void = () => null;\n  onTouched: () => void = () => null;\n\n  @HostListener('click', ['$event'])\n  onClick(ev: MouseEvent): void {\n    if (!this.jdbDisabled && !this.jdbLoading && !this.jdbControl) {\n      this.updateSwitchStatus(!this.checked, true);\n    }\n  }\n\n  /**\n   * 更新开关状态\n   * @param {boolean} value\n   * @param {boolean} isEmit\n   */\n  updateSwitchStatus(value: boolean, isEmit: boolean): void {\n    if (this.checked === value) {\n      return;\n    }\n    this.checked = value;\n    this.setClassMap();\n    if (isEmit) {\n      this.onChange(this.checked);\n    }\n  }\n\n  setClassMap(): void {\n    this.outBoxClass = {\n      [this.prefixCls]: true,\n      [`${this.prefixCls}-checked`]: this.checked,\n      [`${this.prefixCls}-loading`]: this.jdbLoading,\n      [`${this.prefixCls}-disabled`]: this.jdbDisabled,\n      [`${this.prefixCls}-small`]: this.jdbSize === 'small'\n    };\n  }\n\n  // 实现ControlValueAccessor接口方法\n  writeValue(value: boolean): void {\n    this.updateSwitchStatus(value, false);\n  }\n\n  registerOnChange(fn: (_: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.jdbDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    this.setClassMap();\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JdbPlgToastComponent } from './components/jdb-plg-toast/jdb-plg-toast.component';\nimport { JdbTabComponent } from './components/jdb-plg-tab/jdb-tab.component';\nimport { ShowPictureComponent } from './components/show-picture/show-picture.component';\nimport { PictureViewerComponent } from './components/picture-viewer/picture-viewer.component';\nimport { DragDirective } from './directive/drag.directive';\nimport { JdbPlgPaginationComponent } from './components/jdb-plg-pagination/jdb-plg-pagination.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JdbPlgButtonComponent } from './components/jdb-plg-button/jdb-plg-button.component';\nimport { JdbPlgDialogComponent } from './components/jdb-plg-dialog/jdb-plg-dialog.component';\nimport { JdbPlgNewDialogComponent } from './components/jdb-plg-new-dialog/jdb-plg-new-dialog.component';\n\nimport { OnlyNumberDirective } from './directive/only-number.directive';\nimport { WatermarkDirective } from './directive/watermark.directive';\nimport { JdbPlgSelectComponent } from './components/jdb-plg-select/jdb-plg-select.component';\nimport { JdbPlgInputComponent } from './components/jdb-plg-input/jdb-plg-input.component';\n// import { JdbPlgAutocompleteDirective } from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.directive';\nimport { JdbPlgAutocompleteComponent } from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.component';\nimport { JdbPlgBaseService } from './services/jdb-plg-base/jdb-plg-base.service';\nimport { FillTableService } from './services/jdb-plg-base/fill-table.service';\nimport { CommonMethodService } from './services/jdb-plg-base/common-method.service';\nimport { SendStatisticService } from './services/jdb-plg-base/send-statistic.service';\nimport { JdbModalService } from './services/jdb-plg-base/jdb-modal.service';\n\nimport { JdbPlgTableErrorComponent } from './components/jdb-plg-table-error/jdb-plg-table-error.component';\nimport { ProvinceReformPipe } from './pipe/province-reform.pipe';\nimport { AmountReformPipe } from './pipe/amount-reform.pipe';\nimport { JdbPlgTimelineItemComponent } from './components/jdb-plg-timeline-item/jdb-plg-timeline-item.component';\nimport { JdbPlgSwitchComponent } from './components/jdb-plg-switch/jdb-plg-switch.component';\nimport { from } from 'rxjs';\n\nconst MDL_MODULES = [\n  ShowPictureComponent,\n  PictureViewerComponent,\n  DragDirective,\n  WatermarkDirective,\n  JdbPlgPaginationComponent,\n  JdbPlgButtonComponent,\n  JdbPlgDialogComponent,\n  JdbPlgNewDialogComponent,\n  JdbPlgSelectComponent,\n  JdbPlgInputComponent,\n  JdbPlgTimelineItemComponent,\n  // JdbPlgAutocompleteDirective,\n  JdbPlgAutocompleteComponent,\n  JdbTabComponent,\n  JdbPlgTableErrorComponent,\n  ProvinceReformPipe,\n  AmountReformPipe,\n  JdbPlgSwitchComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: MDL_MODULES,\n  declarations: [\n    JdbPlgToastComponent,\n    JdbTabComponent,\n    ShowPictureComponent,\n    PictureViewerComponent,\n    DragDirective,\n    JdbPlgPaginationComponent,\n    OnlyNumberDirective,\n    WatermarkDirective,\n    JdbPlgSelectComponent,\n    JdbPlgButtonComponent,\n    JdbPlgDialogComponent,\n    JdbPlgNewDialogComponent,\n    JdbPlgInputComponent,\n    JdbPlgTimelineItemComponent,\n    // JdbPlgAutocompleteDirective,\n    JdbPlgAutocompleteComponent,\n    JdbPlgTableErrorComponent,\n    ProvinceReformPipe,\n    AmountReformPipe,\n    JdbPlgSwitchComponent,\n  ],\n  providers: [JdbPlgBaseService, CommonMethodService, FillTableService, SendStatisticService, JdbModalService],\n  entryComponents: [JdbPlgToastComponent,JdbPlgNewDialogComponent,JdbPlgDialogComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n\n})\nexport class JdbPlgUiModule {\n}\n\nexport { JdbPlgBaseService } from './services/jdb-plg-base/jdb-plg-base.service';\nexport { FillTableService } from './services/jdb-plg-base/fill-table.service';\n\nexport { CommonMethodService } from './services/jdb-plg-base/common-method.service';\n\nexport { SendStatisticService } from './services/jdb-plg-base/send-statistic.service';\nexport { JdbModalService } from './services/jdb-plg-base/jdb-modal.service';\nexport { jQueryLikeParamSerializer } from './services/jdb-plg-base/query-string';\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","JdbPlgToastComponent","Component","selector","template","Input","componentFactoryResolver","_injector","EventEmitter","totalTip","isShow","JdbTabComponent","ChildComponent","attrs","title","comId","isCloseFlag","tabIdComMap","childComponent","resolveComponentFactory","comInstance","target","createComponent","keys","items","push","theme","name","style","height","borderLength","forEach","value","instance","tabComs","setOneComHide","curTabIndex","tabSubs","subscribe","_this","onTopComMsg","emit","index","com","tabChange","tabIndex","location","nativeElement","display","setOneComShow","onTabChange","tabRefresh","destroy","splice","onTabRemove","key","id","removeTab","clear","ComponentFactoryResolver","Injector","ViewChild","read","ViewContainerRef","Output","ShowPictureComponent","update","status","renderer","num","degnum","PictureViewerComponent","_jdbMaster","toBoolean","_jdbClear","current","pictureList","elem","imgBox","children","element","resetPosition","imgContent","setElementStyle","maxHeight","maxWidth","jdbShowType","image","Image","onload","hRatio","wRatio","w","width","h","imgRate","src","imgUrl","resetImgData","imgOperate","rate","animations","trigger","state","z-index","transform","transition","animate","Renderer","render","DragDirective","event","localStorage","getItem","isDown","disLeft","offsetLeft","disTop","offsetTop","disX","clientX","disY","clientY","cursor","preventDefault","newdisX","newdisY","left","top","Directive","ElementRef","HostListener","el","renderer2","Infinity","text","JdbPlgPaginationComponent","_showTotal","_total","setPageNo","_current","_lastIndex","_firstIndex","Number","_showPageSize","_pageSize","_options","toString","optionsArr_1","obj","_showQuickJump","jdbSimple","_jdbSimple","_jdbSelectWidth","Math","ceil","tmpPages","max","right","min","pages","e","stopPropagation","quickJumpPage","jdbPageIndex","jdbPageIndexChange","jdbPageSize","jdbPageSizeChange","inputJump","focus","pageSize","dataChange","round","test","Renderer2","_elementRef","_renderer","_el","addClass","_prefixCls","JdbPlgButtonComponent","size","_setClassMap","loading","type","removeClass","resolver","JdbPlgDialogComponent","_visible","visible","MvisibileChange","_footerHide","TemplateRef","_titleTpl","_title","_contentTpl","_content","_footerTpl","_width","contentEl","_bodyStyleMap","clickCancel","_customClass","_okText","_cancelText","_isConfirm","_RogerText","setStyle","component","factory","bodyEl","changes","_state","setTimeout","parentNode","MOnCancel","MOnOk","getAttribute","opacity","JdbPlgNewDialogComponent","Type","createDynamicComponent","createDynamicDom","insertDiv","createElement","createText","_text","_class","appendChild","_style","document","querySelector","contentComponentRef","_componentParams","changeDetectorRef","detectChanges","insert","hostView","onClose","onOk","onCancel","flag","isChildOf","_closeType","child","parent","OnlyNumberDirective","appOnlyNumber","indexOf","keyCode","ctrlKey","ch","String","fromCharCode","RegExp","regexStr","replace","WatermarkDirective","drawSubject","asObservable","callback","next","node","ctx","getContext","rotate","PI","font","fillStyle","textAlign","textBaseline","fillText","toDataURL","draw$","draw","Subject","JdbPlgSelectComponent","_jdbItemDisabled","_jdbError","_jdbSureDisabled","_placeHolder","_selectList","arr_1","_showImgBox","_size","_optionText","_optionValue","_jdbDisabled","_jdbMode","listen","show","setElementClass","inputDom","inputText","isShowClear","ngModelValue","undefined","_chooseMoreArray","forOneStart","forMoreStart","setClassMap","forNumStart","_classMap","_a","jdbClassName","_b","onChange","optionPosition","optionList","clientHeight","listHeight","paddingHeight","offetTop","getTop","scrollTop","getScrollTop","parentElement","documentElement","body","elemHeight","jdbSize","spaceFlex","fn","isDisabled","split","item","textName","valueName","jdbOptionText","jdbOptionValue","deleteMoreItem","offset","offsetParent","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","JdbPlgInputComponent","_prefixContent","_inputWrapClass","clearBtnEl","inputEl","_composing","_value","_type","placeHolder","large","small","_disabled","disabled","_readonly","readonly","_error","_clear","_maxlength","_autoPromptData","$event","jdbBlur","jdbFocus","encapsulation","ViewEncapsulation","None","ContentChild","JdbPlgAutocompleteComponent","debounce","activeIndex","inputHandle","evt","_searchWord","searchResult","jdbDataSource","filter","_listShow","_","resetPopDirection","selectOne","simples","which","setSearchWord","selectedItem","jdbDataAsyn","onSelected","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","getTime","callNow","getOffsetTop","ele","nodeTop","resultEle","offsetHeight","_dataSource","map","val","dataKey","dataVal","_searchParam","_serverApi","CommonMethodService","number","toFixed","timeObj","arrDate","time","myDate","year","getFullYear","month","add0","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","m","joinStr","isTimeStamp","tarMonth","tarDay","curYear","curMonth","curDay","curDate","tarDate","date","setDate","reg","vRef","msg","delayTime","arg1","arg2","s1","s2","pow","r1","r2","t1","t2","accMul","Injectable","v","isObject","isDate","toISOString","jsonObj","JSON","parse","console","log","toJson","pctEncodeSpaces","encodeURIComponent","params","parts","toSerialize","prefix","topLevel","serialize","encodeUriQuery","serializeValue","join","propIsEnumerable","propertyIsEnumerable","from","_i","source","symbols","to","TypeError","toObject","getOwnPropertySymbols","emitStatistic","SendStatisticService","statisticList","http","commonService","sendStatisticService","operator","memberId","service","apiException","requestTime","url","resCode","resMessage","errorMessage","timer","clearInterval","setInterval","emitStatisticData","JdbPlgBaseService","setRootViewContainerRef","apiName","dataObj","options","loginToken","loginWay","orgUid","newStatisticData","stringify","tokenObj","loginObj","data","currentRoute","hash","objectAssign","jdbDhTraceId","parseInt","random","jQueryLikeParamSerializer","requestoptions","headers","HttpHeaders","Content-Type","reqUrl","baseObj","post","pipe","res","joinTraceId","error","returnUserMessage","endTime","toast","reset","fns","len","returnCode","noLog","isIntercept","catchError","Observable","throw","stamp","toJSON","paramsObj","window","href","file","reader","FileReader","readAsDataURL","HttpClient","FillTableService","lines","lists","aLength","mLength","fillObj","unShowOpt","customClass","maskClass","bodyStyle","closeable","componentParams","footer","container","isConfirm","okText","cancelText","class","JdbModalService","componentFactory","componentRef","_componentRefList","assignProps","rootNodes","ins","_maskClass","_footer","_closeable","closeType","pop","JdbPlgTableErrorComponent","ProvinceReformPipe","Pipe","AmountReformPipe","JdbPlgTimelineItemComponent","optTime","isLast","JdbPlgSwitchComponent","_jdbCheckedText","_jdbUncheckedText","_jdbLoading","Boolean","_jdbSize","_jdbControl","ev","jdbDisabled","jdbLoading","jdbControl","updateSwitchStatus","checked","isEmit","outBoxClass","prefixCls","onTouched","MDL_MODULES","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","exports","declarations","entryComponents","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}