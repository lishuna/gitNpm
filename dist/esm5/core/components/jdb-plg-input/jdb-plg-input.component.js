/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, EventEmitter, TemplateRef, Input, Output, ContentChild, forwardRef, HostListener, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var JdbPlgInputComponent = /** @class */ (function () {
    function JdbPlgInputComponent() {
        this._value = '';
        this._type = 'text';
        this._placeHolder = '';
        this._size = 'default';
        this._disabled = false;
        this._readonly = false;
        this._error = false;
        this._inputWrapClass = [];
        this._clear = false;
        this._autoPromptData = [];
        this._composing = false;
        this.width = '300px';
        // ngModel Access
        this.onChange = function () { return null; };
        this.jdbBlur = new EventEmitter();
        this.jdbFocus = new EventEmitter();
    }
    /**
     * @return {?}
     */
    JdbPlgInputComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        // this._inputWrapClass =[`input-text-wrap-${this._size}`];
        if (this._prefixContent) {
            this._inputWrapClass.push('prefix');
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    JdbPlgInputComponent.prototype.compositionStart = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._composing = true;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    JdbPlgInputComponent.prototype.compositionEnd = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._composing = false;
        this.onChange(this._value);
    };
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbType", {
        get: /**
         * @return {?}
         */
        function () {
            return this._type;
        },
        set: /**
         * @param {?} type
         * @return {?}
         */
        function (type) {
            this._type = type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbPlaceHolder", {
        get: /**
         * @return {?}
         */
        function () {
            return this._placeHolder;
        },
        set: /**
         * @param {?} placeHolder
         * @return {?}
         */
        function (placeHolder) {
            this._placeHolder = placeHolder;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbSize", {
        get: /**
         * @return {?}
         */
        function () {
            return this._size;
        },
        set: /**
         * @param {?} size
         * @return {?}
         */
        function (size) {
            this._size = { large: 'lg', small: 'sm' }[size];
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbDisabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} disabled
         * @return {?}
         */
        function (disabled) {
            this._disabled = this.toBoolean(disabled);
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbReadonly", {
        get: /**
         * @return {?}
         */
        function () {
            return this._readonly;
        },
        set: /**
         * @param {?} readonly
         * @return {?}
         */
        function (readonly) {
            this._readonly = this.toBoolean(readonly);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbValue", {
        get: /**
         * @return {?}
         */
        function () {
            if (this._value == '0') {
                return '0';
            }
            return this._value || '';
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if ((this._value === value) || ((this._value == null) && (value == null))) {
                return;
            }
            this._value = value;
            if (!this._composing) {
                this.onChange(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbError", {
        get: /**
         * @return {?}
         */
        function () {
            return this._error;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._error = this.toBoolean(value);
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbClear", {
        get: /**
         * @return {?}
         */
        function () {
            return this._clear;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._clear = this.toBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbMaxLength", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxlength;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._maxlength = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(JdbPlgInputComponent.prototype, "jdbPromptData", {
        get: /**
         * @return {?}
         */
        function () {
            return this._autoPromptData;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._autoPromptData = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    JdbPlgInputComponent.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this._value = value;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    JdbPlgInputComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    JdbPlgInputComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    JdbPlgInputComponent.prototype._emitBlur = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.jdbBlur.emit($event);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    JdbPlgInputComponent.prototype._emitFocus = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.jdbFocus.emit($event);
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    JdbPlgInputComponent.prototype.textareaOnChange = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
    };
    /**
     * @return {?}
     */
    JdbPlgInputComponent.prototype.setClassMap = /**
     * @return {?}
     */
    function () {
        var _a;
        this._classMap = (_a = {},
            _a["input-" + this._type + "-" + this._size] = true,
            _a['input-disabled'] = this._disabled,
            _a['input-error'] = this._error,
            _a);
    };
    /**
     * @return {?}
     */
    JdbPlgInputComponent.prototype.clearTxt = /**
     * @return {?}
     */
    function () {
        this._value = '';
        this.onChange('');
    };
    /**
     * @param {?} value
     * @return {?}
     */
    JdbPlgInputComponent.prototype.toBoolean = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value === '' || (value && value !== 'false');
    };
    JdbPlgInputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-jdb-plg-input',
                    template: "<span class=\"input-group-addon\" *ngIf=\"_addOnContentBefore\">\n    <ng-template [ngTemplateOutlet]=\"_addOnContentBefore\">\n    </ng-template>\n</span>\n<ng-template [ngIf]=\"_type=='text'\">\n    <div class=\"input-text-wrap\" [ngClass]=\"_inputWrapClass\">\n        <span class=\"input-prefix\" *ngIf=\"_prefixContent\">\n            <ng-template [ngTemplateOutlet]=\"_prefixContent\">\n            </ng-template>\n        </span>\n        <input (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" [disabled]=\"_disabled\" [readonly]=\"_readonly\" [attr.type]=\"_type\" class=\"input\" [ngClass]=\"_classMap\" [attr.placeholder]=\"_placeHolder\" [(ngModel)]=\"jdbValue\" [style.width]=\"width\" maxlength=\"{{jdbMaxLength}}\"\n        />\n        <span class=\"input-clear\" *ngIf=\"_clear && _value && _type=='text'\" (click)=\"clearTxt()\">\n            <i class=\"close-icon icon-empty\"></i>\n        </span>\n        <span class=\"ant-input-suffix\" *ngIf=\"_suffixContent\">\n            <i class=\"iconfont icon-guanbi2fill\"></i>\n            <ng-template [ngTemplateOutlet]=\"_suffixContent\">\n            </ng-template>\n        </span>\n    </div>\n    <div class=\"input-error-tip\" *ngIf=\"jdbError && _errorContent\">\n        <i class=\"icon-message-error error-tip\"></i>\n        <span>\n            <ng-template [ngTemplateOutlet]=\"_errorContent\">\n            </ng-template>\n        </span>\n    </div>\n</ng-template>\n<span class=\"input-group-addon\" *ngIf=\"_addOnContentAfter\">\n      <ng-template [ngTemplateOutlet]=\"_addOnContentAfter\">\n      </ng-template>\n</span>\n<ng-template [ngIf]=\"_type=='textarea'\">\n    <div class=\"input-text-wrap\">\n        <textarea (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" (input)=\"textareaOnChange($event)\" #inputTextarea [disabled]=\"_disabled\" [readonly]=\"_readonly\" type=\"textarea\" class=\"input input-textarea\" [ngClass]=\"_classMap\" [attr.placeholder]=\"jdbPlaceHolder\"\n            [(ngModel)]=\"jdbValue\" maxlength=\"{{jdbMaxLength}}\" [style.width]=\"width\"></textarea>\n        <span class=\"textarea-wc-tip\" [ngClass]=\"{'textarea-wc-tip-red': jdbValue&&jdbValue.length == jdbMaxLength}\" *ngIf=\"jdbMaxLength && !_disabled &&!_readonly\">{{(jdbValue&&jdbValue.length)||0}}/{{jdbMaxLength}}</span>\n    </div>\n</ng-template>",
                    styles: [".input-text-wrap{position:relative;display:inline-block}.input{height:30px;width:300px;background:#fff;border:1px solid #afb0b3;border-radius:2px;font-size:13px;padding:0 10px;line-height:30px;color:#333}.input:focus{outline:0;border-color:#3f69f2}input::-webkit-input-placeholder,textarea::-webkit-input-placeholder{color:#afb0b3}.prefix .input{padding-left:30px}.input-textarea{width:300px;height:80px;overflow-y:auto;font-size:13px;color:#000;line-height:20px}.input-disabled{background:#f0f1f5;color:#7d7e80}.disabled .input{color:#7d7e80}.input-text-lg{height:40px;font-size:14px}.input-text-sm{height:24px;font-size:12px}.input-textarea-lg{height:120px;font-size:14px}.input-textarea-sm{height:80px;font-size:12px}.input-error{border-color:#f84a4a}.input-clear{position:absolute;right:5px;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);height:24px}.input-prefix{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%);left:7px}.input-error-tip{color:#f84a4a;font-size:12px;line-height:20px;max-width:200px}.error-tip{font-size:16px;line-height:20px}.textarea-wc-tip{position:absolute;bottom:5px;right:10px;font-size:12px;color:#7d7e80}.textarea-wc-tip-red{color:#f84a4a}"],
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return JdbPlgInputComponent; }),
                            multi: true
                        }
                    ],
                },] },
    ];
    /** @nocollapse */
    JdbPlgInputComponent.propDecorators = {
        "width": [{ type: Input },],
        "_errorContent": [{ type: ContentChild, args: ['jdbErrorContent',] },],
        "_addOnContentBefore": [{ type: ContentChild, args: ['addContentBefore',] },],
        "_addOnContentAfter": [{ type: ContentChild, args: ['addContentAfter',] },],
        "_prefixContent": [{ type: ContentChild, args: ['prefixContent',] },],
        "_suffixContent": [{ type: ContentChild, args: ['suffixContent',] },],
        "jdbBlur": [{ type: Output },],
        "jdbFocus": [{ type: Output },],
        "compositionStart": [{ type: HostListener, args: ['compositionstart', ['$event'],] },],
        "compositionEnd": [{ type: HostListener, args: ['compositionend', ['$event'],] },],
        "jdbType": [{ type: Input },],
        "jdbPlaceHolder": [{ type: Input },],
        "jdbSize": [{ type: Input },],
        "jdbDisabled": [{ type: Input },],
        "jdbReadonly": [{ type: Input },],
        "jdbValue": [{ type: Input },],
        "jdbError": [{ type: Input },],
        "jdbClear": [{ type: Input },],
        "jdbMaxLength": [{ type: Input },],
        "jdbPromptData": [{ type: Input },],
    };
    return JdbPlgInputComponent;
}());
export { JdbPlgInputComponent };
function JdbPlgInputComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    JdbPlgInputComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    JdbPlgInputComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    JdbPlgInputComponent.propDecorators;
    /** @type {?} */
    JdbPlgInputComponent.prototype._value;
    /** @type {?} */
    JdbPlgInputComponent.prototype._type;
    /** @type {?} */
    JdbPlgInputComponent.prototype._placeHolder;
    /** @type {?} */
    JdbPlgInputComponent.prototype._size;
    /** @type {?} */
    JdbPlgInputComponent.prototype._disabled;
    /** @type {?} */
    JdbPlgInputComponent.prototype._readonly;
    /** @type {?} */
    JdbPlgInputComponent.prototype._error;
    /** @type {?} */
    JdbPlgInputComponent.prototype._classMap;
    /** @type {?} */
    JdbPlgInputComponent.prototype._inputWrapClass;
    /** @type {?} */
    JdbPlgInputComponent.prototype._clear;
    /** @type {?} */
    JdbPlgInputComponent.prototype._maxlength;
    /** @type {?} */
    JdbPlgInputComponent.prototype._autoPromptData;
    /** @type {?} */
    JdbPlgInputComponent.prototype._composing;
    /** @type {?} */
    JdbPlgInputComponent.prototype.width;
    /** @type {?} */
    JdbPlgInputComponent.prototype.onChange;
    /** @type {?} */
    JdbPlgInputComponent.prototype._errorContent;
    /** @type {?} */
    JdbPlgInputComponent.prototype._addOnContentBefore;
    /** @type {?} */
    JdbPlgInputComponent.prototype._addOnContentAfter;
    /** @type {?} */
    JdbPlgInputComponent.prototype._prefixContent;
    /** @type {?} */
    JdbPlgInputComponent.prototype._suffixContent;
    /** @type {?} */
    JdbPlgInputComponent.prototype.jdbBlur;
    /** @type {?} */
    JdbPlgInputComponent.prototype.jdbFocus;
}

//# sourceMappingURL=data:application/json;base64,