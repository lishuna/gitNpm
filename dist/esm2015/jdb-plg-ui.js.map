{"version":3,"file":"jdb-plg-ui.js","sources":["../../__jdbui_components/components/jdb-plg-toast/jdb-plg-toast.component.ts","../../__jdbui_components/components/jdb-plg-tab/jdb-tab.component.ts","../../__jdbui_components/components/show-picture/show-picture.component.ts","../../__jdbui_components/components/picture-viewer/picture-viewer.component.ts","../../__jdbui_components/directive/drag.directive.ts","../../__jdbui_components/components/jdb-plg-pagination/jdb-plg-pagination.component.ts","../../__jdbui_components/components/jdb-plg-button/jdb-plg-button.component.ts","../../__jdbui_components/components/jdb-plg-dialog/jdb-plg-dialog.component.ts","../../__jdbui_components/components/jdb-plg-new-dialog/jdb-plg-new-dialog.component.ts","../../__jdbui_components/directive/only-number.directive.ts","../../__jdbui_components/directive/watermark.directive.ts","../../__jdbui_components/components/jdb-plg-select/jdb-plg-select.component.ts","../../__jdbui_components/components/jdb-plg-input/jdb-plg-input.component.ts","../../__jdbui_components/components/jdb-plg-autocomplete/keycode.ts","../../__jdbui_components/components/jdb-plg-autocomplete/jdb-plg-autocomplete.component.ts","../../__jdbui_components/services/jdb-plg-base/common-method.service.ts","../../__jdbui_components/services/jdb-plg-base/query-string.ts","../../__jdbui_components/services/jdb-plg-base/object-assign.ts","../../__jdbui_components/services/jdb-plg-base/send-statistic.service.ts","../../__jdbui_components/services/jdb-plg-base/jdb-plg-base.service.ts","../../__jdbui_components/services/jdb-plg-base/fill-table.service.ts","../../__jdbui_components/services/jdb-plg-base/jdb-modal.service.ts","../../__jdbui_components/components/jdb-plg-table-error/jdb-plg-table-error.component.ts","../../__jdbui_components/pipe/province-reform.pipe.ts","../../__jdbui_components/pipe/amount-reform.pipe.ts","../../__jdbui_components/components/jdb-plg-timeline-item/jdb-plg-timeline-item.component.ts","../../__jdbui_components/components/jdb-plg-switch/jdb-plg-switch.component.ts","../../__jdbui_components/jdb-plg-ui.module.ts"],"sourcesContent":["import { Component, OnInit, AfterViewInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-toast',\n  template: `<div class=\"toast-wraper\" [innerHtml]=\"msg\"> </div> `,\n  // styleUrls: ['./jdb-plg-toast.component.scss']\n})\nexport class JdbPlgToastComponent implements OnInit {\n\n  @Input() msg:string = \"\";\n  constructor() {\n   }\n\n  ngOnInit() {\n  }\n}\n\n\n\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewContainerRef,\n  ViewChild,\n  ElementRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  Injector,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  OnChanges\n} from '@angular/core';\n\n@Component({\n  selector: 'jdb-tab',\n  template: `<div class=\"tab-wraper\"> <div class=\"tab-nav-wraper\"> <div *ngFor=\"let item of items;let i = index;\" class=\"tab-item {{item.theme}} {{item.style}} tab-item-hei{{item.height}}\" [ngClass]=\"{'tab-selected':i == curTabIndex, 'trapezoid1':item.theme === 'trapezoid'&&(i == 0)}\" title='{{item.title}}'> <div (click)=\"tabChange(i)\" class=\"tab-text\" [ngClass]=\"{'trapezoid-div':item.theme === 'trapezoid'}\"> {{item.title}}<span *ngIf=\"totalTip.isShow ? totalTip.isShow : false\" class=\"tab-total\">{{totalTip[i]}}</span> </div> <span class=\"close-btn\" (click)=\"removeTab(i)\" *ngIf=\"i !== 0 && item.isCloseFlag != true\">&times;</span> <div *ngIf=\"item.borderLength === 'short'\" class=\"self-border\"></div> </div> </div> <div class=\"tab-content-wraper\"> <div #tabContent class=\"place-holder\"></div> </div> </div> `\n  // styleUrls: ['./jdb-tab.component.scss']\n})\nexport class JdbTabComponent implements OnInit, OnDestroy, OnChanges {\n  // @ViewChild('tabContent') tabContent: ElementRef;\n  @ViewChild('tabContent', { read: ViewContainerRef })\n  target;\n  @Output() onTabChange = new EventEmitter();\n  @Output() onTabRemove = new EventEmitter();\n  @Output() onTopComMsg = new EventEmitter();\n  @Input() totalTip: any; // tab标签后面的总数提示\n  @Output() totalTipChange = new EventEmitter();\n  items = [];\n  tabComs = [];\n  tabSubs: any;\n  curTabIndex = 0;\n  tabIdComMap = {};\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    public _injector: Injector\n  ) {\n    this.totalTip = {\n      isShow: false\n    };\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    // console.log('changes:totalTip:' + this.totalTip);\n  }\n\n  /**\n   *\n   * @param ChildComponent\n   * @param attrs:{\n   *     propery:value\n   * ]\n   * title:string\n   * isCloseFlag\n   * @description: tab切换的样式作为可配置功能拓展，主要是通过类名设置，提供主题名theme和色调搭配 style:\n   * 一、theme说明：\n   * - text-纯文本\n   * - trapezoid-梯形\n   * - rectangle-长方形\n   * - 待以后添加\n   * 二、style说明：\n   * 1、纯文本的一般情况下是没有边框和背景色的，所以格式遵循：'形状'-'初始字体颜色''激活字体颜色''边框色''边框长还是短'\n   * - text garyBlackBlueLong（文本的默认样式）\n   * - text garyBlackBlueShort\n   * 2、图形一般情况下有边框和背景色：\n   * （格式严格遵循：'形状'-'初始背景色''激活背景色''边框色''边框长还是短': 比如 'rectangle grayWhiteBlueLong')\n   * - rectangle grayWhiteBlueLong: 长方形-灰色 白色 蓝边 长。这也是默认的tab样式\n   * - trapezoid grayWhite: 梯形-灰色 白色。说明梯形的tab没有 边框的颜色效果\n   * （如果倒数几个配置均不需要，则用nonono，直接省略不写：'trapezoid-grayWhite'））\n   * （但是如果是中间有配置项为no，则不能省略 no。书写为：'trapezoid-noNoBlueLong'）\n   * @example:\n   * this.lefTopTab.addItem(ChildrenComponent, {\n   *     theme: {\n   *      height: 40,\n   *      name: 'trapezoid',\n   *      style: 'grayWhite',\n   *      borderLength: 'long' / 'short'\n   *     }\n   *   }, '主页', '', true);\n   * @extends:\n   * 如果颜色配置遇到'light'，表示设置透明；\n   * 三、borderLength说明：\n   * ‘long'-长边框，此时隐藏元素\n   * ‘short'-短边框，此时显示元素\n   */\n  addItem(\n    ChildComponent: any,\n    attrs: any,\n    title: string,\n    comId: any = '',\n    isCloseFlag: boolean = false\n  ) {\n    if (comId && this.tabIdComMap[comId]) {\n      let com: any = this.tabIdComMap[comId];\n      this.tabChange(com.index);\n      return;\n    }\n    const childComponent = this.componentFactoryResolver.resolveComponentFactory(\n      ChildComponent\n    );\n    var comInstance = this.target.createComponent(childComponent);\n    var keys = Object.keys(attrs);\n    this.items.push({\n      title: title,\n      isCloseFlag: isCloseFlag,\n      theme: attrs.theme ? (attrs.theme.name ? attrs.theme.name : null) : null,\n      style: attrs.theme\n        ? attrs.theme.style\n          ? attrs.theme.style\n          : null\n        : null,\n      height: attrs.theme\n        ? attrs.theme.height\n          ? attrs.theme.height\n          : null\n        : null,\n      borderLength: attrs.theme\n        ? attrs.theme.borderLength\n          ? attrs.theme.borderLength\n          : null\n        : null\n    });\n    keys.forEach(value => {\n      comInstance.instance[value] = attrs[value];\n    });\n    this.tabComs.push(comInstance);\n    if (this.items.length > 1) {\n      this.setOneComHide(this.curTabIndex);\n    }\n\n    this.tabSubs = comInstance.instance['onTopComMsg'] = new EventEmitter();\n    this.tabSubs.subscribe(value => {\n      this.onTopComMsg.emit(value);\n    });\n    this.curTabIndex = this.items.length - 1;\n    if (comId) {\n      this.tabIdComMap[comId] = {\n        index: this.curTabIndex,\n        comInstance: comInstance.instance\n      };\n    }\n    return comInstance;\n  }\n\n  private setOneComHide(tabIndex) {\n    this.tabComs[tabIndex].location.nativeElement.style.display = 'none';\n  }\n\n  private setOneComShow(tabIndex) {\n    this.tabComs[tabIndex].location.nativeElement.style.display = 'block';\n  }\n\n  tabChange(index) {\n    if (this.curTabIndex === index) {\n      return;\n    }\n    this.setOneComHide(this.curTabIndex);\n    this.setOneComShow(index);\n    this.curTabIndex = index;\n    this.onTabChange.emit(index);\n    this.tabComs[index].instance.tabRefresh &&\n      this.tabComs[index].instance.tabRefresh({});\n    // this.tabComs[index].destroy();\n  }\n\n  setOneTabShow(index) {\n    this.tabChange(index);\n  }\n\n  removeTab(index) {\n    this.tabComs[index].destroy();\n    this.tabComs.splice(index, 1);\n    this.items.splice(index, 1);\n    if (index <= this.curTabIndex) {\n      this.curTabIndex--;\n    }\n    if (this.curTabIndex < 0) {\n      this.curTabIndex = 0;\n    }\n    this.setOneComShow(this.curTabIndex);\n    this.onTabRemove.emit(index);\n    let tabIdComMap = this.tabIdComMap;\n    for (let key in tabIdComMap) {\n      if (tabIdComMap[key].index == index) {\n        delete tabIdComMap[key];\n        break;\n      }\n    }\n  }\n\n  removeTabById(id: string) {\n    let tabIdComMap = this.tabIdComMap;\n    for (let key in tabIdComMap) {\n      if (key == id) {\n        this.removeTab(tabIdComMap[key]['index']);\n        break;\n      }\n    }\n  }\n  ngOnDestroy() {\n    if (this.target) {\n      // this.target.destroy();\n      this.target.clear();\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-show-picture',\n  template: `<div> <div class=\"img-mask\" (click)=\"closeModel()\"> <!-- 遮罩层 --> </div> <div class=\"img-content\"> <span class=\"close\" (click)=\"closeModel()\"> <img src=\"/assets/images/close-x.png\" alt=\"\"> </span> <img [src]=\"pictureUrl\" alt=\"\" style=\"max-height: 600px;max-width: 800px;\"> </div> </div> `,\n  // styleUrls: ['./show-picture.component.scss']\n})\nexport class ShowPictureComponent implements OnInit {\n  @Input() pictureUrl: string;\n  @Output() update = new EventEmitter<{status: boolean}>();\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  closeModel(){\n    this.update.emit({status: false})\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ElementRef,\n  Renderer,\n  HostListener,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  AfterViewInit\n} from '@angular/core';\n\nimport {\n  animate,\n  style,\n  transition,\n  trigger,\n  state\n} from '@angular/animations';\n@Component({\n  selector: 'app-picture-viewer',\n  template: `<div class=\"picture-viewer\"> <div class=\"img-mask\" *ngIf=\"_jdbMaster\" (click)=\"closeModel()\"> <!-- 遮罩层 --> </div> <div #imgContent [ngClass]=\"{'img-content-componet':jdbShowType==2}\" class=\"img-content\"> <!-- 右上角关闭按钮 --> <div class=\"close\" *ngIf=\"_jdbClear\" (click)=\"closeModel()\"> <span class=\"icon-close\"></span> </div> <!-- 图片box --> <ul class=\"img-box\" #img> <li *ngFor=\"let item of pictureList;let i=index\" [@imgMove]=\"ImgState(i)\"> <img appDragDirective  [src]=\"item.imgUrl\" alt=\"\" style=\"max-height: 600px;max-width: 800px;\"> </li> </ul> <!-- 上一页下一页 --> <div [hidden]=\"current==0\" class=\"prev-page\" (click)=\"Prev()\"> <span class=\"icon-pagination-prev\"></span> </div> <div [hidden]=\"current==pictureList.length-1\" class=\"next-page\" (click)=\"Next()\"> <span class=\"icon-pagination-next\"></span> </div> <!-- 右下角页码 --> <div class=\"img-index\">{{current+1}}/{{pictureList.length}}</div> <!-- 缩放旋转按钮组 --> <div class=\"btn-box\"> <span [ngClass]=\"{'hover-disabled':imgOperate.num===4}\" class=\"icon-picture-zoom-in scale-big\" (click)=\"scaleBig()\"></span> <span [ngClass]=\"{'hover-disabled':imgOperate.num==0.5}\" class=\"icon-picture-zoom-out  scale-small\" (click)=\"scaleSmall()\"></span> <span class=\"icon-picture-counterclockwise routate-ni\" (click)=\"routateNi()\"></span> <span class=\"icon-picture-clockwise routate-shun\" (click)=\"routateShun()\"></span> </div> </div> </div>`,\n  // styleUrls: ['./picture-viewer.component.scss'],\n  animations: [\n    trigger('imgMove', [\n      /** 不显示 */\n      state('off', style({ 'display': 'none', 'z-index': '0', 'transform': 'translateX(0)' })),\n      /** 上一张图片 */\n      state('prev', style({\n        'z-index': '1',\n        'transform': 'translateX(-100%)'\n      })),\n      /** 下一张图片 */\n      state('next', style({ 'z-index': '2', 'transform': 'translateX(100%)' })),\n      /** 当前图片 */\n      state('on', style({ 'z-index': '3', 'transform': 'translateX(0)' })),\n      transition('prev=>on', [\n        animate('0.3s ease-in')\n      ]),\n      transition('next=>on', [\n        animate('0.3s ease-in')\n      ]),\n      transition('on=>prev', [\n        animate('0.3s ease-in')\n      ]),\n      transition('on=>next', [\n        animate('0.3s ease-in')\n      ])\n    ])\n  ]\n})\nexport class PictureViewerComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() pictureList: any = [];\n  @Output() update = new EventEmitter<{ status: boolean }>();\n  // @Input() current: number = 0;\n  @ViewChild('img') imgBox: ElementRef;  // 图片父节点\n  @ViewChild('imgContent') imgContent: ElementRef; // 容器元素\n  // 设置容器的默认宽高，可适配 可配置属性\n  @Input() maxWidth: number = 800;\n  @Input() maxHeight: number = 600;\n  @Input() jdbShowType: number = 1; // 是浮层还是嵌入组件，默认为1，作为浮层，若为2，则表示是嵌入组件\n\n  _jdbMaster = true; // 是否需要master遮罩，默认需要遮罩层\n  _jdbClear = true;// 是否需要按钮叉，默认需要\n  dragStatus = false;\n  current = 0; // 展示图片下标，默认为0\n\n  elem: any;\n\n  imgOperate = {\n    num: 1,\n    degnum: 0\n  };\n\n\n  @Input()\n  set jdbMaster(value: boolean) {\n    this._jdbMaster = this.toBoolean(value);\n  }\n\n  get jdbMaster(): boolean {\n    return this._jdbMaster;\n  }\n\n  @Input()\n  set jdbClear(value: boolean) {\n    this._jdbClear = this.toBoolean(value);\n  }\n\n  get jdbClear(): boolean {\n    return this._jdbClear;\n  }\n\n  @Input()\n  set jdbCurrent(value: number) {\n    if (value > this.pictureList.length || value < 0) {\n      this.current = 0;\n      return;\n    }\n    this.current = value;\n  }\n\n  get jdbCurrent(): number {\n    return this.current;\n  }\n\n  constructor(private renderer: Renderer) {\n\n  }\n\n  ngOnInit() {\n    this.elem = this.imgBox.nativeElement.children;  // 所有的li\n  }\n\n  ngOnChanges() {\n    if (this.pictureList) {\n      this.pictureList.forEach((element, index) => {\n        this.resetPosition(index);\n      });\n    }\n  }\n\n  // 设置元素样式\n  ngAfterViewInit() {\n    const imgContent = this.imgContent.nativeElement;\n    this.renderer.setElementStyle(imgContent, 'height', this.maxHeight + 'px');\n    this.renderer.setElementStyle(imgContent, 'width', this.maxWidth + 'px');\n\n    if (this.jdbShowType == 1) {\n      this.renderer.setElementStyle(imgContent, 'margin-left', - this.maxWidth / 2 + 'px');\n      this.renderer.setElementStyle(imgContent, 'margin-top', - this.maxHeight / 2 + 'px');\n    }\n  }\n\n  // 重置图片位置\n  resetPosition(index) {\n    const image = new Image();\n    image.onload = () => {\n      // 获取当前加载图片宽高\n      let w = image.width;\n      let h = image.height;\n      let hRatio;\n      let wRatio;\n      // 设置默认比例以及容器宽高\n      const imgRate = w / h; // 图片宽高比\n      // const maxWidth = 800;\n      // const maxHeight = 600;\n      wRatio = this.maxWidth / w;\n      hRatio = this.maxHeight / h;\n\n      if (wRatio > 1 && hRatio > 1) {\n        // 两者比例均大于1表示图为小图，宽高未达到800*600,则取原图大小\n        w = w;\n        h = h;\n      } else if (wRatio < 1 && hRatio < 1) {\n        // 两者比例均小于1表示图为大图，宽高达到800*600,则取容器大小\n        if (imgRate > 1) {\n          // 宽图\n          w = this.maxWidth;\n          h = w / imgRate;\n        } else if (imgRate < 1) {\n          // 长图\n          h = this.maxHeight;\n          w = h * imgRate;\n        }\n\n      } else if (wRatio > 1 && hRatio < 1) {\n        // 表示为长图片，则高为600，宽等比例缩放取值\n        h = this.maxHeight;\n        w = w * hRatio;\n      } else if (wRatio < 1 && hRatio > 1) {\n        // 表示为宽图片，则宽为800，高等比例缩放取值\n        h = h * wRatio;\n        w = this.maxWidth;\n      }\n\n      // 设置图片展示宽高\n      this.renderer.setElementStyle(this.elem[index].children[0], 'height', h + 'px');\n      this.renderer.setElementStyle(this.elem[index].children[0], 'width', w + 'px');\n\n      if (w === this.maxWidth && h === this.maxHeight) {\n        // 设置图片位置使其垂直水平居中\n        this.renderer.setElementStyle(this.elem[index].children[0], 'top', '0px');\n        this.renderer.setElementStyle(this.elem[index].children[0], 'left', '0px');\n      } else {\n        // 设置图片位置使其垂直水平居中\n        this.renderer.setElementStyle(this.elem[index].children[0], 'top', (this.maxHeight - h) / 2 + 'px');\n        this.renderer.setElementStyle(this.elem[index].children[0], 'left', (this.maxWidth - w) / 2 + 'px');\n      }\n\n    };\n    image.src = this.pictureList[index].imgUrl;\n  }\n\n  // 切换动画\n  ImgState(index) {\n    if (this.pictureList && this.pictureList.length) {\n      if (this.current === 0) {\n        return index === 0 ? 'on' :\n          index === 1 ? 'next' :\n            index === this.pictureList.length - 1 ? 'prev' :\n              'off';\n      } else if (this.current === this.pictureList.length - 1) {\n        return index === this.pictureList.length - 1 ? 'on' :\n          index === this.pictureList.length - 2 ? 'prev' :\n            index === 0 ? 'next' :\n              'off';\n      }\n      switch (index - this.current) {\n        case 0:\n          return 'on';\n        case 1:\n          return 'next';\n        case -1:\n          return 'prev';\n        default:\n          return 'off';\n      }\n    } else {\n      return 'off';\n    }\n  }\n\n  // 下一张图\n  Next() {\n    this.resetImgData();\n    this.current = (this.current + 1) % this.pictureList.length;\n    this.resetPosition(this.current - 1);\n    // 修改状态，使拖动图片回到原来位置\n    // this.dragStatus = true;\n  }\n\n  // 上一张图\n  Prev() {\n    this.resetImgData();\n    this.current = this.current - 1 < 0 ? this.pictureList.length - 1 : this.current - 1;\n    this.resetPosition(this.current + 1);\n    // 修改状态，使拖动图片回到原来位置\n    // this.dragStatus = true;\n  }\n\n  // 关闭图片查看器 __关闭弹框后再次打开所有拖拽后的位置都会自动归为，因为触发了onChanges方法\n  closeModel() {\n    this.resetImgData();\n    this.update.emit({ status: false });\n  }\n\n  // 放大 50% 100% 200% 400%\n  scaleBig() {\n    this.imgOperate.num = this.imgOperate.num * 2;\n    if (this.imgOperate.num > 4) {\n      this.imgOperate.num = 4;\n    }\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 缩小\n  scaleSmall() {\n    this.imgOperate.num = this.imgOperate.num / 2;\n    if (this.imgOperate.num < 1) {\n      this.imgOperate.num = 0.5;\n    }\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 逆时针旋转\n  routateNi() {\n    this.imgOperate.degnum++;\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 顺时针旋转\n  routateShun() {\n    this.imgOperate.degnum--;\n\n    const rate = 'scale(' + 1 * this.imgOperate.num + ',' + 1 * this.imgOperate.num + ') rotate(' + (-this.imgOperate.degnum * 90) + 'deg)';\n\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 重置图片数据\n  resetImgData() {\n    this.imgOperate = {\n      num: 1,\n      degnum: 0\n    };\n    const rate = 'scale(1,1) rotate(0deg)';\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transition', 'transform 0.2s linear 0.4s');\n    this.renderer.setElementStyle(this.elem[this.current].children[0], 'transform', rate);\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  ngOnDestroy() {\n    this.pictureList = null;\n    this.imgBox = null;\n    this.imgContent = null;\n    this.current = null;\n  }\n}\n","import {\n    HostListener,\n    ElementRef,\n    Directive,\n    Component,\n    Renderer,\n    OnInit,\n    Input,\n    AfterContentInit,\n    OnChanges,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n@Directive({\n    selector: 'img[appDragDirective]'\n})\nexport class DragDirective {\n    oldLeft: string;\n    oldTop: string;\n\n    private isDown = false;\n    private disX;\n    private disY;\n    private disLeft;\n    private disTop;\n\n    constructor(\n        private elem: ElementRef,\n        private render: Renderer\n    ) {\n        //\n    }\n\n    // 点击事件\n    @HostListener('mousedown', ['$event']) onMousedown(event) {\n        const wRate = localStorage.getItem('dragWidth');\n        const hRate = localStorage.getItem('dragHeight');\n        this.isDown = true;\n\n        this.disLeft = this.elem.nativeElement.offsetLeft;\n        this.disTop = this.elem.nativeElement.offsetTop;\n\n        this.disX = event.clientX;\n        this.disY = event.clientY;\n        event.target.style.cursor = 'move';\n        // event.preventDefault();\n    }\n\n    // 监听移动事件事件\n    @HostListener('mousemove', ['$event']) onMousemove(event) {\n        event.preventDefault();\n        // 判断该元素是否被点击了。\n\n        if (this.isDown) {\n            const newdisX = event.clientX - this.disX;\n            const newdisY = event.clientY - this.disY;\n            this.elem.nativeElement.style.left = newdisX + this.disLeft + 'px';\n            this.elem.nativeElement.style.top = newdisY + this.disTop + 'px';\n\n        }\n        return false;\n\n\n    }\n\n    // 监听document离开事件\n\n    @HostListener('mouseup', ['$event']) onMouseup() {\n        // 只用当元素移动过了，离开函数体才会触发。\n        if (this.isDown) {\n            this.isDown = false;\n            this.disLeft = this.elem.nativeElement.offsetLeft;\n            this.disTop = this.elem.nativeElement.offsetTop;\n        }\n    }\n\n    // 监听元素离开事件\n    @HostListener('mouseleave', ['$event']) onMouseleave() {\n        this.isDown = false;\n    }\n    ngOnDestroy() {\n        //Called once, before the instance is destroyed.\n        //Add 'implements OnDestroy' to the class.\n        \n    }\n}\n","\nimport {\n  Component,\n  OnInit,\n  EventEmitter,\n  Input,\n  Output,\n  ElementRef,\n  ViewChild,\n  Renderer2\n} from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-pagination',\n  template: `<div class=\"jdb-plg-pagination\">\n    <!-- 总条数 -->\n    <span *ngIf=\"_showTotal\" class=\"total-box\">\n      共{{_total}}条\n    </span>\n\n    <div class=\"operate-box\">\n        <!-- 条数切换 -->\n        <div class=\"jdb-plg-pagination-options\" *ngIf=\"_showPageSize\">\n            <app-jdb-plg-select (ngModelChange)=\"dataChange(false,$event)\" [jdbSize]=\"'small'\" [jdbWidth]=\"_jdbSelectWidth\" [(ngModel)]=\"_pageSize\" [jdbSelectList]=\"_options\"></app-jdb-plg-select>\n        </div>\n        <!-- 基本分页样式 -->\n        <ul *ngIf=\"!_jdbSimple\" class=\"base-pagination\">\n            <!-- 上一页按钮 -->\n            <li class=\"jdb-plg-pagination-prev\" title=\"上一页\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_current-1,$event)\">\n                <span class=\"jdbIcon icon-pagination-prev\"></span>\n            </li>\n            <!-- 首页按钮 -->\n            <li class=\"jdb-plg-pagination-first\" title=\"首页\" [ngClass]=\"{'active':_current===_firstIndex}\" (click)=\"dataChange(true,_firstIndex,$event)\">\n                {{_firstIndex}}\n            </li>\n            <!-- 省略号 -->\n            <li class=\"jdb-plg-pagination-forward\" *ngIf=\"(_lastIndex >9)&&(_current-4>_firstIndex)\" (click)=\"jumpBefore($event,_pageSize)\">\n                <span class=\"icon-pagination-more\"></span>\n                <span class=\"icon-pagination-jump-prev\"></span>\n            </li>\n            <!-- 按钮 -->\n            <li class=\"jdb-plg-pagination-pager\" *ngFor=\"let page of pages\" [ngClass]=\"{'active':_current===page.index}\" (click)=\"dataChange(true,page.index,$event)\">\n                {{page.index}}\n            </li>\n            <!-- 省略号 -->\n            <li class=\"jdb-plg-pagination-backward\" *ngIf=\"(_lastIndex >9)&&(_current+4<_lastIndex)\" (click)=\"jumpAfter($event,_pageSize)\">\n                <span class=\"icon-pagination-more\"></span>\n                <span class=\"icon-pagination-jump-next\"></span>\n            </li>\n            <!-- 尾页按钮 -->\n            <li class=\"jdb-plg-pagination-last\" *ngIf=\"(_lastIndex>0)&&(_lastIndex!==_firstIndex)\" title=\"尾页\" [ngClass]=\"{'active':_current===_lastIndex}\" (click)=\"dataChange(true,_lastIndex,$event)\">\n                {{_lastIndex}}\n            </li>\n            <!-- 下一页按钮 -->\n            <li class=\"jdb-plg-pagination-next\" title=\"下一页\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_current+1,$event)\">\n                <span class=\"jdbIcon icon-pagination-next\"></span>\n            </li>\n        </ul>\n        <!-- 简单分页样式 -->\n        <div class=\"simple-pagination\" *ngIf=\"_jdbSimple\">\n            <div class=\"left-box\">\n                <span class=\"icon-pagination-first\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_firstIndex,$event)\"></span>\n                <span class=\"icon-pagination-prev\" [ngClass]=\"{'disabled':_current===_firstIndex}\" (click)=\"dataChange(true,_current-1,$event)\"></span>\n            </div>\n            <div class=\"center-box\">\n                {{_current}} / {{_lastIndex}}\n            </div>\n            <div class=\"right-box\">\n                <span class=\"icon-pagination-next\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_current+1,$event)\"></span>\n                <span class=\"icon-pagination-last\" [ngClass]=\"{'disabled':_current===_lastIndex}\" (click)=\"dataChange(true,_lastIndex,$event)\"></span>\n            </div>\n        </div>\n        <!-- 快速跳转 -->\n        <div *ngIf=\"_showQuickJump\" class=\"quick-jumper\">\n            第\n            <input #inputJump type=\"text\" [(ngModel)]=\"quickJumpPage\" (keyup.enter)=\"quickJump()\" appOnlyNumber=\"true\"> 页\n            <button (click)=\"quickJump()\">跳转</button>\n        </div>\n    </div>\n</div>`,\n  // styleUrls: ['./jdb-plg-pagination.component.scss']\n})\nexport class JdbPlgPaginationComponent {\n  _total: number; // 总条数\n  _current = 1; // 当前页码默认为1\n  _pageSize = 10; // 默认条数\n  _firstIndex = 1;  // 首页默认为1\n  _lastIndex = Infinity;  // 尾页默认为无穷\n  _showTotal = false;  // 是否展示总数，默认不展示\n  _showPageSize = false; // 是否展示页码切换，默认不展示\n  _showQuickJump = false; // 是否展示快速跳转，默认不展示\n  pages = [];  // 页码数组\n  // _options = [10, 20, 30, 40, 50]; // select默认数组\n  // select默认数组\n  _options = [\n    { value: 10, text: '10条/页' },\n    { value: 20, text: '20条/页' },\n    { value: 30, text: '30条/页' },\n    { value: 40, text: '40条/页' },\n    { value: 50, text: '50条/页' }\n  ];\n\n  quickJumpPage: any; // 快速跳转页码\n  hisQicukPage: any;  // 历史快速跳转页码\n  _jdbSimple = false; // 是否为简单分页，默认为基本分页\n  _jdbSelectWidth = '90px'; // 下拉框宽度\n\n  @Output() jdbPageSizeChange: EventEmitter<number> = new EventEmitter();  // 条数切换  命名与属性相关\n  @Output() jdbPageIndexChange: EventEmitter<number> = new EventEmitter();  // 页码切换\n\n  @ViewChild('inputJump') private inputJump: ElementRef;\n  constructor(\n    private el: ElementRef,\n    private renderer2: Renderer2\n  ) { }\n\n  // 是否展示总数标签\n  @Input()\n  set jdbShowTotal(value: boolean) {\n    this._showTotal = this.toBoolean(value);\n  }\n\n  get jdbShowTotal(): boolean {\n    return this._showTotal;\n  }\n\n  // 数据总数\n  @Input()\n  set jdbTotal(value: number) {\n    // 若传入值和当前total一致，则不触发操作\n    if (value === this._total) {\n      return;\n    }\n    this._total = value;\n    this.setPageNo();\n  }\n\n  get jdbTotal(): number {\n    return this._total;\n  }\n\n  // jdbPageIndex与_current关联，表示页码\n  @Input()\n  set jdbPageIndex(value: number) {\n    if (this._current === value) {\n      return;\n    }\n    if (value > this._lastIndex || value < this._firstIndex) {\n      return;\n    }\n    this._current = Number(value);\n    this.setPageNo();\n  }\n\n  get jdbPageIndex(): number {\n    return this._current;\n  }\n\n  // 是否展示切换条数select\n  @Input()\n  set jdbShowPageSize(value: boolean) {\n    this._showPageSize = this.toBoolean(value);\n  }\n\n  get jdbShowPageSize(): boolean {\n    return this._showPageSize;\n  }\n\n  // 默认条数\n  @Input()\n  set jdbPageSize(value: number) {\n    if (value === this._pageSize) {\n      return;\n    }\n    this._pageSize = value;\n    this.setPageNo();\n  }\n\n  get jdbPageSize(): number {\n    return this._pageSize;\n  }\n\n  // 默认下拉选择条数数组\n  @Input()\n  set jdbSizeOptions(value) {\n    // 若传入值和当前total一致，则不触发操作\n    if (value === this._options) {\n      return;\n    }\n\n    // 判断是否为数组\n    if (Object.prototype.toString.call(value) === '[object Array]') {\n      const optionsArr = [];\n      value.forEach(elem => {\n        const obj = {\n          value: elem,\n          text: elem + '条/页'\n        };\n        optionsArr.push(obj);\n      });\n      this._options = optionsArr;\n    }\n  }\n\n  get jdbSizeOptions() {\n    return this._options;\n  }\n\n  // 是否展示快速跳转页面\n  @Input()\n  set jdbShowQuickJump(value: boolean) {\n    this._showQuickJump = this.toBoolean(value);\n  }\n\n  get jdbShowQuickJump(): boolean {\n    return this._showQuickJump;\n  }\n\n  // 分页样式\n  @Input()\n  set jdbSimple(value: boolean) {\n    this._jdbSimple = this.toBoolean(value);\n  }\n\n  get jdbSimple(): boolean {\n    return this.jdbSimple;\n  }\n\n  // 下拉框宽度设置，防止window系统出现滚动条位置不够\n  @Input()\n  set jdbSelectWidth(value: string) {\n    this._jdbSelectWidth = value;\n  }\n\n  get jdbSelectWidth(): string {\n    return this._jdbSelectWidth;\n  }\n\n  // 创建页码\n  setPageNo() {\n    // 向上取整\n    this._lastIndex = Math.ceil(this._total / this._pageSize);\n    // 如果当前页码大于尾页，则等于尾页\n    // if (this._current > this._lastIndex) {\n    //   this.jdbPageIndex = this._lastIndex;\n    //   this.jdbPageIndexChange.emit(this.jdbPageIndex);\n    // }\n\n    const tmpPages = [];\n\n    if (this._lastIndex <= 9) {\n      // 若总页数不超过9，则全部展示在页面上\n      for (let i = 2; i <= this._lastIndex - 1; i++) {\n        tmpPages.push({\n          index: i\n        });\n      }\n    } else {\n      const current = +this._current;\n      let left = Math.max(2, current - 2);\n      let right = Math.min(current + 2, this._lastIndex - 1);\n\n      // 特殊处理正数第五个数和倒数第五个数\n      if (current === 5) {\n        left = 2;\n      } else if (current === this._lastIndex - 4) {\n        right = this._lastIndex - 1;\n      }\n\n      if (current - 1 <= 3) {\n        right = 7;\n      }\n\n      if (this._lastIndex - current <= 3) {\n        left = this._lastIndex - 6;\n      }\n\n      for (let i = left; i <= right; i++) {\n        tmpPages.push({ index: i });\n      }\n    }\n\n    this.pages = tmpPages;\n  }\n\n  // status为true表示页码切换，num表示页码，false表示条数切换，num表示条数  e为$event\n  dataChange(status: boolean, num: number, e?): void {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    if (status) {\n      if (num === this._firstIndex - 1 || num === this._lastIndex + 1) {\n        return;\n      }\n      // 清空输入框内容\n      this.quickJumpPage = '';\n      this.jdbPageIndex = num;\n      this.jdbPageIndexChange.emit(this.jdbPageIndex);\n    } else {\n      // 清空输入框内容\n      this.quickJumpPage = '';\n      this.jdbPageSize = num;\n      this.jdbPageSizeChange.emit(num);\n\n      // 切换页数之后需要将页码重置为1\n      this.jdbPageIndex = 1;\n      this.jdbPageIndexChange.emit(this.jdbPageIndex);\n      this.setPageNo();\n    }\n    // this.setPageNo();\n  }\n\n  // 点击跳转按钮快速跳转\n  quickJump() {\n    // 若是输入的页码大于最后一页页码，即超出范围不存在，则清空页码，并使输入框获取焦点\n    if (this.quickJumpPage > this._lastIndex) {\n      this.inputJump.nativeElement.focus();\n      this.quickJumpPage = '';\n      return;\n    }\n\n    // 若输入为空，则不能跳转\n    if (!this.quickJumpPage) {\n      return;\n    }\n\n    this.jdbPageIndex = this.quickJumpPage;\n    this.jdbPageIndexChange.emit(this.jdbPageIndex);\n  }\n\n  // 点击左箭头(为什么使用条数除以2呢)\n  jumpBefore(e, pageSize) {\n    this.dataChange(true, this._current - Math.round(pageSize / 2), e);\n  }\n\n  // 点击右箭头\n  jumpAfter(e, pageSize) {\n    this.dataChange(true, this._current + Math.round(pageSize / 2), e);\n  }\n\n  // 转换为boolean,即实现有这个字段就认为为true,没有即为false\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== 'false');\n  }\n\n  // 校验是否为纯数字\n  isNumber(obj) {\n    const reg = /^[0-9]*$/;\n    return reg.test(obj);\n  }\n\n}\n\n","import { Component, OnInit, Input, Renderer2, HostListener, ElementRef } from '@angular/core';\n\nexport type buttonSize = 'small' | 'large' | 'default';\nexport type buttonType = 'primary' | 'gray' | 'danger' | 'buleline' | 'white';\n\n@Component({\n  selector: 'button[app-jdb-plg-button]',\n  template: `<i class=\"jdb-icon-loading action\" *ngIf=\"loading\"></i> <ng-content></ng-content>`\n  // styleUrls: ['./jdb-plg-button.component.scss']\n})\n\nexport class JdbPlgButtonComponent implements OnInit {\n\n  _el: HTMLElement;\n  nativeElement: HTMLElement;\n  _prefixCls = 'jdb-plg-btn';\n  size: buttonSize;            // size的值 'small' 、 'large' 、 'default'\n  type: buttonType;            // type的值 'primary' 、 'gray' 、 'danger'、'buleline' 、'white'\n  loading: boolean;\n\n  @Input()\n  get jdbSize() {\n    return this.size;\n  }\n  set jdbSize(value: buttonSize) {\n    if (!value) {\n      value = 'default';\n    }\n    this.size = value;\n    // this._renderer.addClass(this._el, this.size);\n    this._setClassMap(this.loading);\n  }\n\n  @Input()\n  get jdbType() {\n    return this.type;\n  }\n  set jdbType(value: buttonType) {\n    if (!value) {\n      value = 'primary';\n    }\n    this.type = value;\n    // this._renderer.addClass(this._el, this.type);\n    this._setClassMap(this.loading);\n  }\n\n  @Input()\n  get jdbLoading() {\n    return this.loading; \n  }\n\n  set jdbLoading(value: boolean | string) {\n    value = value === '' || (value && value !== 'false');\n    this.loading = value;\n    this._setClassMap(this.loading);\n  }\n\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\n\n    this._el = this._elementRef.nativeElement;\n\n    this.nativeElement = this._elementRef.nativeElement;\n    this._renderer.addClass(this._el, this._prefixCls);\n  }\n  _setClassMap(loading) {\n    this._renderer.removeClass(this._el, 'undefined');\n    this._renderer.addClass(this._el, this.size);\n    this._renderer.addClass(this._el, this.type);\n    if (loading) {\n      this._renderer.addClass(this._el, 'loading_disable');\n    } else {\n      this._renderer.removeClass(this._el, 'loading_disable');\n    }\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnChanges,\n  ViewChild,\n  Output,\n  Input,\n  SimpleChanges,\n  OnDestroy,\n  Inject,\n  ElementRef,\n  HostListener,\n  ViewEncapsulation,\n  TemplateRef,\n  EventEmitter,\n  ViewContainerRef,\n  Type,\n  ComponentFactory,\n  ComponentFactoryResolver\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n@Component({\n  selector: 'app-jdb-plg-dialog',\n  template: `<div [ngClass]=\"_customClass\"> <div class=\"_maskClass\" [ngClass]=\"{'hid':!_visible}\" [style.zIndex]=\"1000\"></div> <div class=\"jdb-modal\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'hid':!_visible}\" [ngStyle]=\"{'dispaly':!_visible}\" (click)=\"closeModal($event)\" class=\"_wrapClass\" [ngClass]=\"_wrapClass\" [style.zIndex]=\"1000\" [attr.aria-modalId]=\"modalId\"> <div #modal_content class=\"modal\" [@optionsState]=\"_state\" [ngStyle]=\"_bodyStyleMap\"> <div class=\"modal-content\"> <ng-template [ngIf]=\"_closeable\"> <button class=\"modal-close\" (click)=\"clickCancel($event)\"> <!-- <span class=\"modal-close-x\"></span> --> <span class=\"icon-close\"></span> </button> </ng-template> <div class=\"modal-header\" *ngIf=\"_title||_titleTpl\"> <div class=\"modal-title\" [attr.id]=\"modalId\"> <ng-template #defaultTitle> {{_title}} </ng-template> <ng-template [ngTemplateOutlet]=\"_titleTpl||defaultTitle\"> </ng-template> </div> </div> <div class=\"modal-body\"> <ng-template #defaultContent>{{_content}}</ng-template> <ng-template [ngTemplateOutlet]=\"_contentTpl||defaultContent\"></ng-template> <ng-template #modal_component></ng-template> </div> <div class=\"modal-footer\" *ngIf=\"!_footerHide\"> <ng-template #defalutFooter> <button *ngIf=\"!_isConfirm\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'white'\" (click)=\"clickCancel($event)\"><span>{{_cancelText||'取消'}}</span></button> <button *ngIf=\"!_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"clickOk($event)\"><span>{{_okText||'确认'}}</span></button> <button *ngIf=\"_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"clickOk($event)\" (click)=\"clickOk($event)\"><span>{{_RogerText}}</span></button> </ng-template> <ng-template [ngTemplateOutlet]=\"_footerTpl||defalutFooter\"></ng-template> </div> <div tabindex=\"0\" style=\"width:0px;height:0px;overflow:hidden;\">aaa</div> </div> </div> </div> </div>`,\n  // styleUrls: ['./jdb-plg-dialog.component.scss'],\n  animations: [\n    trigger('optionsState', [\n      state('showM', style({\n        transform: 'translate(-50%, -50%)',\n        opacity: '1',\n        // display: 'block',\n      })),\n      state('hideM', style({\n        transform: 'translate(-50%, -80%)',\n        opacity: '0',\n        // display: 'none',\n      })),\n      transition('showM <=> hideM', animate('200ms ease-out'))\n    ])]\n})\nexport class JdbPlgDialogComponent implements OnInit, AfterViewInit, OnChanges {\n  _customClass = '';\n  _maskClass = '';\n  _bodyStyleMap;\n  modalId: number;\n  _visible = false;\n  _title = '';\n  _closeable = true;\n  _titleTpl: TemplateRef<void>;\n  _content: string | Type<any>;\n  _contentTpl: TemplateRef<void>;\n  _animationStatus = '11';\n  _bodyClass: string;\n  _width = '400px';\n  _footerHide = false;\n  _isConfirm = false;\n  _okText = '';\n  _cancelText = '';\n  _RogerText = '';\n  _state = 'hideM';\n  _footerTpl: TemplateRef<void>;\n  @ViewChild('modal_content') contentEl: ElementRef;\n  @ViewChild('modal_component', { read: ViewContainerRef }) bodyEl: ViewContainerRef;\n  @Output() MvisibileChange: EventEmitter<boolean> = new EventEmitter();\n  @Output() MOnOk: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() MOnCancel: EventEmitter<MouseEvent | KeyboardEvent> = new EventEmitter();\n  // 弹框显隐\n  @Input()\n  set Mvisible(value: boolean) {\n    const visible = this.toBoolean(value);\n    if (this._visible === visible) {\n      return;\n    }\n\n    this._visible = visible;\n    this.MvisibileChange.emit(this._visible);\n  }\n  get Mvisible(): boolean {\n    return this._visible;\n  }\n  // 隐藏footer\n  @Input()\n  set MfooterHiden(value: boolean) {\n    const visible = this.toBoolean(value);\n    if (this._visible === visible) {\n      return;\n    }\n    this._footerHide = visible;\n  }\n  get MfooterHiden(): boolean {\n    return this._footerHide;\n  }\n  // 标题\n  @Input()\n  set Mtitle(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this._titleTpl = value;\n    } else {\n      this._title = value;\n    }\n  }\n  @Input()\n  set Mcontent(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this._contentTpl = value;\n    } else {\n      this._content = value;\n    }\n  }\n  @Input()\n  set Mfooter(value:string|TemplateRef<void>){\n    if (value instanceof TemplateRef){\n      this._footerTpl = value;\n    } \n  }\n  \n  // 自定义宽度\n  @Input()\n  set Mwidth(value: string | number) {\n    this._width = typeof value === 'number' ? value + 'px' : value;\n  }\n\n  // 定位modal位置和样式\n  setStyle() {\n    const el = this.contentEl.nativeElement;\n    this._bodyStyleMap = {\n      ...{ width: this._width }\n    };\n  }\n\n\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(e: KeyboardEvent): void {\n    this.clickCancel(e);\n  }\n\n  // 自定义样式\n  @Input()\n  set Mclass(value: string) {\n    this._customClass = value;\n  }\n\n  @Input()\n  set MOkText(value: string) {\n    this._okText = value;\n  }\n  @Input()\n  set McancelText(value: string) {\n    this._cancelText = value;\n  }\n  @Input()\n  set MRogerText(value: string) {\n    this._isConfirm = true;\n    this._RogerText = value;\n  }\n\n  constructor(private resolver: ComponentFactoryResolver) { }\n  ngOnInit() {\n    this.setStyle();\n  }\n  createDynamicComponent(component: Type<any>) {\n    const factory = this.resolver.resolveComponentFactory(this._content as Type<any>);\n    this.bodyEl.createComponent(factory);\n  }\n  ngAfterViewInit() {\n    \n  }\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._visible) {\n      this._state = 'showM';\n      setTimeout(() => {\n        this.contentEl.nativeElement.parentNode.focus();\n      }, 200);\n    } else {\n      this._state = 'hideM';\n    }\n  }\n  clickCancel(e): void {\n    this._visible = false;\n    this._state = 'hideM';\n    this.MOnCancel.emit(e);\n  }\n  clickOk(e): void {\n    if (this.MOnOk) {\n      this.MOnOk.emit(e);\n    } else {\n      this._visible = false;\n      this._state = 'hideM';\n    }\n  }\n  closeModal(e): void {\n    if ((e.target as HTMLElement).getAttribute('role') === 'dialog') {\n      this.clickCancel(e);\n      this._state = 'hideM';\n    }\n  }\n  toBoolean(value: boolean | string): boolean {\n    return value === '' || (value && value !== false);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  ViewChild,\n  Output,\n  Input,\n  ElementRef,\n  EventEmitter,\n  ViewContainerRef,\n  Type,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Renderer2\n} from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n@Component({\n  selector: 'app-jdb-plg-new-dialog',\n  template: `<div [ngClass]=\"_customClass\"> <div class=\"_newMaskClass\" [ngClass]=\"{'hid':!_visible}\" [style.zIndex]=\"900\"></div> <div class=\"jdb-modal\" tabindex=\"-1\" role=\"dialog\" [ngClass]=\"{'hid':!_visible}\" [ngStyle]=\"{'dispaly':!_visible}\" (click)=\"cusCloseModal($event)\" class=\"_newWrapClass\" [ngClass]=\"_newWrapClass\" [style.zIndex]=\"900\"> <div #modal_content class=\"new-modal\" [@optionsState]=\"_state\" [ngStyle]=\"_bodyStyleMap\"> <div class=\"modal-content\"> <ng-template [ngIf]=\"_closeable\"> <button class=\"new-modal-close\" style=\"outline: none\" (click)=\"closeModel($event)\"> <span class=\"icon-close\"></span> </button> </ng-template> <div class=\"new-modal-header\" *ngIf=\"_title\"> <div class=\"new-modal-title\" [attr.id]=\"modalId\">{{_title}}</div> </div> <div class=\"new-modal-body _modalTextBody\"> <ng-template #modal_component></ng-template> <ng-template #modal_text></ng-template> </div> <div class=\"new-modal-footer\" *ngIf=\"_footer\"> <button *ngIf=\"!_isConfirm\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'gray'\" (click)=\"cancelModel($event)\"><span>{{_cancelText}}</span></button> <button *ngIf=\"!_isConfirm\" class=\"right-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"confirmModel($event)\"><span>{{_okText}}</span></button> <button *ngIf=\"_isConfirm\" class=\"right-btn confirm-btn\" app-jdb-plg-button [jdbSize]=\"'default'\" [jdbType]=\"'primary'\" (click)=\"confirmModel($event)\"><span>{{_okText}}</span></button> </div> </div> </div> </div> </div>`,\n  animations: [\n    trigger('optionsState', [\n      state('showM', style({\n        opacity: '1',\n      })),\n      state('hideM', style({\n        opacity: '0',\n      })),\n      transition('showM <=> hideM', animate('200ms ease-out'))\n    ])]\n})\nexport class JdbPlgNewDialogComponent implements OnInit, AfterViewInit {\n  _visible = false;                 //弹框显示隐藏\n  _title = '提示';                   //弹框标题\n  _bodyStyleMap;                    //弹框样式 \n  _customClass = '';                //自定义容器样式\n  _maskClass = '';                  //自定义遮罩样式\n  _closeable = true;                //是否显示左上角关闭按钮\n  _content: string | Type<void>;    //内容模板\n  _footer = true;                   //是否显示底部按钮\n  _isConfirm = false;               //是否是确认类型的模态框\n  _okText = '';                     //确认按钮文案\n  _cancelText = '';                 //取消按钮文案\n  _state = '';                      //模态框状态\n  _closeType = 'mask';              //自定义关闭模态框的热区\n  _componentParams = {};            //模板参数\n  _text = '';                       //文本内容\n  _class = '';                      //文本类名\n  _style = null;                    //文本样式\n  contentComponentRef: ComponentRef<void>;\n  @ViewChild('modal_content') contentEl: ElementRef;\n  @ViewChild('modal_text') textEl: ElementRef;\n  @ViewChild('modal_component', { read: ViewContainerRef}) bodyEl: ViewContainerRef;\n  @Output() onClose: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() onOk: EventEmitter<MouseEvent> = new EventEmitter();\n  @Output() onCancel: EventEmitter<MouseEvent | KeyboardEvent> = new EventEmitter();\n\n\n  //模态框内容模板\n  @Input()\n  _contentTpl: string | Type<void>;\n\n  //弹框显示隐藏\n  @Input()\n  set visible(value) {\n    this._visible = value;\n    //控制切入和切出动画\n    if (this._visible) {\n      this._state = 'showM';\n    } else {\n      this._state = 'hideM';\n    }\n  }\n  get visible() {\n    return this._visible;\n  }\n\n  //弹框宽度\n  @Input()\n  set _width(value) {\n    this._bodyStyleMap = {\n      width: value\n    }\n  }\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2\n  ) { }\n\n  ngOnInit() {\n    //判断_contentTpl是不是组件实例\n    if (this._contentTpl instanceof Type) {\n      this.createDynamicComponent(this._contentTpl as Type<void>);\n    } else {\n      this.createDynamicDom();\n    }\n  }\n  \n  //创建文本模板内容\n  createDynamicDom(){\n    let insertDiv = this.renderer.createElement('div');\n      let text = this.renderer.createText(this._text);\n      this.renderer.addClass(insertDiv,this._class);\n      this.renderer.appendChild(insertDiv, text);\n      if(this._style){\n        for(let key in this._style){\n          this.renderer.setStyle(insertDiv,key,this._style[key]);\n        }\n      }\n      this.renderer.appendChild(document.querySelector('._modalTextBody'), insertDiv);\n  }\n\n  createDynamicComponent(component: Type<any>): void {\n    //生成组件工厂函数\n    const factory = this.resolver.resolveComponentFactory(component);\n    //生成组件实例\n    this.contentComponentRef = this.bodyEl.createComponent(factory);\n    //模板的输入属性\n    for (let key in this._componentParams) {\n      this.contentComponentRef.instance[key] = this._componentParams[key];\n    }\n    //立刻执行一次变更检测\n    this.contentComponentRef.changeDetectorRef.detectChanges();\n  }\n\n  ngAfterViewInit() {\n    //动态组件实例存在 插入到视图容器中\n    if (this.contentComponentRef) {\n      this.bodyEl.insert(this.contentComponentRef.hostView);\n    }\n  }\n\n  //关闭弹框\n  closeModel(e: MouseEvent): void {\n    this.onClose.emit(e);\n    this._state = 'hideM';\n  }\n\n  //确认弹框\n  confirmModel(e: MouseEvent): void {\n    this.onOk.emit(e);\n    this._state = 'hideM';\n  }\n\n  //取消弹框\n  cancelModel(e: MouseEvent): void {\n    this.onCancel.emit(e);\n    this._state = 'hideM';\n  }\n\n  //点击遮罩关闭\n  cusCloseModal(e: MouseEvent): void {\n    let flag = this.isChildOf(e.target, this.contentEl.nativeElement);\n    if (this._closeType === 'mask' && !flag) {\n      this.onClose.emit(e);\n      this._state = 'hideM';\n    }\n  }\n\n  //阻止冒泡\n  // selfCloseModal(e: MouseEvent): void {\n  //   e.stopPropagation();\n  //   e.cancelBubble = true;\n  // }\n\n  isChildOf(child, parent) {\n    var parentNode;\n    if (child && parent) {\n      parentNode = child.parentNode;\n      while (parentNode) {\n        if (parent === parentNode) {\n          return true;\n        }\n        parentNode = parentNode.parentNode;\n      }\n    }\n    return false;\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appOnlyNumber]'\n})\nexport class OnlyNumberDirective {\n\n  constructor(private el: ElementRef) { }\n  regexStr = '^[0-9]*$';\n  @Input() appOnlyNumber: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\n    const e = <KeyboardEvent>event;\n    if (this.appOnlyNumber) {\n      if ([46, 8, 9, 27, 13, 110, 190].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode === 65 && e.ctrlKey === true) ||\n        // Allow: Ctrl+C\n        (e.keyCode === 67 && e.ctrlKey === true) ||\n        // Allow: Ctrl+V\n        (e.keyCode === 86 && e.ctrlKey === true) ||\n        // Allow: Ctrl+X\n        (e.keyCode === 88 && e.ctrlKey === true) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n        // let it happen, don't do anything\n        return;\n      }\n      const ch = String.fromCharCode(e.keyCode);\n      const regEx = new RegExp(this.regexStr);\n      if (regEx.test(ch)) {\n        return;\n      } else {\n        e.preventDefault();\n      }\n    }\n  }\n\n  // 解决中文输入法输入汉字问题\n  @HostListener('keyup', ['$event']) onKeyUp(event) {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/\\D/g, '');\n  }\n}\n","/**\n * 2018-06-21\n * @author 李佳轩\n * @description 水印指令，组件渲染之前请确保通过静态方法setText设置了需要显示的水印文案，否则显示默认的`JDB`\n * @example\n * <div *ngIf=\"isList\" class=\"caseList\" appWaterMark>\n *      <nz-table ...>\n *          ...\n *      </nz-table>\n * </div>\n */\n\nimport { Directive, ElementRef, OnInit, Renderer2, AfterViewInit } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Directive({\n    selector: '[appWaterMark]'\n})\nexport class WatermarkDirective implements OnInit, AfterViewInit {\n\n    /**\n     * 水印渲染的文案，默认JDB\n     */\n    private static _text: string = '';\n\n    // 大部分时候需要在请求的毁掉里取设置水印文案，所以需要在设置水印文案之后重绘水印\n    private static drawSubject: Subject<boolean> = new Subject<boolean>();\n\n    private draw$: Observable<boolean> = WatermarkDirective.drawSubject.asObservable();\n\n    constructor(\n        private el: ElementRef,\n        private render: Renderer2\n    ) {\n    }\n\n    /**\n     * @method 设置水印渲染的文案。\n     * @param callback 该参数为一个函数或字符串，该参数为函数时用户自定义生成文案的过程，这个回调函数最后应返回字符串，因为这个字符串将被渲染成水印。\n     * 若该参数为字符串，则传入的字符串就是渲染的水印文案\n     */\n    static setText(callback: string | (() => string)): void {\n        if (typeof callback === 'string') {\n            WatermarkDirective._text = callback;\n        } else {\n            WatermarkDirective._text = callback();\n        }\n        WatermarkDirective.drawSubject.next(true);\n    }\n\n\n    /**\n     * @method 通过canvas渲染水印背景，然后设置到指令绑定的元素的背景，然后背景默认重复。\n     * @extends 可以通过改变`fillText()`的个数来增加文案出现的次数。\n     */\n    draw() {\n        // const name = localStorage.getItem('cxNickName') || '';\n        // const phone = localStorage.getItem('cxPhone') || '';\n        // const str = `CXWEB-${name}${phone.slice(-4)}`;\n        if (WatermarkDirective._text) {\n            const node = document.createElement('canvas');\n            node.width = 500;\n            node.height = 200;\n            node.style.display = 'none';\n\n            const ctx = node.getContext('2d');\n            ctx.rotate(-10 * Math.PI / 180);\n            ctx.font = '16px microsoft yahei';\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'Middle';\n\n            ctx.fillText(WatermarkDirective._text, 0, 200);\n            // ctx.fillText(str, 80, 150);\n            ctx.fillText(WatermarkDirective._text, 165, 85);\n            // ctx.fillText(str, 230, 160);\n            ctx.fillText(WatermarkDirective._text, 300, 190);\n            this.render.setStyle(this.el.nativeElement, 'backgroundImage', `url(${node.toDataURL('image/png')})`);\n        }\n        // this.render.setStyle(this.el.nativeElement, 'background', `red`);\n    }\n\n    ngOnInit() {\n        this.draw$.subscribe(() => {\n            this.draw();\n        });\n    }\n    ngAfterViewInit() {\n        this.draw(); // 调用渲染水印方法\n    }\n}\n","/*\n  下拉框功能：\n  种类：单选，多选，选几项\n  样式：高度 middle small large\n*/\n\nimport {\n\tViewContainerRef,\n\tComponent,\n\tOnInit,\n\tInput,\n\tforwardRef,\n\tAfterViewInit,\n\tRenderer2,\n\tElementRef,\n\tViewChild,\n\tRenderer,\n\tViewChildren,\n\tOnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n@Component({\n\tselector: 'app-jdb-plg-select',\n\ttemplate: `<!-- 单选 --> <div *ngIf=\"_jdbMode=='chooseOne'\" #inputDom class=\"jdb-plg-select-one\" (click)=\"dialogShow($event)\" [ngClass]=\"_classMap\" [ngStyle]=\"{'width':_width}\"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder\" [hidden]=\"inputText!==''\">{{_placeHolder}}</div> <!-- 单选 --> <!-- <span class=\"chooseOne\" [hidden]=\"inputText==''\">{{inputText}}</span> --> <input class=\"chooseOne chooseOneInput\" [hidden]=\"inputText===''\" type=\"text\" [(ngModel)]=\"inputText\" readonly> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <!-- 单选 --> <li *ngFor=\"let option of _selectList \" (click)=\"item($event,option) \" [ngClass]=\"{active:ngModelValue===option[_optionValue],disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> <!-- 单选时下拉图标 --> <span class=\"select-icon icon-select-arrow \" [hidden]=\"isShowClear \"></span> </div> <!-- 多选 --> <div *ngIf=\"_jdbMode=='chooseMore' \" #inputDom class=\"jdb-plg-select-more \" (click)=\"dialogShow($event) \" [ngClass]=\"_classMap \" [ngStyle]=\"{ 'width':_width} \"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder \" [hidden]=\"inputText.length !=0 \">{{_placeHolder}}</div> <!-- 多选item --> <ul class=\"chooseMore \"> <li *ngFor=\"let item of inputText \"> {{item[_optionText]}} <span class=\"item-delete icon-close \" (click)=\"deleteMoreItem($event,item) \"></span> </li> </ul> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <li class=\"choose-more \" *ngFor=\"let option of _selectList \" (click)=\"chooseMore($event,option) \" [ngClass]=\"{ 'active':moreIndex(option),disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <!-- {{_optionText=='option'?option:option[_optionText]}} --> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> <span [hidden]=\"!moreIndex(option) \" class=\"choose-right icon-selected \"></span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> </div> <!-- 选中几项 --> <div *ngIf=\"_jdbMode=='chooseNum' \" #inputDom class=\"jdb-plg-select-num \" (click)=\"dialogShow($event) \" [ngClass]=\"_classMap \" [ngStyle]=\"{ 'width':_width} \"> <!-- placeHolder --> <div class=\"jdb-plg-select-placeholder \" [hidden]=\"inputText!==0 \">{{_placeHolder}}</div> <span class=\"choose-tip \" [hidden]=\"inputText===0 \">已选中{{inputText}}项</span> <ul #optionList [ngClass]=\"{ 'options-show':show, 'options-no-margin':!spaceFlex} \" class=\"options \"> <li class=\"choose-more \" *ngFor=\"let option of _selectList \" (click)=\"numClick($event,option) \" [ngClass]=\"{ 'active':moreIndex(option),disabled:option[_jdbItemDisabled] === _jdbSureDisabled} \"> <!-- {{_optionText=='option'?option:option[_optionText]}} --> <img class=\"img-box\" *ngIf=\"_showImgBox&&option.imgUrl\" [src]=\"option.imgUrl\" alt=\"\"> <span class=\"img-box\" *ngIf=\"_showImgBox&&!option.imgUrl\"></span> <span class=\"text-box\">{{_optionText=='option'?option:option[_optionText]}}</span> <span [hidden]=\"!moreIndex(option) \" class=\"choose-right icon-selected \"></span> </li> </ul> <!-- 清空图标 --> <span class=\"close-icon icon-empty \" [hidden]=\"!isShowClear \" (click)=\"clearInputText($event) \"></span> <span class=\"select-icon icon-select-arrow \" [hidden]=\"isShowClear \"></span> </div> <!-- 遮罩层 --> <div class=\"jdb-plg-select-master \" *ngIf=\"show \"></div>`,\n\t// styleUrls: ['./jdb-plg-select.component.scss'],\n\tproviders: [\n\t\t{\n\t\t\t// 注册成为表单控件\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: forwardRef(() => JdbPlgSelectComponent),\n\t\t\tmulti: true\n\t\t}\n\t]\n})\nexport class JdbPlgSelectComponent implements OnInit, OnChanges {\n\t_selectList: any;\n\t_size = 'middle';\n\t_width: string;\n\t_optionText = 'text'; // 默认值\n\t_optionValue = 'value'; // 默认值\n\t_optionPosition: string;\n\tisShowClear = false; // 是否展示清空x\n\t_jdbClear = false;\n\t_jdbDisabled = false; // 默认未禁用\n\t_jdbMode = 'chooseOne';\n\t_placeHolder = '请选择';\n\t_chooseMoreArray = []; // 多选选中元素数组\n\t_classMap = {};\n\tlistHeight: number;\n\tsavaHeight = true;\n\tspaceFlex = true; // 是否有剩余空间，默认有\n\t_showImgBox = false; // 下拉框是否带图片\n\t_jdbItemDisabled = 'disabled'; // 默认为disabled\n\t_jdbSureDisabled = 2; // 为1是启用 2是禁用\n\t_jdbNoDisabled = 1; // 为2表示不禁用\n\t_jdbError = false; //  输入框输入项报错标红\n\n\t// 自定义类名\n\t@Input() jdbClassName = '';\n\n\t// 选项中某项禁用字段\n\t@Input()\n\tset jdbItemDisabled(value) {\n\t\tthis._jdbItemDisabled = value;\n\t}\n\tget jdbItemDisabled(): string {\n\t\treturn this._jdbItemDisabled;\n\t}\n\n\t// 输入框是否处于报错状态\n\t@Input()\n\tset jdbError(value) {\n\t\tthis._jdbError = this.toBoolean(value);\n\t}\n\tget jdbError(): boolean {\n\t\treturn this._jdbError;\n\t}\n\n\t// 选项中某项确认禁用\n\t@Input()\n\tset jdbSureDisabled(value) {\n\t\tthis._jdbSureDisabled = value;\n\t}\n\tget jdbSureDisabled(): any {\n\t\treturn this._jdbSureDisabled;\n\t}\n\n\t// // 选项中某项不禁用\n\t// @Input()\n\t// set jdbNoDisabled(value) {\n\t//   this._jdbNoDisabled = value;\n\t// }\n\t// get jdbNoDisabled(): any {\n\t//   return this._jdbNoDisabled;\n\t// }\n\n\t// 选项中某项确认禁用\n\t@Input()\n\tset jdbPlaceHolder(value) {\n\t\tthis._placeHolder = value;\n\t}\n\tget jdbPlaceHolder(): any {\n\t\treturn this._placeHolder;\n\t}\n\n\t// 是否需要显示清空\n\t@Input()\n\tset jdbClear(value) {\n\t\tthis._jdbClear = this.toBoolean(value);\n\t}\n\tget jdbClear(): boolean {\n\t\treturn this._jdbClear;\n\t}\n\n\t// 下拉框数组，必写\n\t@Input()\n\tset jdbSelectList(value) {\n\t\t// 循环数组，判断是否需要展示带有图片下拉框\n\t\tif (value) {\n\t\t\tconst arr = [];\n\t\t\tvalue.forEach((element) => {\n\t\t\t\tconst type = typeof element;\n\t\t\t\tif (type === 'string' || type === 'number') {\n\t\t\t\t\tarr.push({\n\t\t\t\t\t\ttext: element,\n\t\t\t\t\t\tvalue: element\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tarr.push(element);\n\t\t\t\t\tif (element.imgUrl) {\n\t\t\t\t\t\tthis._showImgBox = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._selectList = arr;\n\t\t}\n\t}\n\tget jdbSelectList(): any {\n\t\treturn this._selectList;\n\t}\n\n\t// 下拉框尺寸，默认为高度30px；small为24px,large为40px;\n\t@Input()\n\tset jdbSize(value) {\n\t\tthis._size = value;\n\t}\n\tget jdbSize(): string {\n\t\treturn this._size;\n\t}\n\n\t// 自定义宽度\n\t@Input()\n\tset jdbWidth(value) {\n\t\tthis._width = value;\n\t}\n\tget jdbWidth(): string {\n\t\treturn this._width;\n\t}\n\n\t// 展示在页面内容字段名称\n\t@Input()\n\tset jdbOptionText(value) {\n\t\tthis._optionText = value;\n\t}\n\tget jdbOptionText(): string {\n\t\treturn this._optionText;\n\t}\n\n\t// 返回给serve对应字段名称\n\t@Input()\n\tset jdbOptionValue(value) {\n\t\tthis._optionValue = value;\n\t}\n\tget jdbOptionValue(): string {\n\t\treturn this._optionValue;\n\t}\n\n\t// 下拉框禁用\n\t@Input()\n\tset jdbDisabled(value) {\n\t\tthis._jdbDisabled = this.toBoolean(value);\n\t}\n\tget jdbDisabled(): boolean {\n\t\treturn this._jdbDisabled;\n\t}\n\n\t// select模式，默认为单选，chooseMore多选\n\t@Input()\n\tset jdbMode(value) {\n\t\tthis._jdbMode = value;\n\t}\n\tget jdbMode(): string {\n\t\treturn this._jdbMode;\n\t}\n\n\t@ViewChild('inputDom') inputDom: ElementRef;\n\t@ViewChild('optionList') optionList: ElementRef;\n\n\tshow = false;\n\tinputText: any;\n\tngModelValue: any = ''; // 单选为字符串，多选为数组\n\tconstructor(private renderer2: Renderer2, private renderer: Renderer) { }\n\n\tngOnInit() { }\n\n\t// tslint:disable-next-line:use-life-cycle-interface\n\tngAfterViewInit() {\n\t\t// 点击除下拉框以外位置，下拉框隐藏\n\t\tthis.renderer2.listen('document', 'click', () => {\n\t\t\tthis.show = false;\n\t\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t});\n\n\t\t// 监听输入框元素，若有内容时则滑上显示x\n\t\tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseenter', () => {\n\n\t\t\tif (this._jdbClear && !this._jdbDisabled) {\n\t\t\t\t// 若输入框不存在内容，则不做任何操作\n\t\t\t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.isShowClear = true;\n\t\t\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t\t}\n\t\t});\n\n\t\tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseleave', () => {\n\t\t\tif (this._jdbClear && !this._jdbDisabled) {\n\t\t\t\t// 若输入框不存在内容，则不做任何操作\n\t\t\t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.isShowClear = false;\n\t\t\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t\t}\n\t\t});\n\n\t\t// if (this._jdbClear && !this._jdbDisabled) {\n\t\t// \t// 监听输入框元素，若有内容时则滑上显示x\n\t\t// \tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseenter', () => {\n\t\t// \t\t// 若输入框不存在内容，则不做任何操作\n\t\t// \t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\n\t\t// \t\tthis.isShowClear = true;\n\t\t// \t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t// \t});\n\t\t// \tthis.renderer2.listen(this.inputDom.nativeElement, 'mouseleave', () => {\n\t\t// \t\t// 若输入框不存在内容，则不做任何操作\n\t\t// \t\tif (this._jdbMode === 'chooseOne' && (this.inputText === '' || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseNum' && (this.inputText === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t} else if (this._jdbMode === 'chooseMore' && (this.inputText.length === 0 || this.show)) {\n\t\t// \t\t\treturn;\n\t\t// \t\t}\n\n\t\t// \t\tthis.isShowClear = false;\n\t\t// \t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\t// \t});\n\t\t// }\n\t}\n\n\tngOnChanges() {\n\t\t// 当数组取到后重新判断ngModel绑定的值，解决异步数据不回显问题\n\t\tif (this._selectList) {\n\t\t\tif (this.ngModelValue === null || this.ngModelValue === '' || this.ngModelValue === undefined) {\n\t\t\t\t// 若传入值为null，则清空数据\n\t\t\t\tif (this._jdbMode === 'chooseMore') {\n\t\t\t\t\tthis.inputText = [];\n\t\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\t\tthis.inputText = 0;\n\t\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t\t} else {\n\t\t\t\t\tthis.inputText = '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._jdbMode === 'chooseOne') {\n\t\t\t\t\tthis.forOneStart(this.ngModelValue);\n\t\t\t\t} else if (this._jdbMode === 'chooseMore') {\n\t\t\t\t\tthis.forMoreStart(this.ngModelValue);\n\t\t\t\t\tthis.setClassMap();\n\t\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\t\tthis.forNumStart(this.ngModelValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setClassMap();\n\t}\n\n\tsetClassMap() {\n\t\tif (this._jdbMode === 'chooseMore') {\n\t\t\tthis._classMap = {\n\t\t\t\t[`${this._size}`]: true,\n\t\t\t\t[`jdb-plg-select-bottom-${this._size}`]: this.inputText.length !== 0,\n\t\t\t\t['jdb-plg-select-disabled']: this._jdbDisabled,\n\t\t\t\t[this.jdbClassName]: true,\n\t\t\t\t['jdb-plg-select-error']: this._jdbError // 输入项报错标红\n\t\t\t};\n\t\t} else {\n\t\t\tthis._classMap = {\n\t\t\t\t[`${this._size}`]: true,\n\t\t\t\t['jdb-plg-select-disabled']: this._jdbDisabled,\n\t\t\t\t[this.jdbClassName]: true,\n\t\t\t\t['jdb-plg-select-error']: this._jdbError // 输入项报错标红\n\t\t\t};\n\t\t}\n\t}\n\n\t// 点击x，清空内容\n\tclearInputText(e) {\n\t\te.stopPropagation();\n\n\t\tif (this._jdbMode === 'chooseOne') {\n\t\t\tthis.inputText = '';\n\t\t} else if (this._jdbMode === 'chooseMore') {\n\t\t\tthis.inputText = [];\n\t\t\tthis._chooseMoreArray = [];\n\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\tthis.inputText = 0;\n\t\t\tthis._chooseMoreArray = [];\n\t\t}\n\t\tthis.isShowClear = !this.isShowClear;\n\n\t\t// 清空后输入需要重新告知父组件\n\t\tthis.ngModelValue = '';\n\t\tthis.onChange('');\n\n\t\tthis.setClassMap();\n\t}\n\n\t// 点击输入框下拉菜单显隐\n\tdialogShow(e) {\n\t\te.stopPropagation();\n\t\t// 若外侧组件告知禁用，则点击没有任何效果\n\t\tif (this._jdbDisabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.isShowClear = false;\n\t\tthis.show = !this.show;\n\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\t\tthis.optionPosition(this.optionList.nativeElement.clientHeight);\n\t}\n\n\t// 浮层出现是在输入框上方还是下方\n\toptionPosition(listHeight) {\n\t\tconst offetTop = this.getTop(this.inputDom.nativeElement); // 元素offetTop\n\t\tconst scrollTop = this.getScrollTop(this.inputDom.nativeElement.parentElement);\n\t\tconst clientHeight = document.documentElement.clientHeight || document.body.clientHeight; // 屏幕高度\n\t\tconst elemHeight = this.inputDom.nativeElement.clientHeight; // 元素高度\n\t\tlet paddingHeight;\n\t\tif (this.jdbSize === 'small') {\n\t\t\tpaddingHeight = 2;\n\t\t} else if (this.jdbSize === 'large') {\n\t\t\tpaddingHeight = 9;\n\t\t} else if (this.jdbSize === 'middle') {\n\t\t\tpaddingHeight = 5;\n\t\t}\n\t\tconst flexHeight = clientHeight - offetTop - elemHeight - paddingHeight + scrollTop; // 剩余高度\n\t\t// console.log(\n\t\t// \t'元素offsetTop', offetTop,\n\t\t// \t'父元素scrollTop', scrollTop,\n\t\t// \t'元素高度', elemHeight,\n\t\t// \t'屏幕高度', clientHeight,\n\t\t// \t'计算后剩余高度', flexHeight,\n\t\t// \t'浮层元素高度', listHeight,\n\t\t// );\n\t\tif (flexHeight < listHeight) {\n\t\t\t// 空间不足\n\t\t\tthis.spaceFlex = false;\n\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'transform-origin', '100% 100%');\n\t\t\tif (listHeight < 188) {\n\t\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'top', -listHeight - 5 + 'px');\n\t\t\t} else {\n\t\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'top', -190 - paddingHeight + 'px');\n\t\t\t}\n\t\t} else {\n\t\t\tthis.spaceFlex = true;\n\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'top', '');\n\t\t\tthis.renderer.setElementStyle(this.optionList.nativeElement, 'transform-origin', '0% 0%');\n\t\t}\n\t}\n\n\t// ControlValueAccessor 自定义表单 与父组件的ngModel绑定起来\n\twriteValue(value: any): void {\n\t\tthis.ngModelValue = value;\n\t\tif (value === null || value === '' || value === undefined) {\n\t\t\t// 若传入值为null，则清空数据\n\t\t\tif (this._jdbMode === 'chooseMore') {\n\t\t\t\tthis.inputText = [];\n\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\tthis.inputText = 0;\n\t\t\t\tthis._chooseMoreArray = [];\n\t\t\t} else {\n\t\t\t\tthis.inputText = '';\n\t\t\t}\n\t\t} else {\n\t\t\tif (this._jdbMode === 'chooseOne') {\n\t\t\t\tthis.forOneStart(value);\n\t\t\t} else if (this._jdbMode === 'chooseMore') {\n\t\t\t\tthis.forMoreStart(value);\n\t\t\t\tthis.setClassMap();\n\t\t\t} else if (this._jdbMode === 'chooseNum') {\n\t\t\t\tthis.forNumStart(value);\n\t\t\t}\n\t\t}\n\t}\n\tonChange: (value: any) => void = () => null;\n\n\tregisterOnChange(fn: (value: any) => void): void {\n\t\tthis.onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: () => void): void { }\n\n\tsetDisabledState(isDisabled: boolean): void { }\n\n\t// 单选，若有初始选项，则遍历数组\n\tforOneStart(value) {\n\t\tthis._selectList.forEach((elem) => {\n\t\t\tif (elem[this._optionValue] === value) {\n\t\t\t\tthis.inputText = elem[this._optionText];\n\t\t\t}\n\t\t});\n\t}\n\n\t// 多选，若有初始值则遍历数组\n\tforMoreStart(value) {\n\t\t// 判断传入值类型 老版本为string,新版本为数组，兼容新老版本\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = value.toString().split(',');\n\t\t}\n\t\tvalue.forEach((item) => {\n\t\t\tthis._selectList.forEach((elem) => {\n\t\t\t\tif (elem[this._optionValue] === item) {\n\t\t\t\t\t// inputText为输入框中展示的内容 判断是否有重新赋值text和value字段\n\t\t\t\t\tlet textName = this._optionText;\n\t\t\t\t\tlet valueName = this._optionValue;\n\t\t\t\t\tif (this.jdbOptionText) {\n\t\t\t\t\t\ttextName = this.jdbOptionText;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.jdbOptionValue) {\n\t\t\t\t\t\tvalueName = this.jdbOptionValue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// key为变量的赋值方法\n\t\t\t\t\tconst obj = {};\n\t\t\t\t\tobj[textName] = elem[this._optionText];\n\t\t\t\t\tobj[valueName] = elem[this._optionValue];\n\t\t\t\t\tthis.inputText.push(obj);\n\n\t\t\t\t\t// this._chooseMoreArray为传出去的数据\n\t\t\t\t\tthis._chooseMoreArray.push(elem[this._optionValue]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// 选几项\n\tforNumStart(value) {\n\t\t// 判断传入值类型 老版本为string,新版本为数组，兼容新老版本\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = value.toString().split(',');\n\t\t}\n\n\t\tvalue.forEach((item) => {\n\t\t\tthis._selectList.forEach((elem) => {\n\t\t\t\tif (elem[this._optionValue] === item) {\n\t\t\t\t\tthis.inputText++;\n\t\t\t\t\tthis._chooseMoreArray.push(elem[this._optionValue]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// 单选某一元素点击\n\titem(e, item) {\n\t\t// 阻止事件冒泡\n\t\te.stopPropagation();\n\n\t\t// 判断show是否为true\n\t\tif (!this.show) {\n\t\t\treturn;\n\t\t}\n\t\t// 判断该项是否可点击\n\t\tif (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputText = item[this._optionText];\n\t\tthis.show = !this.show;\n\t\tthis.renderer.setElementClass(this.inputDom.nativeElement, 'jdb-plg-select-active', this.show);\n\n\t\tthis.ngModelValue = item[this._optionValue];\n\t\tthis.onChange(item[this._optionValue]);\n\t}\n\n\t// 多选元素点击\n\tchooseMore(e, item) {\n\t\tlet flag = false;\n\t\t// 阻止事件冒泡\n\t\te.stopPropagation();\n\t\t// 判断show是否为true\n\t\tif (!this.show) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断该项是否可点击\n\t\tif (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断是否存在\n\t\tthis.inputText.forEach((element, index) => {\n\t\t\tif (element[this._optionValue] === item[this._optionValue]) {\n\t\t\t\tflag = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tif (flag) {\n\t\t\tthis.deleteMoreItem(e, item);\n\t\t\treturn;\n\t\t}\n\n\t\t// inputText为输入框中展示的内容\n\t\tlet textName = this._optionText;\n\t\tlet valueName = this._optionValue;\n\t\tif (this.jdbOptionText) {\n\t\t\ttextName = this.jdbOptionText;\n\t\t}\n\t\tif (this.jdbOptionValue) {\n\t\t\tvalueName = this.jdbOptionValue;\n\t\t}\n\t\tconst obj = {};\n\t\tobj[textName] = item[this._optionText];\n\t\tobj[valueName] = item[this._optionValue];\n\t\tthis.inputText.push(obj);\n\n\t\t// this._chooseMoreArray为传出去的数据\n\t\tthis._chooseMoreArray.push(item[this._optionValue]);\n\t\tthis.ngModelValue = this._chooseMoreArray; // 传出数据格式为数组\n\t\tthis.onChange(this._chooseMoreArray);\n\n\t\tthis.show = true;\n\t\tthis.setClassMap();\n\t}\n\n\t// 选中多少项li点击\n\tnumClick(e, item) {\n\t\tlet flag = false;\n\t\t// 阻止事件冒泡\n\t\te.stopPropagation();\n\n\t\t// 判断show是否为true\n\t\tif (!this.show) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断该项是否可点击\n\t\tif (item[this._jdbItemDisabled] === this._jdbSureDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 判断是否点击过\n\t\tthis._chooseMoreArray.forEach((element, index) => {\n\t\t\tif (element === item[this._optionValue]) {\n\t\t\t\tflag = true;\n\t\t\t\tthis._chooseMoreArray.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\tif (flag) {\n\t\t\tthis.inputText--;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputText++;\n\t\tthis.show = true;\n\t\tthis._chooseMoreArray.push(item[this._optionValue]);\n\t\tthis.ngModelValue = this._chooseMoreArray; // 传出格式为数组\n\t\tthis.onChange(this._chooseMoreArray);\n\t}\n\n\t// 判断某一项是否存在于inputText中\n\tmoreIndex(item) {\n\t\tlet flag = false;\n\t\tthis._chooseMoreArray.forEach((element, index) => {\n\t\t\tif (element === item[this._optionValue]) {\n\t\t\t\tflag = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\treturn flag;\n\t}\n\n\t// 删除某一项\n\tdeleteMoreItem(e, item) {\n\t\te.stopPropagation();\n\t\tif (this._jdbDisabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inputText.forEach((element, index) => {\n\t\t\tif (element[this._optionValue] === item[this._optionValue]) {\n\t\t\t\tthis.inputText.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tthis._chooseMoreArray.forEach((element, index) => {\n\t\t\tif (element === item[this._optionValue]) {\n\t\t\t\tthis._chooseMoreArray.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t\tthis.ngModelValue = this._chooseMoreArray; // 传出格式为数组\n\t\tthis.onChange(this._chooseMoreArray);\n\t\tthis.setClassMap();\n\t}\n\n\t// 转换为boolean,即实现有这个字段就认为为true,没有即为false\n\ttoBoolean(value: boolean | string): boolean {\n\t\treturn value === '' || (value && value !== 'false');\n\t}\n\n\t// 计算某元素的offetTop\n\tgetTop(e) {\n\t\tlet offset = e.offsetTop;\n\t\tif (e.offsetParent != null) {\n\t\t\toffset += this.getTop(e.offsetParent);\n\t\t}\n\t\treturn offset;\n\t}\n\n\t// 计算某元素的scrollTop\n\tgetScrollTop(e) {\n\t\tlet offset = e.scrollTop;\n\t\tif (e.parentElement != null) {\n\t\t\toffset += this.getScrollTop(e.parentElement);\n\t\t}\n\t\treturn offset;\n\t}\n}\n","import { Component, OnInit, EventEmitter, TemplateRef, Input, Output, ElementRef, ContentChild, forwardRef, HostListener, ViewEncapsulation, AfterViewInit, Renderer2, ViewChild } from '@angular/core';\nimport { NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n    selector: 'app-jdb-plg-input',\n    template: `<span class=\"input-group-addon\" *ngIf=\"_addOnContentBefore\"> <ng-template [ngTemplateOutlet]=\"_addOnContentBefore\"> </ng-template> </span> <ng-template [ngIf]=\"_type=='text'\"> <div class=\"input-text-wrap\" [ngClass]=\"_inputWrapClass\"> <span class=\"input-prefix\" *ngIf=\"_prefixContent\"> <ng-template [ngTemplateOutlet]=\"_prefixContent\"> </ng-template> </span> <span class=\"input-content\"> <input (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" [disabled]=\"_disabled\" [readonly]=\"_readonly\" [attr.id]=\"jdbId\" [attr.type]=\"_type\" class=\"input\" [ngClass]=\"_classMap\" [attr.placeholder]=\"_placeHolder\" [(ngModel)]=\"jdbValue\" [style.width]=\"width\" maxlength=\"{{jdbMaxLength}}\" #input /> <span class=\"input-clear\" *ngIf=\"_clear && _value && _type=='text'\" (click)=\"clearTxt($event)\"> <i class=\"close-icon icon-empty\"></i> </span> </span> <span class=\"ant-input-suffix\" *ngIf=\"_suffixContent\"> <i class=\"iconfont icon-guanbi2fill\"></i> <ng-template [ngTemplateOutlet]=\"_suffixContent\"> </ng-template> </span> <div class=\"input-error-tip\" *ngIf=\"jdbError && _errorContent\" [style.width]=\"width\"> <i class=\"icon-message-error error-tip\"></i> <p class=\"input-error-content\"> <ng-template [ngTemplateOutlet]=\"_errorContent\"> </ng-template> </p> </div> </div> </ng-template> <span class=\"input-group-addon\" *ngIf=\"_addOnContentAfter\"> <ng-template [ngTemplateOutlet]=\"_addOnContentAfter\"> </ng-template> </span> <ng-template [ngIf]=\"_type=='textarea'\"> <div class=\"input-text-wrap\"> <textarea (blur)=\"_emitBlur($event)\" (focus)=\"_emitFocus($event)\" (input)=\"textareaOnChange($event)\" [attr.id]=\"jdbId\" #inputTextarea [disabled]=\"_disabled\" [readonly]=\"_readonly\" type=\"textarea\" class=\"input input-textarea\" [ngClass]=\"_classMap\" [attr.placeholder]=\"jdbPlaceHolder\" [(ngModel)]=\"jdbValue\" maxlength=\"{{jdbMaxLength}}\" [style.width]=\"width\"></textarea> <span class=\"textarea-wc-tip\" [ngClass]=\"{'textarea-wc-tip-red': jdbValue&&jdbValue.length == jdbMaxLength}\" *ngIf=\"jdbMaxLength && !_disabled &&!_readonly\">{{(jdbValue&&jdbValue.length)||0}}/{{jdbMaxLength}}</span> </div> </ng-template>`,\n    // styleUrls: ['./jdb-plg-input.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => JdbPlgInputComponent),\n            multi: true\n        }\n    ],\n})\n\nexport class JdbPlgInputComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n    _value = '';\n    _type = 'text';\n    _placeHolder = '';\n    _size = 'default';\n    _disabled = false;\n    _readonly = false;\n    _error = false;\n    _classMap: any;\n    _inputWrapClass: Array<string> = [];\n    _clear = false;\n    _maxlength: number;\n    _autoPromptData: Array<any> = [];\n    _composing = false;\n    @Input() width = '300px';\n    // ngModel Access\n    onChange: (value: string) => void = () => null;\n    @ContentChild('jdbErrorContent') _errorContent: TemplateRef<any>;\n    @ContentChild('addContentBefore') _addOnContentBefore: TemplateRef<any>;\n    @ContentChild('addContentAfter') _addOnContentAfter: TemplateRef<any>;\n    @ContentChild('prefixContent') _prefixContent: TemplateRef<any>;\n    @ContentChild('suffixContent') _suffixContent: TemplateRef<any>;\n    @Output() jdbBlur: EventEmitter<MouseEvent> = new EventEmitter();\n    @Output() jdbFocus: EventEmitter<MouseEvent> = new EventEmitter();\n\n    @ViewChild('input') inputEl: ElementRef;\n    @ViewChild('clearBtn') clearBtnEl: ElementRef;\n\n    constructor(private render: Renderer2) {\n\n    }\n\n    ngOnInit() {\n        // this._inputWrapClass =[`input-text-wrap-${this._size}`];\n        if (this._prefixContent) {\n            this._inputWrapClass.push('prefix');\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.clearBtnEl) {\n            this.render.setStyle(this.clearBtnEl.nativeElement, 'top', this.inputEl.nativeElement.height / 2);\n        }\n    }\n\n    @HostListener('compositionstart', ['$event'])\n    compositionStart(e: CompositionEvent): void {\n        this._composing = true;\n    }\n\n    @HostListener('compositionend', ['$event'])\n    compositionEnd(e: CompositionEvent): void {\n        this._composing = false;\n        this.onChange(this._value);\n    }\n\n    @Input()\n    set jdbType(type: string) {\n        this._type = type;\n    }\n    get jdbType(): string {\n        return this._type;\n    }\n\n    @Input()\n    set jdbPlaceHolder(placeHolder: string) {\n        this._placeHolder = placeHolder;\n    }\n    get jdbPlaceHolder(): string {\n        return this._placeHolder;\n    }\n\n    @Input()\n    set jdbSize(size: string) {\n        this._size = { large: 'lg', small: 'sm' }[size];\n        this.setClassMap();\n    }\n    get jdbSize(): string {\n        return this._size;\n    }\n\n    @Input()\n    set jdbDisabled(disabled: boolean) {\n        this._disabled = this.toBoolean(disabled);\n        this.setClassMap();\n    }\n    get jdbDisabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set jdbReadonly(readonly: boolean) {\n        this._readonly = this.toBoolean(readonly);\n    }\n    get jdbReadonly(): boolean {\n        return this._readonly;\n    }\n\n    @Input()\n    set jdbValue(value: string) {\n        if ((this._value === value) || ((this._value == null) && (value == null))) {\n            return;\n        }\n        this._value = value;\n        if (!this._composing) {\n            this.onChange(value);\n        }\n    }\n    get jdbValue(): string {\n        return this._value || '';\n    }\n    @Input()\n    set jdbError(value: boolean) {\n        this._error = this.toBoolean(value);\n        this.setClassMap();\n    }\n    get jdbError(): boolean {\n        return this._error;\n    }\n    @Input()\n    set jdbClear(value: boolean) {\n        this._clear = this.toBoolean(value);\n    }\n    get jdbClear(): boolean {\n        return this._clear;\n    }\n\n    @Input()\n    set jdbMaxLength(value: number) {\n        this._maxlength = value;\n    }\n    get jdbMaxLength(): number {\n        return this._maxlength;\n    }\n\n    @Input()\n    set jdbPromptData(value: Array<any>) {\n        this._autoPromptData = value;\n    }\n    get jdbPromptData(): Array<any> {\n        return this._autoPromptData;\n    }\n    writeValue(value: string): void {\n        this._value = value;\n    }\n    registerOnChange(fn: (_: string) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n    }\n    _emitBlur($event) {\n        this.jdbBlur.emit($event);\n    }\n\n    _emitFocus($event) {\n        this.jdbFocus.emit($event);\n    }\n    textareaOnChange($event) {\n\n    }\n    setClassMap() {\n        this._classMap = {\n            [`input-${this._type}-${this._size}`]: true,\n            ['input-disabled']: this._disabled,\n            ['input-error']: this._error\n        };\n    }\n    clearTxt(e) {\n        e.stopPropagation();\n        this._value = '';\n        this.onChange('');\n    }\n\n    toBoolean(value: boolean | string): boolean {\n        return value === '' || (value && value !== 'false');\n    }\n}\n","export const keyCode = {\n    UP: 38,\n    DOWN: 40,\n    ENTER: 13\n\n}","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  Inject,\n  Renderer2,\n  AfterViewInit,\n  ViewChild,\n  forwardRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { NgModel, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AutoCompleteResult } from './autocomplete.result';\nimport { keyCode } from './keycode';\n@Component({\n  selector: 'app-jdb-plg-autocomplete',\n  template: `<div class=\"autoprompt\"> <app-jdb-plg-input [jdbType]=\"'text'\" [jdbPlaceHolder]=\"jdbPlaceHolder\" [jdbClear]=\"true\" [(ngModel)]=\"_searchWord\" [width]=\"width\" (ngModelChange)=\"changeInput()\"> </app-jdb-plg-input> <ul #resultele [hidden]=\"!_listShow\" [style.width]=\"width\"> <li *ngFor=\"let item of searchResult;index as i\" [ngClass]=\"{'selected': activeIndex == i}\" (click)=\"selectedItem(item,i)\"> <p> {{item.text}} </p> </li> </ul> </div> <!-- <div class=\"autoprompt-mask\" [hidden]=\"!_listShow\" (click)=\"closePop($event)\"></div> -->`,\n  // styleUrls: ['./jdb-plg-autocomplete.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JdbPlgAutocompleteComponent),\n      multi: true\n    }\n  ]\n})\nexport class JdbPlgAutocompleteComponent implements OnInit, AfterViewInit, ControlValueAccessor, OnChanges {\n  _searchParam = 'key';    // 异步模式下，向后端传的搜索参数\n  _serverApi = '/';        // 异步模式下，接口URL\n  _searchWord = '';\n  searchResult: AutoCompleteResult[] = [];    // 存储搜索结果\n  _listShow = false;\n  activeIndex = 0;\n  selectOne: any;    // 存储选中数据\n  ngModelValue = '';\n  @ViewChild('resultele') resultEle: ElementRef;    // 盛放搜索结果的容器\n  @Input() jdbPlaceHolder = '';\n  @Input() width = '300px';\n  _dataSource = [];    // 同步模式下一次性传入搜索数据\n  @Input() dataKey = 'value';    // 自定义数据key的键值\n  @Input() dataVal = 'text';     // 自定义数据的value键值\n  @Input() jdbDataAsyn = false;    //  是否异步；默认同步处理\n  @Output() onSelected: EventEmitter<AutoCompleteResult> = new EventEmitter(); // 选中回调\n  onChange: (value: string) => void = () => null;\n  constructor(private el: ElementRef,\n              // @Inject('jdbPlgBaseApi') private jdbPlgBaseApi,\n              private render: Renderer2) { }\n  ngOnInit() {\n  }\n  ngAfterViewInit() {\n    this.render.listen(this.el.nativeElement, 'input', this.debounce(() => {\n      this.activeIndex = -1;\n      this.inputHandle();\n    }, 500, false));\n    // 处理搜索框点击事件\n    this.render.listen(this.el.nativeElement.querySelector('input[type=\"text\"]'), 'click', (evt) => {\n      this.activeIndex = -1;\n      if (!this._searchWord) {\n        this.searchResult = this.jdbDataSource;\n      } else {\n        this.searchResult = this.searchResult = this.jdbDataSource.filter((obj) => obj['text'].indexOf(this._searchWord) !== -1);\n      }\n      if (this.searchResult.length > 0) {\n        this._listShow = true;\n        setTimeout(_ => {\n          this.resetPopDirection(this.el.nativeElement);\n        }, 0);\n      }\n      evt.stopPropagation();\n    });\n    // 处理关闭搜索结果\n    this.render.listen('document', 'click', (evt) => {\n      this._listShow = false;\n    });\n    this.render.listen(this.el.nativeElement.querySelector('input[type=\"text\"]'), 'blur', () => {\n      if ( (this.selectOne && this._searchWord !== this.selectOne.text) || !this.selectOne ) {\n        this._searchWord = '';\n        this.ngModelValue = '';\n        this.selectOne = null;\n        this.onChange('');\n      }\n    });\n  }\n  ngOnChanges(simples: SimpleChanges) {\n  }\n  // 键盘事件\n  @HostListener('keydown', ['$event']) OnKeyDown(event: KeyboardEvent) {\n    switch (event.which) {\n      case keyCode.UP:\n        this.activeIndex--;\n        if (this.activeIndex < 0) {\n          this.activeIndex = this.searchResult.length - 1;\n        }\n        this.setSearchWord();\n        break;\n      case keyCode.DOWN:\n        this.activeIndex++;\n        if (this.activeIndex >= this.searchResult.length) {\n          this.activeIndex = 0;\n        }\n        this.setSearchWord();\n        break;\n      case keyCode.ENTER:\n        const item = <AutoCompleteResult>this.searchResult[this.activeIndex];\n        this.selectedItem(item, this.activeIndex);\n        break;\n      default:\n        this.activeIndex = -1;\n    }\n  }\n  // 粘贴事件\n  @HostListener('paste', ['$event']) OnPaste(event: Event) {\n    this.inputHandle();\n  }\n  // 处理input和paste事件\n  inputHandle() {\n    if (this._searchWord) {\n      if (this.jdbDataAsyn) { // 异步请求接口，返回数据\n        // this.popupList();\n      } else {    // 同步过滤处理\n        this.searchResult = this.jdbDataSource.filter((obj) => obj['text'].indexOf(this._searchWord) !== -1);\n        // if (this.searchResult.length > 0) {\n        //     this.selectOne = this.searchResult[this.activeIndex];\n        // }\n      }\n      // 显示结果\n      if (this.searchResult.length > 0) {\n        this._listShow = true;\n      } else {\n        this._listShow = false;\n      }\n      // 要先让搜索结果展示，才能获取到相关高度，处理显示位置\n      setTimeout(_ => {\n        this.resetPopDirection(this.el.nativeElement);\n      }, 0);\n    }\n  }\n  closePop(event) {\n    if (this.selectOne && this._searchWord && this._listShow) {\n      if (this._searchWord !== this.selectOne.text) {\n        this.ngModelValue = '';\n        this.onChange('');\n        this.selectOne = null;\n        this._searchWord = '';\n      } else {\n        this.onSelected.emit(this.selectOne.value);\n        this.ngModelValue = this.selectOne.value;\n        this.onChange(this.ngModelValue);\n      }\n    }\n    this._listShow = false;\n    // event.stopPropagation();\n  }\n  // 设置选中样式\n  setSelectClass(obj) {\n    if (obj) {\n      return this._searchWord === obj.text;\n    }\n    return;\n  }\n  // 设置文本框选中内容\n  setSearchWord() {\n    this.selectOne = <AutoCompleteResult>this.searchResult[this.activeIndex];\n    this._searchWord = this.selectOne.text;\n  }\n  // 选中单个条目\n  selectedItem(item, index) {\n    this.activeIndex = index;\n    this.selectOne = item;\n    this._searchWord = item.text;\n    this._listShow = false;\n    this.onSelected.emit(this.selectOne.value);\n    this.ngModelValue = this.selectOne.value;\n    this.onChange(this.ngModelValue);\n    event.stopPropagation();\n  }\n  // 查询接口\n  // popupList() {\n  //   this.searchResult = [];\n  //   this.jdbPlgBaseApi.post(this._serverApi,\n  //     { [this._searchParam]: this._searchWord }, false).subscribe(\n  //     (res) => {\n  //       if (+res.error.returnCode === 0) {\n  //         res.data = res.data.map((obj, index) => ({\n  //           value: obj[this.dataKey],\n  //           text: obj[this.dataVal]\n  //         }));\n  //         this.searchResult = <AutoCompleteResult[]>res.data;\n  //         this._listShow = true;\n  //         // if (this.searchResult.length > 0) {\n  //         //     this.selectOne = this.searchResult[this.activeIndex];\n  //         // }\n  //       }\n  //     });\n  // }\n  // 函数防抖\n  debounce(fn, wait, immediate) {\n    let timeout,\n      args,\n      context,\n      timestamp,\n      result;\n    const later = function () {\n      const last = new Date().getTime() - timestamp;\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = fn.apply(context, args);\n          if (!timeout) {\n            context = args = null;\n          }\n        }\n      }\n    };\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = new Date().getTime();\n      const callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) {\n        result = fn.apply(context, args);\n        context = args = null;\n      }\n      return result;\n    };\n  }\n  // 设置弹出位置\n  resetPopDirection(node) {\n    const getOffsetTop = function (ele) {\n      let top = ele.offsetTop;\n      if (!ele.offsetParent) {\n        top += getOffsetTop(ele.offsetParent);\n      }\n      return top;\n    };\n    const getScrollTop = function (ele) {\n      let top = ele.scrollTop;\n      if (!ele.parentElement) {\n        top += getScrollTop(ele.parentElement);\n      }\n      return top;\n    };\n    const nodeTop = getOffsetTop(node),\n      clientHeight = document.documentElement.clientHeight || document.body.clientHeight,\n      scrollTop = getScrollTop(node.parentElement),\n      popHeight = this.resultEle.nativeElement.offsetHeight || 250,\n      inputHeight = node.querySelector('input[type=\"text\"]').offsetHeight;\n    // console.log('clientHeight:' + clientHeight + 'nodeTop:' + nodeTop + 'nodeHeight:' + nodeHeight + 'scrollTop:' + scrollTop);\n    const lastDirect = clientHeight - (nodeTop - scrollTop) - popHeight - inputHeight;\n    if (lastDirect <= 0) {\n      this.render.addClass(this.resultEle.nativeElement, 'pop_top');\n    } else {\n      this.render.removeClass(this.resultEle.nativeElement, 'pop_top');\n    }\n  }\n  // 清空文本框处理\n  changeInput() {\n    if (this._searchWord === '') {\n      this.ngModelValue = '';\n      this.onChange('');\n    }\n  }\n  @Input()\n  set jdbDataSource(value) {\n    this._dataSource = value;\n    if (!this.jdbDataAsyn && this._dataSource.length > 0) {\n      if (typeof this._dataSource[0] === 'string') {\n        this._dataSource = this._dataSource.map((val, index) => ({\n          value: val,\n          text: val\n        }));\n      } else if (typeof this._dataSource[0] === 'object' && (this.dataKey !== 'value' || this.dataVal !== 'text')) {\n        this._dataSource = this._dataSource.map((obj, index) => ({\n          value: obj[this.dataKey],\n          text: obj[this.dataVal]\n        }));\n      }\n      this.searchResult = this._dataSource;\n    }\n  }\n  get jdbDataSource() {\n    return this._dataSource;\n  }\n  @Input()\n  set jdbSearchParam(val) {\n    this._searchParam = val;\n  }\n  get jdbSearchParam() {\n    return this._searchParam;\n  }\n  @Input()\n  set jdbServerApi(val) {\n    this._serverApi = val;\n  }\n  get jdbServerApi() {\n    return this._serverApi;\n  }\n  writeValue(value: string): void {\n    this.ngModelValue = value;\n    if (this.ngModelValue === '') {\n      this._searchWord = '';\n    }\n  }\n  registerOnChange(fn: (_: string) => void): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: () => void): void {\n  }\n}","import { Injectable, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { JdbPlgToastComponent } from '../../components/jdb-plg-toast/jdb-plg-toast.component';\n\n@Injectable()\nexport class CommonMethodService {\n\n  vRef;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n  ) {\n  }\n\n  /*常用公共方法*/\n\n  /*验证手机号是否合法\n  * number 校验的手机号码*/\n  testPhoneNumber(number: string) {\n    const phoneReg = /^[1][0-9]{10}$/;\n    return phoneReg.test(number);\n  }\n\n  /*验证姓名是否合法\n   name 校验的姓名*/\n  testName(name: string) {\n    const nameReg = /^[\\u4E00-\\u9FA5·]{2,20}$/;\n    return nameReg.test(name);\n  }\n\n  /*验证代偿金额是否为最大1亿，最小一元，只可以两位小数\n  num单位为分*/\n  testRepayAmount(num) {\n    const nameReg = /^([1-9][0-9]{2,9}|10000000000)$/;\n    return nameReg.test(num);\n  }\n\n  /*数字格式化为千位分隔\n  num单位为分*/\n  numFormat(num) {\n    num = num / 100;\n    return num.toFixed(2).replace(/\\d{1,3}(?=(\\d{3})+(\\.\\d*)?$)/g, '$&,');\n  }\n\n  /**\n   * @method 将'yyyy-MM-dd~yyyy-MM-dd'格式，转化为startTime、endTime（10位时间戳）\n   * @param value 'yyyy-MM-dd~yyyy-MM-dd'格式字符串\n   */\n  toTimestamp(value) {\n    const timeObj = {};\n    if (value) {\n      const arrDate = value.split('~');\n      timeObj['startTime'] = new Date(arrDate[0]).getTime() / 1000;\n      timeObj['endTime'] = new Date(arrDate[1]).getTime() / 1000;\n    } else {\n      timeObj['startTime'] = '';\n      timeObj['endTime'] = '';\n    }\n    return timeObj;\n  }\n\n\n  /* 将时间戳转化为不同时间格式\n  * @param time必传 10位的时间戳\n  * @param type选传 默认'yyyy-MM-dd HH:mm:ss'格式  type为1 'yyyy-MM-dd HH:mm:ss'; type为2 'yyyy-MM-dd HH:mm'; type为3 'yyyy-MM-dd'; type为4 'yyyy-MM'; type为5 'yyyy';\n  */\n  toDate(time, type = 1) {\n    const myDate = new Date(time * 1000);\n    const year = myDate.getFullYear();\n    const month = this.add0(myDate.getMonth() + 1);\n    const day = this.add0(myDate.getDate());\n    const hour = this.add0(myDate.getHours());\n    const minute = this.add0(myDate.getMinutes());\n    const second = this.add0(myDate.getSeconds());\n    switch (type) {\n      case 1:\n        return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n      case 2:\n        return `${year}-${month}-${day} ${hour}:${minute}`;\n      case 3:\n        return `${year}-${month}-${day}`;\n      case 4:\n        return `${year}-${month}`;\n      case 5:\n        return `${year}`;\n    }\n  }\n  add0(m) {\n    return m < 10 ? `0${+m}` : m;\n  }\n\n  /* \n    参数1: 当前日期的前/后几天，n<0是为当前日期的后几天，反之为当前日期的前几天,默认为0;\n    参数2: 拼接的符号，符号'-'(2018-07-16),符号'/'(2018/07/16),默认为'-';\n    参数3: 是否返回的是时间戳格式，默认是时间戳格式\n    返回值: n=0时，返回当前日期的数组，否则第一个元素为当前日期，第二个元素为目标日期。\n  */\n  getTarDate(n = 0, joinStr = '-', isTimeStamp = true) {\n    let date = new Date();\n    let tarYear, tarMonth, tarDay, curYear, curMonth, curDay, curDate, tarDate;\n    //获取当前年月日\n    curYear = date.getFullYear();\n    curMonth = date.getMonth() + 1;\n    curDay = date.getDate();\n    //获取当前前n天或后n天的年月日\n    date.setDate(date.getDate() - n);\n    tarYear = date.getFullYear();\n    tarMonth = date.getMonth() + 1;\n    tarDay = date.getDate();\n    curDate = curYear + joinStr + (curMonth < 10 ? ('0' + curMonth) : curMonth) + joinStr + (curDay < 10 ? ('0' + curDay) : curDay);\n    tarDate = tarYear + joinStr + (tarMonth < 10 ? ('0' + tarMonth) : tarMonth) + joinStr + (tarDay < 10 ? ('0' + tarDay) : tarDay);\n    if (!isTimeStamp) {\n      return n === 0 ? [curDate] : [curDate, tarDate];\n    }\n    if (joinStr !== '-') {\n      let reg = new RegExp(joinStr, \"g\");\n      curDate = curDate.replace(reg, '-');\n      tarDate = tarDate.replace(reg, '-');\n    }\n    return n === 0 ? [new Date(curDate + ' 00:00:00').getTime()] : [new Date(curDate + ' 00:00:00').getTime(), new Date(tarDate + ' 23:59:59').getTime()];\n  }\n\n\n  setRootViewContainerRef(vRef) {\n    this.vRef = vRef;\n  }\n\n  toast(msg, delayTime = 3000) {\n    // 通过ComponentFactoryResolver 创建出动态组件的实例\n    const childComponent = this.componentFactoryResolver.resolveComponentFactory(JdbPlgToastComponent);\n    const comInstance = this.vRef.createComponent(childComponent);\n    comInstance.instance.msg = msg;\n    comInstance.changeDetectorRef.detectChanges();\n    setTimeout(() => {\n      comInstance.destroy();\n    }, delayTime);\n  }\n  //方式丢失精度四种算法\n  //乘法\n  accMul(arg1, arg2) {\n    let m = 0, s1 = arg1.toString(), s2 = arg2.toString();\n    try { m += s1.split(\".\")[1].length } catch (e) { }\n    try { m += s2.split(\".\")[1].length } catch (e) { }\n    return Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\")) / Math.pow(10, m)\n  }\n  //除法\n  accDiv(arg1, arg2) {\n    let t1 = 0, t2 = 0, r1, r2;\n    try { t1 = arg1.toString().split(\".\")[1].length } catch (e) { }\n    try { t2 = arg2.toString().split(\".\")[1].length } catch (e) { }\n    r1 = Number(arg1.toString().replace(\".\", \"\"))\n    r2 = Number(arg2.toString().replace(\".\", \"\"))\n    return this.accMul((r1 / r2), Math.pow(10, t2 - t1));\n  }\n  //加法\n  accAdd(arg1, arg2) {\n    let r1, r2, m;\n    try { r1 = arg1.toString().split(\".\")[1].length } catch (e) { r1 = 0 }\n    try { r2 = arg2.toString().split(\".\")[1].length } catch (e) { r2 = 0 }\n    m = Math.pow(10, Math.max(r1, r2))\n    return (arg1 * m + arg2 * m) / m\n  }\n  //减法\n  accSubtr(arg1, arg2) {\n    let r1, r2, m, n;\n    try { r1 = arg1.toString().split(\".\")[1].length } catch (e) { r1 = 0 }\n    try { r2 = arg2.toString().split(\".\")[1].length } catch (e) { r2 = 0 }\n    m = Math.pow(10, Math.max(r1, r2));\n    n = (r1 >= r2) ? r1 : r2;\n    return ((arg1 * m - arg2 * m) / m).toFixed(n);\n  }\n\n}\n","'use strict';\nfunction isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n}\nfunction isObject(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Object]\";\n}\n\nfunction isDate(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Date]\";\n}\n\nfunction toJson(value) {\n    var jsonObj = {};\n    try {\n        jsonObj = JSON.parse(value);\n    } catch (e) {\n        console.log('to json parse error');\n    }\n    return jsonObj;\n}\nfunction serializeValue(v) {\n    if (isObject(v)) {\n        return isDate(v) ? v.toISOString() : toJson(v);\n    }\n    return v;\n}\nfunction encodeUriQuery(val, pctEncodeSpaces?) {\n    return encodeURIComponent(val).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n}\n\nexport function jQueryLikeParamSerializer(params) {\n    if (!params) return '';\n    var parts = [];\n    serialize(params, '', true);\n    return parts.join('&');\n\n    function serialize(toSerialize: any, prefix: any, topLevel?: any) {\n        if (isArray(toSerialize)) {\n            toSerialize.forEach((value, index) => {\n                serialize(value, prefix + '[' + (isObject(value) ? index : '') + ']');\n            });\n        } else if (isObject(toSerialize) && !isDate(toSerialize)) {\n            for (let key in toSerialize) {\n                serialize(toSerialize[key], prefix +\n                    (topLevel ? '' : '.') +\n                    key +\n                    (topLevel ? '' : ''));\n\n                // serialize(toSerialize[key], prefix +\n                //     (topLevel ? '' : '[') +\n                //     key +\n                //     (topLevel ? '' : ']'));\n            }\n        } else {\n            parts.push(encodeUriQuery(prefix) + '=' +\n                (toSerialize == null ? '' : encodeUriQuery(serializeValue(toSerialize))));\n        }\n    }\n}\n","const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst propIsEnumerable = Object.prototype.propertyIsEnumerable;\nexport function toObject(val: any) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n  return Object(val);\n}\nexport function objectAssign(target: any, ...source: any[]) {\n  let from: any;\n  const to = toObject(target);\n  let symbols: any;\n  for (let s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (const key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n    if ((<any>Object).getOwnPropertySymbols) {\n      symbols = (<any>Object).getOwnPropertySymbols(from);\n      for (let i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n}\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class SendStatisticService {\n    private emitStatistic = new Subject();\n    StatisticOutPut$ = this.emitStatistic.asObservable();\n    constructor() {\n\n    }\n\n    emitStatisticData(value) {\n        if (value.length !== 0) {\n            this.emitStatistic.next(value);\n        }\n    }\n}","import { CommonMethodService } from './common-method.service';\n//import { Cookie } from 'ng2-cookies';\n// let Cookie = require('ng2-cookies');\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n// import 'rxjs/add/observable/throw';\nimport { filter, catchError } from 'rxjs/operators';\n// import 'rxjs/add/operator/filter';\n// import 'rxjs/add/operator/catch';\nimport { jQueryLikeParamSerializer } from './query-string';\nimport { objectAssign } from './object-assign';\n\nimport { StatisticData } from '../../config/statistic.config';\nimport { SendStatisticService } from './send-statistic.service';\n\nlet statisticList = [];\n@Injectable()\nexport class JdbPlgBaseService {\n  vRef;\n  timer: any = null;\n  //收集的每一个接口的数据结构\n  newStatisticData: StatisticData = {\n    from: '',\n    operator: '',\n    memberId: '',\n    service: {\n      apiException: {\n        requestTime: null,\n        url: '',\n        params: null,\n        resCode: null,\n        resMessage: '',\n        errorMessage: ''\n      }\n    }\n  };\n  //收集的每一个接口的公共信息\n  baseObj: any = {\n    from: null,\n    operator: null,\n    memberId: null,\n  };\n\n  constructor(\n    private http: HttpClient,\n    private commonService: CommonMethodService,\n    private sendStatisticService: SendStatisticService\n  ) {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    //轮询去发送数据，并清空队列\n    this.timer = setInterval(() => {\n      this.sendStatisticService.emitStatisticData(statisticList);\n      statisticList = [];\n    }, 10000);\n  }\n\n  setRootViewContainerRef(vRef) {\n    this.vRef = vRef;\n    this.commonService.setRootViewContainerRef(vRef);\n  }\n\n  /**\n   *\n   * @param apiName\n   * @param dataObj\n   * @param isIntercept 是否拦截处理returnCode != 0 的情况\n   */\n  post(apiName, dataObj, options) {\n    let time = new Date().getTime();\n    let loginToken;\n    let loginWay;\n    let orgUid;\n    // 系统来源\n    let from;\n    // 获取接口的apiException\n    this.newStatisticData.service.apiException = {\n      requestTime: null,\n      url: '',\n      params: null,\n      resCode: null,\n      resMessage: '',\n      errorMessage: ''\n    };\n    let apiException = JSON.parse(JSON.stringify(this.newStatisticData.service.apiException));\n    this.newStatisticData.service.apiException = apiException;\n    if (options && options.tokenObj) {\n      loginToken = localStorage.getItem(options.tokenObj.loginToken);\n      loginWay = localStorage.getItem(options.tokenObj.loginWay);\n      orgUid = localStorage.getItem(options.tokenObj.orgUid);\n      from = localStorage.getItem(options.tokenObj.from);\n    }\n    let loginObj: any = {};\n    let data: any = {};\n    let currentRoute = location.hash.split('/')[1];\n    if (loginToken) {\n      if (orgUid) {\n        loginObj = {\n          'loginToken': loginToken,\n          'loginWay': loginWay,\n          'orgUid': orgUid,\n          'jdbDhTraceId': time + '-' + parseInt(Math.random() * (100000 + 1) + 1 + '')\n        };\n      } else {\n        loginObj = {\n          'loginToken': loginToken,\n          'loginWay': loginWay,\n          'jdbDhTraceId': time + '-' + parseInt(Math.random() * (100000 + 1) + 1 + '')\n        };\n      }\n      data = objectAssign({}, loginObj, dataObj);\n    } else {\n      data = objectAssign({}, dataObj);\n    }\n    // 請求參數\n    apiException.params = data;\n    data = jQueryLikeParamSerializer(data);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' });\n    const requestoptions = {\n      headers: headers\n    };\n    let reqUrl = apiName;\n    //统计数据添加from和operator字段\n    this.baseObj.from = from;\n    this.baseObj.operator = localStorage.getItem('nickName');\n    this.baseObj.memberId = localStorage.getItem('memberId');\n    //统计数据添加请求url\n    apiException.url = reqUrl;\n    return this.http.post(reqUrl, data || {}, requestoptions)\n      .pipe(filter((res: any) => {\n        // 根据joinTraceId是否为true 判断是否需要拼接日志号 （目前只有电催系统需要）\n        if ( currentRoute != 'login' && options && options.joinTraceId) {\n          res.error.returnUserMessage = res.error.returnUserMessage + '<br/>(日志号:' + loginObj.jdbDhTraceId + ')';\n        }\n        const endTime = new Date().getTime();\n        //统计接口请求时长\n        apiException.requestTime = endTime - time;\n        //校验接口返回的数据结构格式\n        if (!(res.hasOwnProperty('data') && res.hasOwnProperty('error'))) {\n          this.commonService.toast('系统接口格式错误！');\n          options && options.reset && options.reset();\n          return false;\n        }\n        if (options.fns && options.fns.length != 0) {\n          let len = options.fns.length;\n          for (let i = 0; i < len; i++) {\n            let fn = options.fns[i];\n            if (res.error && res.error.returnCode * 1 === fn.returnCode && currentRoute != 'login') {\n              fn.callback();\n            }\n          }\n        }\n        if (res.error && res.error.returnCode * 1 == 0) {\n          //统计数据添加returnCode，returnUserMessage信息\n          apiException.resCode = res.error.returnCode;\n          apiException.resMessage = res.error.returnUserMessage;\n          //拷贝公共信息\n          this.newStatisticData = Object.assign(this.newStatisticData, this.baseObj);\n          //去除logDataApi、loginApi、qrcodeApi三个接口\n          if (options && !options.noLog) {\n            statisticList.push(this.newStatisticData);\n          }\n          return true;\n        }\n        // 统计数据添加returnCode，returnUserMessage信息\n        apiException.resCode = res.error.returnCode;\n        apiException.resMessage = res.error.returnUserMessage;\n        this.newStatisticData = Object.assign(this.newStatisticData, this.baseObj);\n        if (options && !options.noLog ) {\n          statisticList.push(this.newStatisticData);\n        }\n        //兼容登录组件中qrcodeApi和loginApi两个接口老的写法\n        if (typeof (options) === 'boolean') {\n          if (options) {\n            this.commonService.toast(res && res.error && res.error.returnUserMessage);\n            return false;\n          } else {\n            return true;\n          }\n        }\n        //是否拦截处理\n        if (options.isIntercept) {\n          this.commonService.toast(res && res.error && res.error.returnUserMessage);\n          return false;\n        } else {\n          return true;\n        }\n      }))\n      .pipe(catchError((error: any) => {\n        // 统计错误信息\n        apiException.errorMessage = error;\n        this.newStatisticData = Object.assign(this.newStatisticData, this.baseObj);\n        if (options && !options.noLog ) {\n          statisticList.push(this.newStatisticData);\n        }\n        return Observable.throw(error || 'Server error');\n      }));\n  }\n\n\n\n  stamp2string(stamp) {\n    if (stamp) {\n      let date = new Date(stamp).toJSON();\n      return date.split('T')[0];\n    }\n    return null;\n  }\n\n  download(apiName, params) {\n    // let cookieStr = Cookie.get('loginInfo');\n    let cookieObj: any = {};\n    let cookieData: any = {};\n    // if (cookieStr) {\n    //   try {\n    //     cookieObj = JSON.parse(cookieStr);\n    //     cookieData = {\n    //       loginToken: cookieObj.loginToken,\n    //       employeeId: cookieObj.empId\n    //     };\n    //   }\n    //   catch (e) {\n    //     console.log('parse cookie error...');\n    //   }\n    // }\n\n    let paramsObj = objectAssign({}, cookieData, params);\n    let url = apiName + '?';\n    for (let key in paramsObj) {\n      if (paramsObj[key]) {\n        url += key + '=' + encodeURIComponent(paramsObj[key]) + '&';\n      }\n    }\n    window.location.href = url;\n  }\n\n  getPicSize(file) {\n    let arr = {};\n    let reader = new FileReader();\n    reader.onload = function (e: any) {\n      let data = e.target.result;\n      //加载图片获取图片真实宽度和高度\n      let image = new Image();\n      image.onload = function () {\n        let width = image.width;\n        let height = image.height;\n        arr = {\n          height: height,\n          width: width\n        };\n        return arr;\n      };\n      image.src = data;\n    };\n    reader.readAsDataURL(file);\n  }\n}\n","import { Injectable, ComponentFactoryResolver } from '@angular/core';\n@Injectable()\nexport class FillTableService {\n    constructor() {\n    }\n    /*\n        lines:number  表格展示的行数\n        lists:Array<any>  异步获取的数据\n        flag:boolean  是否在空白行栏展示操作按钮,默认取unShowOpt字段\n    */\n    fillTable(lines: number, lists:Array<any>, flag?:boolean) {\n        lines = lines || 10;\n        lists = lists || [];\n        flag = flag || true;\n        let aLength = lists.length;\n        let mLength = lines - aLength;\n        let fillObj = {unShowOpt:flag};\n        let keys;\n        if (aLength !== 0) {\n            lists.forEach(element => {\n                element.unShowOpt = !flag;\n            });\n            keys = Object.keys(lists[0]);\n            if (keys.length !== 0) {\n                keys.forEach(element => {\n                    if(element !== \"unShowOpt\"){\n                        fillObj[element] = Object.prototype.toString.call(lists[0][element]) == \"[object Array]\" ? [] : '';\n                    }\n                });\n            }\n        }\n        if (aLength !== 0 && mLength>0) {\n            for(let i=0;i<mLength;i++){\n                lists.push(fillObj);\n            }\n        }\n        return lists;\n    }\n}\n","import { Injectable, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Type, ViewContainerRef } from '@angular/core';\nimport { JdbPlgNewDialogComponent } from '../../components/jdb-plg-new-dialog/jdb-plg-new-dialog.component';\n\nexport interface Options {\n    /**\n     * 自定义父容器类，可选\n     */\n    customClass?: string;\n    /**\n     * 自定义遮罩类，可选\n     */\n    maskClass?: string;\n    /**\n     * 自定义模态框主体样式，可选\n     */\n    bodyStyle?: any;\n    /**\n     * 控制模态框显示/隐藏\n     * true隐藏 fasle显示\n     * 可选\n     */\n    visible?: boolean;\n    /**\n     * 弹框标题，可选\n     */\n    title?: string;\n\n    /**\n     * 是否显示右上角关闭按钮，默认显示\n     * true隐藏 false不显示\n     * 可选\n     */\n    closeable?: boolean;\n    /**\n     * 模态框内容模板，必选\n     */\n    component?: Type<any>;\n    /**\n     * 默认内容为文本\n     * 组件模板component和文本模板同时配置\n     * 优先显示组件模板\n     */\n    text?:string;\n    /**\n     * 当默认内容为文本时，设置文本的类名\n    */\n    class?:string;\n    /**\n     * 当默认内容为文本时，设置文本的样式\n     * class和style同时配置\n     * 优先显示style\n    */\n    style?:Object;\n    /**\n     * 模板参数\n     */\n    componentParams?:Object;\n    /**\n     * 模态框宽度\n     * 默认400px\n     */\n    width?: number;\n    /**\n     * 是否显示/隐藏底部按钮，默认显示\n     * true显示 false隐藏\n     */\n    footer?: boolean;\n    /**\n     * 是否是确认模态框，默认不是\n     * true是 false不是\n     */\n    isConfirm?: boolean;\n    /**\n     * 确认按钮文案\n     */\n    okText?: string;\n    /**\n     * 取消按钮文案\n     */\n    cancelText?: string;\n    /**\n     * 自定义弹框关闭类型，默认为mask\n     * mask:点击除模态框区域以外的位置关闭模态框\n     * custom:自主触发关闭操作\n     * 可选\n     */\n    closeType?: string;\n    /**\n     * 视图容器\n     * 必选\n     */\n    container:ViewContainerRef;\n    /**\n     * 监听右上角关闭事件，默认为关闭模态框，没有额外的动作\n     * 可选\n     */\n    onClose?: () => void;\n    /**\n     * 监听确认事件，默认为关闭模态框，没有额外的动作\n     * 可选\n     */\n    onOk?: () => void;\n    /**\n     * 监听取消事件，默认为关闭模态框，没有额外的动作\n     * 可选\n     */\n    onCancel?: () => void;\n\n}\n\n@Injectable()\nexport class JdbModalService {\n    componentRef: ComponentRef<JdbPlgNewDialogComponent>;\n    _componentRefList = [];\n    _options: Options = {\n        customClass: '',\n        maskClass: '',\n        bodyStyle: null,\n        visible: false,\n        title: '',\n        closeable: true,\n        component: null,\n        text:'',\n        componentParams:{},\n        width: null,\n        footer: true,\n        container:null,\n        isConfirm: false,\n        okText: '',\n        cancelText: '',\n        class:'',\n        style:null,\n        onClose: () => {\n            this.destroy();\n        },\n        onOk: () => {\n            this.destroy();\n        },\n        onCancel: () => {\n            this.destroy();\n        }\n    }\n    constructor(\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) { \n\n\n    }\n\n    //动态创建模态框,返回模态框实例\n    create(options: Options): ComponentRef<JdbPlgNewDialogComponent> {\n        this._options = {\n            customClass: '',\n            maskClass: '',\n            bodyStyle: null,\n            visible: false,\n            title: '',\n            closeable: true,\n            component: null,\n            text:'',\n            componentParams:{},\n            width: null,\n            footer: true,\n            container:null,\n            isConfirm: false,\n            okText: '',\n            cancelText: '',\n            class:'',\n            style:null,\n            onClose: () => {\n                this.destroy();\n            },\n            onOk: () => {\n                this.destroy();\n            },\n            onCancel: () => {\n                this.destroy();\n            }\n        }\n        let componentFactory = this.componentFactoryResolver.resolveComponentFactory(JdbPlgNewDialogComponent);\n        let componentRef = options.container.createComponent(componentFactory);\n        this._componentRefList.push(componentRef);\n        //assign配置\n        if (options) {\n            Object.assign(this._options, options);\n        }\n        this.assignProps(componentRef);\n        //获取组件实例的根节点并append到body上\n        window.document.body.appendChild((componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement);\n        return componentRef;\n    }\n\n    //模态框实例上添加属性\n    assignProps(componentRef: ComponentRef<JdbPlgNewDialogComponent>): void {\n        let _options = this._options;\n        let ins = componentRef.instance;\n        ins.visible = _options.visible || true;\n        ins._title = _options.title || '提示';\n        ins._width = _options.width ? `${_options.width}px` : '400px';\n        ins._state = 'showM';\n        ins._contentTpl = _options.component;\n        ins._componentParams = _options.componentParams;\n        ins._customClass = _options.customClass;\n        ins._maskClass = _options.maskClass;\n        ins._isConfirm = _options.isConfirm;\n        ins._okText = _options.okText || '确认';\n        ins._cancelText = _options.cancelText || '取消';\n        ins._footer = _options.footer;\n        ins._closeable = _options.closeable;\n        ins._closeType = _options.closeType || 'mask';\n        ins._text = _options.text || 'hello';\n        ins._class = _options.class || 'defaultTextClass';\n        ins._style = _options.style;\n        ins.onClose.subscribe((e) => {\n            _options.onClose();\n        })\n        ins.onOk.subscribe((e) => {\n            _options.onOk();\n        })\n        ins.onCancel.subscribe((e) => {\n            _options.onCancel();\n        })\n    }\n\n    //销毁模态框\n    destroy(): void {\n        let len = this._componentRefList.length-1;\n        if(this._componentRefList[len]){\n            this._componentRefList[len].destroy();\n        }\n        this._componentRefList.pop();\n    }\n\n    //triggerOk\n    triggerOk():void{\n        this._options.onOk();\n    }\n\n    //triggerClose\n    triggerClose():void{\n        this._options.onClose();\n    }\n\n    //triggerCancel\n    triggerCancel():void{\n        this._options.onCancel();\n    }\n}\n\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-table-error',\n  template: `<div class=\"jdb-plg-table-error\"> {{tableErrorText}} </div>`,\n  // styleUrls: ['./jdb-plg-table-error.component.scss']\n})\nexport class JdbPlgTableErrorComponent implements OnInit {\n\n  /*\n    功能：实现表格报错文案水平居中\n  */\n\n  @Input() tableErrorText = '暂无数据';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Pipe,PipeTransform } from '@angular/core';\n\n@Pipe({name:'provinceReformPipe'})\nexport class ProvinceReformPipe implements PipeTransform{\n    transform(val:any):any{\n        if(val.length === 0){\n            return '';\n        }\n        return val.join('、');\n    }\n}","import { Pipe,PipeTransform } from '@angular/core';\n\n@Pipe({name:'amountReformPipe'})\nexport class AmountReformPipe implements PipeTransform{\n    transform(val:any):string{\n        if(val === 0){\n            return '0.00';\n        }\n        if(!val){\n            return '';\n        }\n        return (val/100).toFixed(2);\n    }\n}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jdb-plg-timeline-item',\n  template: `<div class=\"timeline-item\"> <div class=\"timeline-item-tail\" [ngClass]=\"{'timeline-item-tail-last': isLast}\"></div> <div class=\"timeline-item-circle\"></div> <div class=\"timeline-item-content\"> <div class=\"timeline-cardBox\" [ngStyle]=\"{'width': cardBoxWidth,'background': cardBgc}\"> <div class=\"timeline-arrow\"> <em></em> <span [ngStyle]=\"{'border-right-color': cardBgc}\"></span> </div> <ng-content></ng-content> </div> <p [ngStyle]=\"{'width': cardBoxWidth}\" class=\"timeline-buttom_time\" *ngIf=\"optTime\">{{optTime*1000 | date: \"y-MM-dd HH:mm:ss\"}}</p> </div> </div>`,\n  // styleUrls: ['./jdb-plg-timeline-item.component.scss']\n})\nexport class JdbPlgTimelineItemComponent implements OnInit {\n\n  constructor() { }\n\n  isLast: boolean;\n  optTime = 0;\n  @Input() cardBoxWidth;\n  @Input() cardBgc;\n\n  @Input()\n  get timeNum() {\n    return this.optTime;\n  }\n  set timeNum(time) {\n    if (!time) {\n      time = 0;\n    }\n    this.optTime = time;\n  }\n  @Input()\n  get lastItem() {\n    return this.isLast;\n  }\n  set lastItem(item) {\n    this.isLast = item;\n  }\n  ngOnInit() {\n  }\n\n}\n","import {Component, forwardRef, HostListener, Input, OnInit} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\nexport type JdbSwitchSizeType = 'default' | 'small';\n\n@Component({\n  selector: 'app-jdb-plg-switch',\n  template: `<span [ngClass]=\"outBoxClass\"> <span class=\"inner-content\"> <ng-container *ngIf=\"checked\"> {{jdbCheckedText}} </ng-container> <ng-container *ngIf=\"!checked\"> {{jdbUncheckedText}} </ng-container> </span> </span> `,\n  // styleUrls: ['./jdb-plg-switch.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => JdbPlgSwitchComponent),\n      multi: true\n    }\n  ]\n})\nexport class JdbPlgSwitchComponent implements OnInit, ControlValueAccessor {\n\n  @Input()\n  set jdbCheckedText(value: string) {\n    this._jdbCheckedText = value;\n  }\n\n  get jdbCheckedText(): string {\n    return this._jdbCheckedText;\n  }\n\n  @Input()\n  set jdbUncheckedText(value: string) {\n    this._jdbUncheckedText = value;\n  }\n\n  get jdbUncheckedText(): string {\n    return this._jdbUncheckedText;\n  }\n\n  @Input()\n  set jdbLoading(value: boolean) {\n    this._jdbLoading = Boolean(value);\n    this.setClassMap();\n  }\n\n  get jdbLoading(): boolean {\n    return this._jdbLoading;\n  }\n\n  @Input()\n  set jdbDisabled(value: boolean) {\n    this._jdbDisabled = Boolean(value);\n    this.setClassMap();\n  }\n\n  get jdbDisabled(): boolean {\n    return this._jdbDisabled;\n  }\n\n  @Input()\n  set jdbSize(value: JdbSwitchSizeType) {\n    this._jdbSize = value;\n    this.setClassMap();\n  }\n\n  get jdbSize(): JdbSwitchSizeType {\n    return this._jdbSize;\n  }\n\n  @Input()\n  set jdbControl(value: boolean) {\n    this._jdbControl = Boolean(value);\n  }\n\n  get jdbControl(): boolean {\n    return this._jdbControl;\n  }\n\n  outBoxClass: object;  // 外层容器class\n  checked = false; // 是否打开。默认关闭\n  prefixCls = 'jdb-switch';  // class前缀\n\n\n  private _jdbCheckedText: string;  // 打开时展示的文字\n  private _jdbUncheckedText: string;  // 关闭时展示的文字\n  private _jdbLoading = false;  // 是否显示加载圈\n  private _jdbDisabled = false;  // 是否禁用\n  private _jdbControl = false;  // 是否完全控制\n  private _jdbSize: JdbSwitchSizeType = 'default';  // 尺寸\n\n  onChange: (value: boolean) => void = () => null;\n  onTouched: () => void = () => null;\n\n  @HostListener('click', ['$event'])\n  onClick(ev: MouseEvent): void {\n    if (!this.jdbDisabled && !this.jdbLoading && !this.jdbControl) {\n      this.updateSwitchStatus(!this.checked, true);\n    }\n  }\n\n  /**\n   * 更新开关状态\n   * @param {boolean} value\n   * @param {boolean} isEmit\n   */\n  updateSwitchStatus(value: boolean, isEmit: boolean): void {\n    if (this.checked === value) {\n      return;\n    }\n    this.checked = value;\n    this.setClassMap();\n    if (isEmit) {\n      this.onChange(this.checked);\n    }\n  }\n\n  setClassMap(): void {\n    this.outBoxClass = {\n      [this.prefixCls]: true,\n      [`${this.prefixCls}-checked`]: this.checked,\n      [`${this.prefixCls}-loading`]: this.jdbLoading,\n      [`${this.prefixCls}-disabled`]: this.jdbDisabled,\n      [`${this.prefixCls}-small`]: this.jdbSize === 'small'\n    };\n  }\n\n  // 实现ControlValueAccessor接口方法\n  writeValue(value: boolean): void {\n    this.updateSwitchStatus(value, false);\n  }\n\n  registerOnChange(fn: (_: boolean) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.jdbDisabled = isDisabled;\n  }\n\n  ngOnInit() {\n    this.setClassMap();\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JdbPlgToastComponent } from './components/jdb-plg-toast/jdb-plg-toast.component';\nimport { JdbTabComponent } from './components/jdb-plg-tab/jdb-tab.component';\nimport { ShowPictureComponent } from './components/show-picture/show-picture.component';\nimport { PictureViewerComponent } from './components/picture-viewer/picture-viewer.component';\nimport { DragDirective } from './directive/drag.directive';\nimport { JdbPlgPaginationComponent } from './components/jdb-plg-pagination/jdb-plg-pagination.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JdbPlgButtonComponent } from './components/jdb-plg-button/jdb-plg-button.component';\nimport { JdbPlgDialogComponent } from './components/jdb-plg-dialog/jdb-plg-dialog.component';\nimport { JdbPlgNewDialogComponent } from './components/jdb-plg-new-dialog/jdb-plg-new-dialog.component';\n\nimport { OnlyNumberDirective } from './directive/only-number.directive';\nimport { WatermarkDirective } from './directive/watermark.directive';\nimport { JdbPlgSelectComponent } from './components/jdb-plg-select/jdb-plg-select.component';\nimport { JdbPlgInputComponent } from './components/jdb-plg-input/jdb-plg-input.component';\n// import { JdbPlgAutocompleteDirective } from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.directive';\nimport { JdbPlgAutocompleteComponent } from './components/jdb-plg-autocomplete/jdb-plg-autocomplete.component';\nimport { JdbPlgBaseService } from './services/jdb-plg-base/jdb-plg-base.service';\nimport { FillTableService } from './services/jdb-plg-base/fill-table.service';\nimport { CommonMethodService } from './services/jdb-plg-base/common-method.service';\nimport { SendStatisticService } from './services/jdb-plg-base/send-statistic.service';\nimport { JdbModalService } from './services/jdb-plg-base/jdb-modal.service';\n\nimport { JdbPlgTableErrorComponent } from './components/jdb-plg-table-error/jdb-plg-table-error.component';\nimport { ProvinceReformPipe } from './pipe/province-reform.pipe';\nimport { AmountReformPipe } from './pipe/amount-reform.pipe';\nimport { JdbPlgTimelineItemComponent } from './components/jdb-plg-timeline-item/jdb-plg-timeline-item.component';\nimport { JdbPlgSwitchComponent } from './components/jdb-plg-switch/jdb-plg-switch.component';\nimport { from } from 'rxjs';\n\nconst MDL_MODULES = [\n  ShowPictureComponent,\n  PictureViewerComponent,\n  DragDirective,\n  WatermarkDirective,\n  JdbPlgPaginationComponent,\n  JdbPlgButtonComponent,\n  JdbPlgDialogComponent,\n  JdbPlgNewDialogComponent,\n  JdbPlgSelectComponent,\n  JdbPlgInputComponent,\n  JdbPlgTimelineItemComponent,\n  // JdbPlgAutocompleteDirective,\n  JdbPlgAutocompleteComponent,\n  JdbTabComponent,\n  JdbPlgTableErrorComponent,\n  ProvinceReformPipe,\n  AmountReformPipe,\n  JdbPlgSwitchComponent\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: MDL_MODULES,\n  declarations: [\n    JdbPlgToastComponent,\n    JdbTabComponent,\n    ShowPictureComponent,\n    PictureViewerComponent,\n    DragDirective,\n    JdbPlgPaginationComponent,\n    OnlyNumberDirective,\n    WatermarkDirective,\n    JdbPlgSelectComponent,\n    JdbPlgButtonComponent,\n    JdbPlgDialogComponent,\n    JdbPlgNewDialogComponent,\n    JdbPlgInputComponent,\n    JdbPlgTimelineItemComponent,\n    // JdbPlgAutocompleteDirective,\n    JdbPlgAutocompleteComponent,\n    JdbPlgTableErrorComponent,\n    ProvinceReformPipe,\n    AmountReformPipe,\n    JdbPlgSwitchComponent,\n  ],\n  providers: [JdbPlgBaseService, CommonMethodService, FillTableService, SendStatisticService, JdbModalService],\n  entryComponents: [JdbPlgToastComponent,JdbPlgNewDialogComponent,JdbPlgDialogComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n\n})\nexport class JdbPlgUiModule {\n}\n\nexport { JdbPlgBaseService } from './services/jdb-plg-base/jdb-plg-base.service';\nexport { FillTableService } from './services/jdb-plg-base/fill-table.service';\n\nexport { CommonMethodService } from './services/jdb-plg-base/common-method.service';\n\nexport { SendStatisticService } from './services/jdb-plg-base/send-statistic.service';\nexport { JdbModalService } from './services/jdb-plg-base/jdb-modal.service';\nexport { jQueryLikeParamSerializer } from './services/jdb-plg-base/query-string';\n"],"names":[],"mappings":"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"}